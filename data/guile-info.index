* #:accessor:                            Slot Options.        (line  93)
* #:allocation:                          Slot Options.        (line 142)
* #:class:                               Slot Options.        (line 154)
* #:each-subclass:                       Slot Options.        (line 164)
* #:getter:                              Slot Options.        (line  91)
* #:init-form:                           Slot Options.        (line  11)
* #:init-keyword:                        Slot Options.        (line  13)
* #:init-thunk:                          Slot Options.        (line  12)
* #:init-value:                          Slot Options.        (line  10)
* #:instance:                            Slot Options.        (line 148)
* #:metaclass:                           Class Definition.    (line  56)
* #:name:                                Class Definition.    (line  66)
* #:setter:                              Slot Options.        (line  92)
* #:slot-ref:                            Slot Options.        (line 174)
* #:slot-ref <1>:                        Slot Options.        (line 187)
* #:slot-ref <2>:                        Slot Description Example.  (line  75)
* #:slot-set!:                           Slot Options.        (line 174)
* #:slot-set! <1>:                       Slot Options.        (line 188)
* #:slot-set! <2>:                       Slot Description Example.  (line  75)
* #:virtual:                             Slot Options.        (line 174)
* %:                                     Shift and Reset.     (line  15)
* % <1>:                                 Shift and Reset.     (line  16)
* % <2>:                                 Shift and Reset.     (line  17)
* %char-set-dump:                        Querying Character Sets.  (line   9)
* %default-port-conversion-strategy:     Encoding.            (line  83)
* %library-dir:                          Build Config.        (line  39)
* %make-void-port:                       Void Ports.          (line   9)
* %package-data-dir:                     Build Config.        (line  33)
* %read-delimited!:                      Line/Delimited.      (line  60)
* %read-line:                            Line/Delimited.      (line  78)
* %search-load-path:                     Load Paths.          (line  61)
* %site-ccache-dir:                      Installing Site Packages.  (line   6)
* %site-ccache-dir <1>:                  Build Config.        (line  55)
* %site-dir:                             Installing Site Packages.  (line   6)
* %site-dir <1>:                         Build Config.        (line  49)
* %string-dump:                          String Internals.    (line  29)
* &assertion:                            rnrs conditions.     (line  99)
* &condition:                            rnrs conditions.     (line  37)
* &error:                                rnrs conditions.     (line  88)
* &i/o:                                  R6RS I/O Conditions. (line   9)
* &i/o-decoding:                         R6RS Transcoders.    (line  83)
* &i/o-encoding:                         R6RS Transcoders.    (line  99)
* &i/o-file-already-exists:              R6RS I/O Conditions. (line  51)
* &i/o-file-does-not-exist:              R6RS I/O Conditions. (line  57)
* &i/o-file-is-read-only:                R6RS I/O Conditions. (line  45)
* &i/o-file-protection:                  R6RS I/O Conditions. (line  38)
* &i/o-filename:                         R6RS I/O Conditions. (line  31)
* &i/o-invalid-position:                 R6RS I/O Conditions. (line  24)
* &i/o-port:                             R6RS I/O Conditions. (line  63)
* &i/o-read:                             R6RS I/O Conditions. (line  14)
* &i/o-write:                            R6RS I/O Conditions. (line  19)
* &implementation-restriction:           rnrs conditions.     (line 126)
* &irritants:                            rnrs conditions.     (line 105)
* &lexical:                              rnrs conditions.     (line 132)
* &message:                              rnrs conditions.     (line  70)
* &no-infinities:                        rnrs arithmetic flonums.  (line 117)
* &no-nans:                              rnrs arithmetic flonums.  (line 124)
* &non-continuable:                      rnrs conditions.     (line 120)
* &serious:                              rnrs conditions.     (line  82)
* &syntax:                               rnrs conditions.     (line 138)
* &undefined:                            rnrs conditions.     (line 147)
* &violation:                            rnrs conditions.     (line  93)
* &warning:                              rnrs conditions.     (line  77)
* &who:                                  rnrs conditions.     (line 112)
* ':                                     Expression Syntax.   (line  49)
* (oop goops):                           GOOPS.               (line  22)
* *:                                     Arithmetic.          (line  23)
* * <1>:                                 rnrs base.           (line 239)
* *scm_to_latin1_stringn:                Conversion to/from C.  (line 183)
* *scm_to_stringn:                       Conversion to/from C.  (line 133)
* *scm_to_utf32_stringn:                 Conversion to/from C.  (line 185)
* *scm_to_utf8_stringn:                  Conversion to/from C.  (line 184)
* +:                                     Arithmetic.          (line  12)
* + <1>:                                 rnrs base.           (line 237)
* ,:                                     Expression Syntax.   (line  77)
* ,@:                                    Expression Syntax.   (line  88)
* -:                                     Arithmetic.          (line  17)
* - <1>:                                 rnrs base.           (line 238)
* ->char-set:                            Creating Character Sets.  (line  76)
* /:                                     Arithmetic.          (line  28)
* / <1>:                                 rnrs base.           (line 240)
* 1+:                                    Arithmetic.          (line   6)
* 1+ <1>:                                Arithmetic.          (line  33)
* 1-:                                    Arithmetic.          (line   6)
* 1- <1>:                                Arithmetic.          (line  37)
* <:                                     Comparison.          (line  17)
* < <1>:                                 rnrs base.           (line 181)
* <=:                                    Comparison.          (line  25)
* <= <1>:                                rnrs base.           (line 183)
* =:                                     Comparison.          (line  13)
* = <1>:                                 rnrs base.           (line 180)
* ==:                                    Equality.            (line  70)
* >:                                     Comparison.          (line  21)
* > <1>:                                 rnrs base.           (line 182)
* >=:                                    Comparison.          (line  30)
* >= <1>:                                rnrs base.           (line 184)
* @:                                     Using Guile Modules. (line 121)
* @@:                                    Using Guile Modules. (line 125)
* `:                                     Expression Syntax.   (line  67)
* abandoned-mutex-exception?:            SRFI-18 Exceptions.  (line  33)
* abort:                                 Shift and Reset.     (line  37)
* abort <1>:                             Dynamic Environment Instructions.  (line   9)
* abort-to-prompt:                       Prompt Primitives.   (line  34)
* abs:                                   Arithmetic.          (line  41)
* abs <1>:                               rnrs base.           (line 243)
* absolute-file-name?:                   File System.         (line 374)
* accept:                                Network Sockets and Communication.  (line 194)
* access?:                               File System.         (line  12)
* acons:                                 Adding or Setting Alist Entries.  (line  92)
* acos:                                  Scientific.          (line  34)
* acos <1>:                              rnrs base.           (line 151)
* acosh:                                 Scientific.          (line  63)
* activate-readline:                     Readline Functions.  (line  45)
* adapt-response-version:                Responses.           (line  46)
* add:                                   Inlined Mathematical Instructions.  (line  16)
* add-duration:                          SRFI-19 Time.        (line  92)
* add-duration!:                         SRFI-19 Time.        (line  93)
* add-ephemeral-stepping-trap!:          High-Level Traps.    (line  75)
* add-ephemeral-trap-at-frame-finish!:   High-Level Traps.    (line  68)
* add-fdes-finalizer!:                   Ports and File Descriptors.  (line 397)
* add-hook!:                             Hook Reference.      (line  42)
* add-method!:                           Method Definition Internals.  (line  50)
* add-method! <1>:                       Method Definition Internals.  (line  53)
* add-method! <2>:                       Method Definition Internals.  (line  56)
* add-method! <3>:                       Method Definition Internals.  (line  62)
* add-method! <4>:                       Method Definition Internals.  (line  68)
* add-ref-resolver!:                     texinfo html.        (line  22)
* add-to-load-path:                      Load Paths.          (line  28)
* add-trace-at-procedure-call!:          High-Level Traps.    (line  55)
* add-trap!:                             Trap States.         (line  22)
* add-trap-at-procedure-call!:           High-Level Traps.    (line  50)
* add-trap-at-source-location!:          High-Level Traps.    (line  61)
* add/immediate:                         Inlined Mathematical Instructions.  (line  19)
* addrinfo:addr:                         Network Databases.   (line 148)
* addrinfo:canonname:                    Network Databases.   (line 152)
* addrinfo:fam:                          Network Databases.   (line 139)
* addrinfo:flags:                        Network Databases.   (line 136)
* addrinfo:protocol:                     Network Databases.   (line 145)
* addrinfo:socktype:                     Network Databases.   (line 142)
* alarm:                                 Signals.             (line 120)
* alignof:                               Foreign Structs.     (line  21)
* alist->hash-table:                     Hash Table Reference.  (line  66)
* alist->hash-table <1>:                 SRFI-69 Creating hash tables.  (line  57)
* alist->hashq-table:                    Hash Table Reference.  (line  67)
* alist->hashv-table:                    Hash Table Reference.  (line  68)
* alist->hashx-table:                    Hash Table Reference.  (line  69)
* alist->vhash:                          VHashes.             (line 123)
* alist-cons:                            SRFI-1 Association Lists.  (line  24)
* alist-copy:                            SRFI-1 Association Lists.  (line  33)
* alist-delete:                          SRFI-1 Association Lists.  (line  37)
* alist-delete!:                         SRFI-1 Association Lists.  (line  38)
* all-mapped-elf-images:                 Bytecode.            (line 138)
* all-threads:                           Threads.             (line  20)
* alloc-frame:                           Function Prologue Instructions.  (line  39)
* allocate-struct:                       Inlined Scheme Instructions.  (line  44)
* allocate-struct/immediate:             Inlined Scheme Instructions.  (line  58)
* allow-legacy-syntax-objects?:          Syntax Transformer Helpers.  (line  56)
* and:                                   and or.              (line  10)
* and <1>:                               rnrs base.           (line 120)
* and-let*:                              SRFI-2.              (line  14)
* and=>:                                 Higher-Order Functions.  (line  47)
* angle:                                 Complex.             (line  28)
* angle <1>:                             rnrs base.           (line 140)
* any:                                   SRFI-1 Searching.    (line  46)
* any->c32vector:                        SRFI-4 Extensions.   (line  22)
* any->c64vector:                        SRFI-4 Extensions.   (line  23)
* any->f32vector:                        SRFI-4 Extensions.   (line  20)
* any->f64vector:                        SRFI-4 Extensions.   (line  21)
* any->s16vector:                        SRFI-4 Extensions.   (line  15)
* any->s32vector:                        SRFI-4 Extensions.   (line  17)
* any->s64vector:                        SRFI-4 Extensions.   (line  19)
* any->s8vector:                         SRFI-4 Extensions.   (line  13)
* any->u16vector:                        SRFI-4 Extensions.   (line  14)
* any->u32vector:                        SRFI-4 Extensions.   (line  16)
* any->u64vector:                        SRFI-4 Extensions.   (line  18)
* any->u8vector:                         SRFI-4 Extensions.   (line  12)
* any-bits-set?:                         SRFI-60.             (line  24)
* append:                                Append/Reverse.      (line  13)
* append <1>:                            Append/Reverse.      (line  14)
* append <2>:                            rnrs base.           (line 201)
* append <3>:                            rnrs base.           (line 202)
* append!:                               Append/Reverse.      (line  15)
* append! <1>:                           Append/Reverse.      (line  16)
* append-map:                            SRFI-1 Fold and Map. (line 177)
* append-map!:                           SRFI-1 Fold and Map. (line 178)
* append-reverse:                        SRFI-1 Length Append etc.  (line  22)
* append-reverse!:                       SRFI-1 Length Append etc.  (line  23)
* apply:                                 Fly Evaluation.      (line  66)
* apply <1>:                             rnrs base.           (line 361)
* apply-non-program:                     Trampoline Instructions.  (line  46)
* apply-templates:                       sxml apply-templates.  (line  34)
* apropos:                               Help Commands.       (line  32)
* apropos-completion-function:           Readline Functions.  (line 105)
* args-fold:                             SRFI-37.             (line  63)
* arithmetic-shift:                      SRFI-60.             (line  26)
* arity:allow-other-keys?:               Compiled Procedures. (line  98)
* arity:end:                             Compiled Procedures. (line  93)
* arity:kw:                              Compiled Procedures. (line  97)
* arity:nopt:                            Compiled Procedures. (line  95)
* arity:nreq:                            Compiled Procedures. (line  94)
* arity:rest?:                           Compiled Procedures. (line  96)
* arity:start:                           Compiled Procedures. (line  92)
* array->list:                           Array Procedures.    (line 144)
* array-cell-ref:                        Arrays as arrays of arrays.  (line  28)
* array-cell-set!:                       Arrays as arrays of arrays.  (line  72)
* array-contents:                        Shared Arrays.       (line 107)
* array-copy:                            Array Procedures.    (line 212)
* array-copy!:                           Array Procedures.    (line 148)
* array-copy-in-order!:                  Array Procedures.    (line 149)
* array-dimensions:                      Array Procedures.    (line 117)
* array-equal?:                          Array Procedures.    (line 160)
* array-fill!:                           Array Procedures.    (line 155)
* array-for-each:                        Array Procedures.    (line 182)
* array-in-bounds?:                      Array Procedures.    (line  98)
* array-index-map!:                      Array Procedures.    (line 187)
* array-length:                          Array Procedures.    (line 131)
* array-map!:                            Array Procedures.    (line 166)
* array-map-in-order!:                   Array Procedures.    (line 167)
* array-rank:                            Array Procedures.    (line 137)
* array-ref:                             Array Procedures.    (line  91)
* array-set!:                            Array Procedures.    (line 107)
* array-shape:                           Array Procedures.    (line 116)
* array-slice:                           Arrays as arrays of arrays.  (line  51)
* array-slice-for-each:                  Arrays as arrays of arrays.  (line 108)
* array-slice-for-each-in-order:         Arrays as arrays of arrays.  (line 145)
* array-type:                            Array Procedures.    (line  85)
* array?:                                Array Procedures.    (line  21)
* ash:                                   Bitwise Operations.  (line  67)
* ash <1>:                               Inlined Mathematical Instructions.  (line  43)
* asin:                                  Scientific.          (line  31)
* asin <1>:                              rnrs base.           (line 150)
* asinh:                                 Scientific.          (line  60)
* assert:                                rnrs base.           (line 313)
* assert-curr-char:                      sxml ssax input-parse.  (line  41)
* assert-nargs-ee:                       Function Prologue Instructions.  (line  17)
* assert-nargs-ee/locals:                Function Prologue Instructions.  (line  50)
* assert-nargs-ge:                       Function Prologue Instructions.  (line  18)
* assert-nargs-le:                       Function Prologue Instructions.  (line  19)
* assertion-violation:                   rnrs base.           (line 318)
* assertion-violation?:                  rnrs conditions.     (line 101)
* assoc:                                 Retrieving Alist Entries.  (line  12)
* assoc <1>:                             SRFI-1 Association Lists.  (line  10)
* assoc <2>:                             rnrs lists.          (line  56)
* assoc-ref:                             Retrieving Alist Entries.  (line  26)
* assoc-remove!:                         Removing Alist Entries.  (line  58)
* assoc-set!:                            Adding or Setting Alist Entries.  (line 101)
* assp:                                  rnrs lists.          (line  55)
* assq:                                  Retrieving Alist Entries.  (line  10)
* assq <1>:                              rnrs lists.          (line  58)
* assq-ref:                              Retrieving Alist Entries.  (line  24)
* assq-remove!:                          Removing Alist Entries.  (line  56)
* assq-set!:                             Adding or Setting Alist Entries.  (line  99)
* assv:                                  Retrieving Alist Entries.  (line  11)
* assv <1>:                              rnrs lists.          (line  57)
* assv-ref:                              Retrieving Alist Entries.  (line  25)
* assv-remove!:                          Removing Alist Entries.  (line  57)
* assv-set!:                             Adding or Setting Alist Entries.  (line 100)
* atan:                                  Scientific.          (line  37)
* atan <1>:                              Scientific.          (line  38)
* atan <2>:                              rnrs base.           (line 152)
* atanh:                                 Scientific.          (line  66)
* atomic-box-compare-and-swap!:          Atomics.             (line  52)
* atomic-box-compare-and-swap! <1>:      Inlined Atomic Instructions.  (line  21)
* atomic-box-ref:                        Atomics.             (line  42)
* atomic-box-ref <1>:                    Inlined Atomic Instructions.  (line  11)
* atomic-box-set!:                       Atomics.             (line  45)
* atomic-box-set! <1>:                   Inlined Atomic Instructions.  (line  14)
* atomic-box-swap!:                      Atomics.             (line  48)
* atomic-box-swap! <1>:                  Inlined Atomic Instructions.  (line  17)
* atomic-box?:                           Atomics.             (line  39)
* attlist->alist:                        SSAX.                (line 174)
* attlist-add:                           SSAX.                (line 167)
* attlist-fold:                          SSAX.                (line 176)
* attlist-null?:                         SSAX.                (line 169)
* attlist-remove-top:                    SSAX.                (line 172)
* backtrace:                             Debug Commands.      (line   9)
* backtrace <1>:                         Pre-Unwind Debugging.  (line  23)
* basename:                              File System.         (line 344)
* begin:                                 begin.               (line  16)
* begin <1>:                             rnrs base.           (line 106)
* begin-thread:                          Threads.             (line 100)
* binary-port?:                          rnrs io ports.       (line  37)
* bind:                                  Network Sockets and Communication.  (line 166)
* bind <1>:                              Network Sockets and Communication.  (line 167)
* bind <2>:                              Network Sockets and Communication.  (line 168)
* bind <3>:                              Network Sockets and Communication.  (line 170)
* bind-kwargs:                           Function Prologue Instructions.  (line  63)
* bind-rest:                             Function Prologue Instructions.  (line  83)
* bind-textdomain-codeset:               Gettext Support.     (line 100)
* binding:                               Module Commands.     (line  18)
* binding-index:                         Frames.              (line  47)
* binding-name:                          Frames.              (line  48)
* binding-ref:                           Frames.              (line  57)
* binding-representation:                Frames.              (line  50)
* binding-set!:                          Frames.              (line  58)
* binding-slot:                          Frames.              (line  49)
* binding:boxed?:                        Compiled Procedures. (line  60)
* binding:end:                           Compiled Procedures. (line  63)
* binding:index:                         Compiled Procedures. (line  61)
* binding:name:                          Compiled Procedures. (line  59)
* binding:start:                         Compiled Procedures. (line  62)
* bindtextdomain:                        Gettext Support.     (line  84)
* bit-count:                             Bit Vectors.         (line  72)
* bit-count <1>:                         SRFI-60.             (line  28)
* bit-count*:                            Bit Vectors.         (line 115)
* bit-extract:                           Bitwise Operations.  (line 141)
* bit-field:                             SRFI-60.             (line  27)
* bit-invert!:                           Bit Vectors.         (line  88)
* bit-position:                          Bit Vectors.         (line  79)
* bit-set*!:                             Bit Vectors.         (line  92)
* bit-set?:                              SRFI-60.             (line  25)
* bitvector:                             Bit Vectors.         (line  30)
* bitvector->list:                       Bit Vectors.         (line  67)
* bitvector-fill!:                       Bit Vectors.         (line  58)
* bitvector-length:                      Bit Vectors.         (line  34)
* bitvector-ref:                         Bit Vectors.         (line  42)
* bitvector-set!:                        Bit Vectors.         (line  49)
* bitvector?:                            Bit Vectors.         (line  15)
* bitwise-and:                           SRFI-60.             (line  20)
* bitwise-and <1>:                       rnrs arithmetic bitwise.  (line  15)
* bitwise-arithmetic-shift:              rnrs arithmetic bitwise.  (line  56)
* bitwise-arithmetic-shift-left:         rnrs arithmetic bitwise.  (line  57)
* bitwise-arithmetic-shift-right:        rnrs arithmetic bitwise.  (line  58)
* bitwise-bit-count:                     rnrs arithmetic bitwise.  (line  27)
* bitwise-bit-field:                     rnrs arithmetic bitwise.  (line  46)
* bitwise-bit-set?:                      rnrs arithmetic bitwise.  (line  38)
* bitwise-copy-bit:                      rnrs arithmetic bitwise.  (line  42)
* bitwise-copy-bit-field:                rnrs arithmetic bitwise.  (line  51)
* bitwise-first-bit-set:                 rnrs arithmetic bitwise.  (line  34)
* bitwise-if:                            SRFI-60.             (line  35)
* bitwise-if <1>:                        rnrs arithmetic bitwise.  (line  22)
* bitwise-ior:                           SRFI-60.             (line  21)
* bitwise-ior <1>:                       rnrs arithmetic bitwise.  (line  16)
* bitwise-length:                        rnrs arithmetic bitwise.  (line  31)
* bitwise-merge:                         SRFI-60.             (line  36)
* bitwise-not:                           SRFI-60.             (line  23)
* bitwise-not <1>:                       rnrs arithmetic bitwise.  (line  14)
* bitwise-reverse-bit-field:             rnrs arithmetic bitwise.  (line  68)
* bitwise-rotate-bit-field:              rnrs arithmetic bitwise.  (line  63)
* bitwise-xor:                           SRFI-60.             (line  22)
* bitwise-xor <1>:                       rnrs arithmetic bitwise.  (line  17)
* boolean?:                              Booleans.            (line  61)
* boolean? <1>:                          rnrs base.           (line  11)
* booleans->integer:                     SRFI-60.             (line  94)
* bound-identifier=?:                    Syntax Transformer Helpers.  (line  12)
* bound-identifier=? <1>:                rnrs syntax-case.    (line  33)
* box:                                   SRFI-111.            (line   9)
* box <1>:                               Lexical Environment Instructions.  (line  51)
* box-ref:                               Lexical Environment Instructions.  (line  54)
* box-set!:                              Lexical Environment Instructions.  (line  58)
* box?:                                  SRFI-111.            (line  13)
* br:                                    Branch Instructions. (line  10)
* br-if-<:                               Branch Instructions. (line  53)
* br-if-<=:                              Branch Instructions. (line  54)
* br-if-=:                               Branch Instructions. (line  52)
* br-if-char:                            Branch Instructions. (line  37)
* br-if-eq:                              Branch Instructions. (line  47)
* br-if-eqv:                             Branch Instructions. (line  48)
* br-if-f64-<:                           Unboxed Floating-Point Arithmetic.  (line  26)
* br-if-f64-<=:                          Unboxed Floating-Point Arithmetic.  (line  27)
* br-if-f64-=:                           Unboxed Floating-Point Arithmetic.  (line  25)
* br-if-f64->:                           Unboxed Floating-Point Arithmetic.  (line  28)
* br-if-f64->=:                          Unboxed Floating-Point Arithmetic.  (line  29)
* br-if-logtest:                         Branch Instructions. (line  58)
* br-if-nargs-gt:                        Function Prologue Instructions.  (line  30)
* br-if-nargs-lt:                        Function Prologue Instructions.  (line  29)
* br-if-nargs-ne:                        Function Prologue Instructions.  (line  28)
* br-if-nil:                             Branch Instructions. (line  25)
* br-if-npos-gt:                         Function Prologue Instructions.  (line  54)
* br-if-null:                            Branch Instructions. (line  21)
* br-if-pair:                            Branch Instructions. (line  29)
* br-if-struct:                          Branch Instructions. (line  33)
* br-if-tc7:                             Branch Instructions. (line  41)
* br-if-true:                            Branch Instructions. (line  17)
* br-if-u64-<:                           Unboxed Integer Arithmetic.  (line  41)
* br-if-u64-<-scm:                       Unboxed Integer Arithmetic.  (line  49)
* br-if-u64-<=:                          Unboxed Integer Arithmetic.  (line  42)
* br-if-u64-<=-scm:                      Unboxed Integer Arithmetic.  (line  51)
* br-if-u64-=:                           Unboxed Integer Arithmetic.  (line  40)
* br-if-u64-=-scm:                       Unboxed Integer Arithmetic.  (line  47)
* break:                                 Debug Commands.      (line  57)
* break <1>:                             while do.            (line  72)
* break <2>:                             SRFI-1 Searching.    (line  32)
* break!:                                SRFI-1 Searching.    (line  33)
* break-at-source:                       Debug Commands.      (line  60)
* broadcast-condition-variable:          Mutexes and Condition Variables.  (line 219)
* buffer-mode:                           R6RS File Ports.     (line   9)
* buffer-mode?:                          R6RS File Ports.     (line  19)
* build-cont:                            Building CPS.        (line  39)
* build-cont <1>:                        Building CPS.        (line  40)
* build-cont <2>:                        Building CPS.        (line  41)
* build-cont <3>:                        Building CPS.        (line  42)
* build-cont <4>:                        Building CPS.        (line  43)
* build-cont <5>:                        Building CPS.        (line  44)
* build-cont <6>:                        Building CPS.        (line  45)
* build-exp:                             Building CPS.        (line  23)
* build-exp <1>:                         Building CPS.        (line  24)
* build-exp <2>:                         Building CPS.        (line  25)
* build-exp <3>:                         Building CPS.        (line  26)
* build-exp <4>:                         Building CPS.        (line  27)
* build-exp <5>:                         Building CPS.        (line  28)
* build-exp <6>:                         Building CPS.        (line  29)
* build-exp <7>:                         Building CPS.        (line  30)
* build-exp <8>:                         Building CPS.        (line  31)
* build-exp <9>:                         Building CPS.        (line  32)
* build-exp <10>:                        Building CPS.        (line  33)
* build-exp <11>:                        Building CPS.        (line  34)
* build-exp <12>:                        Building CPS.        (line  35)
* build-exp <13>:                        Building CPS.        (line  36)
* build-exp <14>:                        Building CPS.        (line  37)
* build-exp <15>:                        Building CPS.        (line  38)
* build-relative-ref:                    URIs.                (line 145)
* build-request:                         Requests.            (line  77)
* build-response:                        Responses.           (line  40)
* build-term:                            Building CPS.        (line  21)
* build-term <1>:                        Building CPS.        (line  22)
* build-uri:                             URIs.                (line  32)
* build-uri-reference:                   URIs.                (line 133)
* builtin-ref:                           Trampoline Instructions.  (line  43)
* bv-f32-ref:                            Inlined Bytevector Instructions.  (line  24)
* bv-f32-set!:                           Inlined Bytevector Instructions.  (line  44)
* bv-f64-ref:                            Inlined Bytevector Instructions.  (line  25)
* bv-f64-set!:                           Inlined Bytevector Instructions.  (line  45)
* bv-length:                             Inlined Bytevector Instructions.  (line  12)
* bv-s16-ref:                            Inlined Bytevector Instructions.  (line  19)
* bv-s16-set!:                           Inlined Bytevector Instructions.  (line  39)
* bv-s32-ref:                            Inlined Bytevector Instructions.  (line  21)
* bv-s32-set!:                           Inlined Bytevector Instructions.  (line  41)
* bv-s64-ref:                            Inlined Bytevector Instructions.  (line  23)
* bv-s64-set!:                           Inlined Bytevector Instructions.  (line  43)
* bv-s8-ref:                             Inlined Bytevector Instructions.  (line  17)
* bv-s8-set!:                            Inlined Bytevector Instructions.  (line  37)
* bv-u16-ref:                            Inlined Bytevector Instructions.  (line  18)
* bv-u16-set!:                           Inlined Bytevector Instructions.  (line  38)
* bv-u32-ref:                            Inlined Bytevector Instructions.  (line  20)
* bv-u32-set!:                           Inlined Bytevector Instructions.  (line  40)
* bv-u64-ref:                            Inlined Bytevector Instructions.  (line  22)
* bv-u64-set!:                           Inlined Bytevector Instructions.  (line  42)
* bv-u8-ref:                             Inlined Bytevector Instructions.  (line  16)
* bv-u8-set!:                            Inlined Bytevector Instructions.  (line  36)
* bytevector->pointer:                   Void Pointers and Byte Access.  (line  30)
* bytevector->sint-list:                 Bytevectors and Integer Lists.  (line  28)
* bytevector->string:                    Representing Strings as Bytes.  (line  51)
* bytevector->string <1>:                R6RS Transcoders.    (line 176)
* bytevector->u8-list:                   Bytevectors and Integer Lists.  (line  13)
* bytevector->uint-list:                 Bytevectors and Integer Lists.  (line  23)
* bytevector-copy:                       Bytevector Manipulation.  (line  47)
* bytevector-copy!:                      Bytevector Manipulation.  (line  38)
* bytevector-fill!:                      Bytevector Manipulation.  (line  34)
* bytevector-ieee-double-native-ref:     Bytevectors as Floats.  (line  30)
* bytevector-ieee-double-native-set!:    Bytevectors as Floats.  (line  37)
* bytevector-ieee-double-ref:            Bytevectors as Floats.  (line  11)
* bytevector-ieee-double-set!:           Bytevectors as Floats.  (line  19)
* bytevector-ieee-single-native-ref:     Bytevectors as Floats.  (line  29)
* bytevector-ieee-single-native-set!:    Bytevectors as Floats.  (line  36)
* bytevector-ieee-single-ref:            Bytevectors as Floats.  (line  10)
* bytevector-ieee-single-set!:           Bytevectors as Floats.  (line  17)
* bytevector-length:                     Bytevector Manipulation.  (line  22)
* bytevector-s16-native-ref:             Bytevectors as Integers.  (line  96)
* bytevector-s16-native-set!:            Bytevectors as Integers.  (line 112)
* bytevector-s16-ref:                    Bytevectors as Integers.  (line  56)
* bytevector-s16-set!:                   Bytevectors as Integers.  (line  75)
* bytevector-s32-native-ref:             Bytevectors as Integers.  (line  98)
* bytevector-s32-native-set!:            Bytevectors as Integers.  (line 114)
* bytevector-s32-ref:                    Bytevectors as Integers.  (line  58)
* bytevector-s32-set!:                   Bytevectors as Integers.  (line  77)
* bytevector-s64-native-ref:             Bytevectors as Integers.  (line 100)
* bytevector-s64-native-set!:            Bytevectors as Integers.  (line 116)
* bytevector-s64-ref:                    Bytevectors as Integers.  (line  60)
* bytevector-s64-set!:                   Bytevectors as Integers.  (line  79)
* bytevector-s8-ref:                     Bytevectors as Integers.  (line  54)
* bytevector-s8-set!:                    Bytevectors as Integers.  (line  73)
* bytevector-sint-ref:                   Bytevectors as Integers.  (line  31)
* bytevector-sint-set!:                  Bytevectors as Integers.  (line  43)
* bytevector-u16-native-ref:             Bytevectors as Integers.  (line  95)
* bytevector-u16-native-set!:            Bytevectors as Integers.  (line 111)
* bytevector-u16-ref:                    Bytevectors as Integers.  (line  55)
* bytevector-u16-set!:                   Bytevectors as Integers.  (line  74)
* bytevector-u32-native-ref:             Bytevectors as Integers.  (line  97)
* bytevector-u32-native-set!:            Bytevectors as Integers.  (line 113)
* bytevector-u32-ref:                    Bytevectors as Integers.  (line  57)
* bytevector-u32-set!:                   Bytevectors as Integers.  (line  76)
* bytevector-u64-native-ref:             Bytevectors as Integers.  (line  99)
* bytevector-u64-native-set!:            Bytevectors as Integers.  (line 115)
* bytevector-u64-ref:                    Bytevectors as Integers.  (line  59)
* bytevector-u64-set!:                   Bytevectors as Integers.  (line  78)
* bytevector-u8-ref:                     Bytevectors as Integers.  (line  53)
* bytevector-u8-set!:                    Bytevectors as Integers.  (line  72)
* bytevector-uint-ref:                   Bytevectors as Integers.  (line  26)
* bytevector-uint-set!:                  Bytevectors as Integers.  (line  36)
* bytevector=?:                          Bytevector Manipulation.  (line  29)
* bytevector?:                           Bytevector Manipulation.  (line  15)
* c32vector:                             SRFI-4 API.          (line  75)
* c32vector->list:                       SRFI-4 API.          (line 183)
* c32vector-length:                      SRFI-4 API.          (line 103)
* c32vector-ref:                         SRFI-4 API.          (line 129)
* c32vector-set!:                        SRFI-4 API.          (line 156)
* c32vector?:                            SRFI-4 API.          (line  19)
* c64vector:                             SRFI-4 API.          (line  76)
* c64vector->list:                       SRFI-4 API.          (line 184)
* c64vector-length:                      SRFI-4 API.          (line 104)
* c64vector-ref:                         SRFI-4 API.          (line 130)
* c64vector-set!:                        SRFI-4 API.          (line 157)
* c64vector?:                            SRFI-4 API.          (line  20)
* caaaar:                                Pairs.               (line 112)
* caaaar <1>:                            rnrs base.           (line  50)
* caaadr:                                Pairs.               (line 111)
* caaadr <1>:                            rnrs base.           (line  51)
* caaar:                                 Pairs.               (line  96)
* caaar <1>:                             rnrs base.           (line  42)
* caadar:                                Pairs.               (line 110)
* caadar <1>:                            rnrs base.           (line  52)
* caaddr:                                Pairs.               (line 109)
* caaddr <1>:                            rnrs base.           (line  59)
* caadr:                                 Pairs.               (line  95)
* caadr <1>:                             rnrs base.           (line  43)
* caar:                                  Pairs.               (line  88)
* caar <1>:                              rnrs base.           (line  38)
* cadaar:                                Pairs.               (line 108)
* cadaar <1>:                            rnrs base.           (line  53)
* cadadr:                                Pairs.               (line 107)
* cadadr <1>:                            rnrs base.           (line  58)
* cadar:                                 Pairs.               (line  94)
* cadar <1>:                             rnrs base.           (line  44)
* caddar:                                Pairs.               (line 106)
* caddar <1>:                            rnrs base.           (line  60)
* cadddr:                                Pairs.               (line 105)
* cadddr <1>:                            rnrs base.           (line  61)
* caddr:                                 Pairs.               (line  93)
* caddr <1>:                             rnrs base.           (line  46)
* cadr:                                  Pairs.               (line  87)
* cadr <1>:                              rnrs base.           (line  39)
* call:                                  Procedure Call and Return Instructions.  (line  28)
* call-label:                            Procedure Call and Return Instructions.  (line  40)
* call-with-allocation-limit:            Sandboxed Evaluation.  (line  26)
* call-with-blocked-asyncs:              Asyncs.              (line  51)
* call-with-current-continuation:        Continuations.       (line  33)
* call-with-current-continuation <1>:    rnrs base.           (line 350)
* call-with-error-handling:              Pre-Unwind Debugging.  (line  41)
* call-with-escape-continuation:         Prompt Primitives.   (line 111)
* call-with-file-and-dir:                texinfo.             (line  43)
* call-with-input-file:                  File Ports.          (line 112)
* call-with-input-file <1>:              rnrs io simple.      (line  29)
* call-with-input-string:                String Ports.        (line  13)
* call-with-new-thread:                  Threads.             (line  28)
* call-with-output-encoded-string:       Representing Strings as Bytes.  (line  62)
* call-with-output-file:                 File Ports.          (line 114)
* call-with-output-file <1>:             rnrs io simple.      (line  30)
* call-with-output-string:               String Ports.        (line   6)
* call-with-port:                        rnrs io ports.       (line  83)
* call-with-prompt:                      Prompt Primitives.   (line   9)
* call-with-stack-overflow-handler:      Stack Overflow.      (line 105)
* call-with-time-and-allocation-limits:  Sandboxed Evaluation.  (line  42)
* call-with-time-limit:                  Sandboxed Evaluation.  (line  20)
* call-with-trace:                       Tracing Traps.       (line  90)
* call-with-unblocked-asyncs:            Asyncs.              (line  62)
* call-with-values:                      Multiple Values.     (line  50)
* call-with-values <1>:                  rnrs base.           (line 355)
* call/cc:                               Continuations.       (line  34)
* call/cc <1>:                           rnrs base.           (line 351)
* call/cc <2>:                           Procedure Call and Return Instructions.  (line  85)
* call/ec:                               Prompt Primitives.   (line 112)
* cancel-thread:                         Threads.             (line  82)
* car:                                   Pairs.               (line  70)
* car <1>:                               rnrs base.           (line  36)
* car <2>:                               Inlined Scheme Instructions.  (line  87)
* car+cdr:                               SRFI-1 Selectors.    (line  18)
* case:                                  Conditionals.        (line  87)
* case <1>:                              rnrs base.           (line 117)
* case-lambda:                           Case-lambda.         (line  11)
* case-lambda <1>:                       rnrs control.        (line  26)
* case-lambda*:                          Case-lambda.         (line  59)
* catch:                                 Catch.               (line  53)
* cd:                                    Processes.           (line   6)
* cdaaar:                                Pairs.               (line 104)
* cdaaar <1>:                            rnrs base.           (line  54)
* cdaadr:                                Pairs.               (line 103)
* cdaadr <1>:                            rnrs base.           (line  57)
* cdaar:                                 Pairs.               (line  92)
* cdaar <1>:                             rnrs base.           (line  45)
* cdadar:                                Pairs.               (line 102)
* cdadar <1>:                            rnrs base.           (line  56)
* cdaddr:                                Pairs.               (line 101)
* cdaddr <1>:                            rnrs base.           (line  62)
* cdadr:                                 Pairs.               (line  91)
* cdadr <1>:                             rnrs base.           (line  47)
* cdar:                                  Pairs.               (line  86)
* cdar <1>:                              rnrs base.           (line  40)
* cddaar:                                Pairs.               (line 100)
* cddaar <1>:                            rnrs base.           (line  55)
* cddadr:                                Pairs.               (line  99)
* cddadr <1>:                            rnrs base.           (line  63)
* cddar:                                 Pairs.               (line  90)
* cddar <1>:                             rnrs base.           (line  48)
* cdddar:                                Pairs.               (line  98)
* cdddar <1>:                            rnrs base.           (line  64)
* cddddr:                                Pairs.               (line  97)
* cddddr <1>:                            rnrs base.           (line  65)
* cdddr:                                 Pairs.               (line  89)
* cdddr <1>:                             rnrs base.           (line  49)
* cddr:                                  Pairs.               (line  85)
* cddr <1>:                              rnrs base.           (line  41)
* cdr:                                   Pairs.               (line  71)
* cdr <1>:                               rnrs base.           (line  37)
* cdr <2>:                               Inlined Scheme Instructions.  (line  90)
* ceiling:                               Arithmetic.          (line  69)
* ceiling <1>:                           rnrs base.           (line 246)
* ceiling-quotient:                      Arithmetic.          (line 130)
* ceiling-remainder:                     Arithmetic.          (line 131)
* ceiling/:                              Arithmetic.          (line 129)
* center-string:                         texinfo string-utils.  (line  76)
* centered-quotient:                     Arithmetic.          (line 177)
* centered-remainder:                    Arithmetic.          (line 178)
* centered/:                             Arithmetic.          (line 176)
* change-class:                          Changing the Class of an Instance.  (line  24)
* change-class <1>:                      Changing the Class of an Instance.  (line  26)
* char->formal-name:                     Characters.          (line 254)
* char->integer:                         Characters.          (line 211)
* char->integer <1>:                     rnrs base.           (line  27)
* char->integer <2>:                     Inlined Scheme Instructions.  (line 106)
* char-alphabetic?:                      Characters.          (line 163)
* char-alphabetic? <1>:                  rnrs unicode.        (line  32)
* char-ci<=?:                            Characters.          (line 151)
* char-ci<=? <1>:                        rnrs unicode.        (line  26)
* char-ci<?:                             Characters.          (line 147)
* char-ci<? <1>:                         rnrs unicode.        (line  24)
* char-ci=?:                             Characters.          (line 143)
* char-ci=? <1>:                         rnrs unicode.        (line  23)
* char-ci>=?:                            Characters.          (line 159)
* char-ci>=? <1>:                        rnrs unicode.        (line  27)
* char-ci>?:                             Characters.          (line 155)
* char-ci>? <1>:                         rnrs unicode.        (line  25)
* char-downcase:                         Characters.          (line 225)
* char-downcase <1>:                     rnrs unicode.        (line  10)
* char-foldcase:                         rnrs unicode.        (line  12)
* char-general-category:                 Characters.          (line 187)
* char-general-category <1>:             rnrs unicode.        (line  42)
* char-is-both?:                         Characters.          (line 183)
* char-locale-ci<?:                      Text Collation.      (line  34)
* char-locale-ci=?:                      Text Collation.      (line  43)
* char-locale-ci>?:                      Text Collation.      (line  36)
* char-locale-downcase:                  Character Case Mapping.  (line  18)
* char-locale-titlecase:                 Character Case Mapping.  (line  28)
* char-locale-upcase:                    Character Case Mapping.  (line  23)
* char-locale<?:                         Text Collation.      (line  30)
* char-locale>?:                         Text Collation.      (line  32)
* char-lower-case?:                      Characters.          (line 179)
* char-lower-case? <1>:                  rnrs unicode.        (line  36)
* char-numeric?:                         Characters.          (line 167)
* char-numeric? <1>:                     rnrs unicode.        (line  33)
* char-ready?:                           Venerable Port Interfaces.  (line  31)
* char-set:                              Creating Character Sets.  (line  13)
* char-set->list:                        Querying Character Sets.  (line  33)
* char-set->string:                      Querying Character Sets.  (line  37)
* char-set-adjoin:                       Character-Set Algebra.  (line  11)
* char-set-adjoin!:                      Character-Set Algebra.  (line  21)
* char-set-any:                          Querying Character Sets.  (line  53)
* char-set-complement:                   Character-Set Algebra.  (line  31)
* char-set-complement!:                  Character-Set Algebra.  (line  62)
* char-set-contains?:                    Querying Character Sets.  (line  43)
* char-set-copy:                         Creating Character Sets.  (line   8)
* char-set-count:                        Querying Character Sets.  (line  28)
* char-set-cursor:                       Iterating Over Character Sets.  (line  16)
* char-set-cursor-next:                  Iterating Over Character Sets.  (line  26)
* char-set-delete:                       Character-Set Algebra.  (line  16)
* char-set-delete!:                      Character-Set Algebra.  (line  26)
* char-set-diff+intersection:            Character-Set Algebra.  (line  57)
* char-set-diff+intersection!:           Character-Set Algebra.  (line  82)
* char-set-difference:                   Character-Set Algebra.  (line  49)
* char-set-difference!:                  Character-Set Algebra.  (line  74)
* char-set-every:                        Querying Character Sets.  (line  48)
* char-set-filter:                       Creating Character Sets.  (line  39)
* char-set-filter!:                      Creating Character Sets.  (line  45)
* char-set-fold:                         Iterating Over Character Sets.  (line  37)
* char-set-for-each:                     Iterating Over Character Sets.  (line  64)
* char-set-hash:                         Character Set Predicates/Comparison.  (line  24)
* char-set-intersection:                 Character-Set Algebra.  (line  45)
* char-set-intersection!:                Character-Set Algebra.  (line  70)
* char-set-map:                          Iterating Over Character Sets.  (line  69)
* char-set-ref:                          Iterating Over Character Sets.  (line  20)
* char-set-size:                         Querying Character Sets.  (line  24)
* char-set-unfold:                       Iterating Over Character Sets.  (line  42)
* char-set-unfold!:                      Iterating Over Character Sets.  (line  53)
* char-set-union:                        Character-Set Algebra.  (line  41)
* char-set-union!:                       Character-Set Algebra.  (line  66)
* char-set-xor:                          Character-Set Algebra.  (line  53)
* char-set-xor!:                         Character-Set Algebra.  (line  78)
* char-set<=:                            Character Set Predicates/Comparison.  (line  19)
* char-set=:                             Character Set Predicates/Comparison.  (line  15)
* char-set?:                             Character Set Predicates/Comparison.  (line  11)
* char-title-case?:                      rnrs unicode.        (line  37)
* char-titlecase:                        Characters.          (line 229)
* char-titlecase <1>:                    rnrs unicode.        (line  11)
* char-upcase:                           Characters.          (line 221)
* char-upcase <1>:                       rnrs unicode.        (line   9)
* char-upper-case?:                      Characters.          (line 175)
* char-upper-case? <1>:                  rnrs unicode.        (line  35)
* char-whitespace?:                      Characters.          (line 171)
* char-whitespace? <1>:                  rnrs unicode.        (line  34)
* char<=?:                               Characters.          (line 121)
* char<=? <1>:                           rnrs base.           (line  24)
* char<?:                                Characters.          (line 117)
* char<? <1>:                            rnrs base.           (line  22)
* char=?:                                Characters.          (line 113)
* char=? <1>:                            rnrs base.           (line  21)
* char>=?:                               Characters.          (line 129)
* char>=? <1>:                           rnrs base.           (line  25)
* char>?:                                Characters.          (line 125)
* char>? <1>:                            rnrs base.           (line  23)
* char?:                                 Characters.          (line 106)
* char? <1>:                             rnrs base.           (line  20)
* chdir:                                 Processes.           (line   6)
* chmod:                                 File System.         (line 143)
* chown:                                 File System.         (line 130)
* chroot:                                Processes.           (line  25)
* circular-list:                         SRFI-1 Constructors. (line  26)
* circular-list?:                        SRFI-1 Predicates.   (line  18)
* class:                                 Class Definition Protocol.  (line  63)
* class-direct-methods:                  Classes.             (line  27)
* class-direct-slots:                    Classes.             (line  19)
* class-direct-subclasses:               Classes.             (line  23)
* class-direct-supers:                   Classes.             (line  15)
* class-methods:                         Classes.             (line  44)
* class-name:                            Classes.             (line  11)
* class-of:                              Instances.           (line   6)
* class-of <1>:                          Inlined Scheme Instructions.  (line  64)
* class-precedence-list:                 Classes.             (line  32)
* class-redefinition:                    Customizing Class Redefinition.  (line  14)
* class-redefinition <1>:                Customizing Class Redefinition.  (line  19)
* class-slot-definition:                 Slots.               (line   6)
* class-slot-ref:                        Accessing Slots.     (line  86)
* class-slot-set!:                       Accessing Slots.     (line  97)
* class-slots:                           Classes.             (line  36)
* class-subclasses:                      Classes.             (line  41)
* clear-value-history!:                  Value History.       (line  51)
* close:                                 Ports and File Descriptors.  (line 155)
* close-fdes:                            Ports and File Descriptors.  (line 162)
* close-input-port:                      rnrs io simple.      (line  38)
* close-output-port:                     rnrs io simple.      (line  39)
* close-pipe:                            Pipes.               (line  65)
* close-port:                            Ports.               (line  73)
* close-server:                          Web Server.          (line 136)
* closedir:                              File System.         (line 260)
* collapse-repeated-chars:               texinfo string-utils.  (line 105)
* command-line:                          Runtime Environment. (line   7)
* command-line <1>:                      rnrs programs.       (line   9)
* compile:                               Compile Commands.    (line   6)
* compile <1>:                           Compilation.         (line 103)
* compile-file:                          Compile Commands.    (line   9)
* compile-file <1>:                      Compilation.         (line 112)
* compile-peg-pattern:                   PEG API Reference.   (line  90)
* compiled-file-name:                    Compilation.         (line 129)
* complex?:                              Complex Numbers.     (line  36)
* complex? <1>:                          rnrs base.           (line 132)
* compose:                               Higher-Order Functions.  (line  31)
* compose-continuation:                  Trampoline Instructions.  (line  33)
* compute-std-cpl:                       Customizing Class Definition.  (line  25)
* concatenate:                           SRFI-1 Length Append etc.  (line  10)
* concatenate!:                          SRFI-1 Length Append etc.  (line  11)
* cond:                                  Conditionals.        (line  49)
* cond <1>:                              rnrs base.           (line 116)
* cond-expand:                           SRFI-0.              (line  15)
* condition:                             SRFI-35.             (line  92)
* condition <1>:                         rnrs conditions.     (line  41)
* condition-accessor:                    rnrs conditions.     (line  53)
* condition-has-type?:                   SRFI-35.             (line  52)
* condition-irritants:                   rnrs conditions.     (line 108)
* condition-message:                     SRFI-35.             (line 124)
* condition-message <1>:                 rnrs conditions.     (line  73)
* condition-predicate:                   rnrs conditions.     (line  52)
* condition-ref:                         SRFI-35.             (line  55)
* condition-type?:                       SRFI-35.             (line  32)
* condition-variable-broadcast!:         SRFI-18 Condition variables.  (line  33)
* condition-variable-name:               SRFI-18 Condition variables.  (line  21)
* condition-variable-signal!:            SRFI-18 Condition variables.  (line  32)
* condition-variable-specific:           SRFI-18 Condition variables.  (line  25)
* condition-variable-specific-set!:      SRFI-18 Condition variables.  (line  29)
* condition-variable?:                   Mutexes and Condition Variables.  (line 192)
* condition-variable? <1>:               SRFI-18 Condition variables.  (line  14)
* condition-who:                         rnrs conditions.     (line 115)
* condition?:                            rnrs conditions.     (line  38)
* connect:                               Network Sockets and Communication.  (line 150)
* connect <1>:                           Network Sockets and Communication.  (line 151)
* connect <2>:                           Network Sockets and Communication.  (line 152)
* connect <3>:                           Network Sockets and Communication.  (line 154)
* cons:                                  Pairs.               (line  45)
* cons <1>:                              rnrs base.           (line  35)
* cons <2>:                              Inlined Scheme Instructions.  (line  84)
* cons*:                                 List Constructors.   (line  25)
* cons* <1>:                             rnrs lists.          (line  64)
* cons* <2>:                             rnrs lists.          (line  65)
* cons-source:                           Source Properties.   (line  86)
* const:                                 Higher-Order Functions.  (line  11)
* context-flatten:                       PEG API Reference.   (line 243)
* continuation-call:                     Trampoline Instructions.  (line  28)
* continue:                              while do.            (line  75)
* copy-bit:                              SRFI-60.             (line  52)
* copy-bit-field:                        SRFI-60.             (line  59)
* copy-file:                             File System.         (line 176)
* copy-random-state:                     Random.              (line  14)
* copy-time:                             SRFI-19 Time.        (line  59)
* copy-tree:                             Copying.             (line  12)
* cos:                                   Scientific.          (line  25)
* cos <1>:                               rnrs base.           (line 148)
* cosh:                                  Scientific.          (line  54)
* count:                                 SRFI-1 Length Append etc.  (line  49)
* coverage-data->lcov:                   Code Coverage.       (line  20)
* coverage-data?:                        Code Coverage.       (line  16)
* crypt:                                 Encryption.          (line  13)
* ctermid:                               Terminals and Ptys.  (line  16)
* current-date:                          SRFI-19 Date.        (line  69)
* current-dynamic-state:                 Fluids and Dynamic States.  (line 151)
* current-error-port:                    Default Ports.       (line  38)
* current-error-port <1>:                rnrs io ports.       (line 100)
* current-exception-handler:             SRFI-18 Exceptions.  (line  14)
* current-filename:                      Source Properties.   (line  77)
* current-http-proxy:                    Web Client.          (line  87)
* current-input-port:                    Default Ports.       (line   6)
* current-input-port <1>:                rnrs io ports.       (line  98)
* current-julian-day:                    SRFI-19 Date.        (line  74)
* current-load-port:                     Loading.             (line  78)
* current-modified-julian-day:           SRFI-19 Date.        (line  77)
* current-module:                        Module System Reflection.  (line  17)
* current-module <1>:                    Top-Level Environment Instructions.  (line  14)
* current-output-port:                   Default Ports.       (line  23)
* current-output-port <1>:               rnrs io ports.       (line  99)
* current-processor-count:               Threads.             (line 122)
* current-read-waiter:                   Non-Blocking I/O.    (line 109)
* current-source-location:               Source Properties.   (line  73)
* current-ssax-error-port:               SSAX.                (line 151)
* current-thread:                        Threads.             (line  24)
* current-thread <1>:                    SRFI-18 Threads.     (line  16)
* current-thread <2>:                    Dynamic Environment Instructions.  (line  75)
* current-time:                          Time.                (line   6)
* current-time <1>:                      SRFI-18 Time.        (line  12)
* current-time <2>:                      SRFI-19 Time.        (line  62)
* current-write-waiter:                  Non-Blocking I/O.    (line 110)
* cut:                                   SRFI-26.             (line  11)
* cute:                                  SRFI-26.             (line  12)
* date->julian-day:                      SRFI-19 Time/Date conversions.  (line   6)
* date->modified-julian-day:             SRFI-19 Time/Date conversions.  (line   7)
* date->string:                          SRFI-19 Date to string.  (line   6)
* date->time-monotonic:                  SRFI-19 Time/Date conversions.  (line   8)
* date->time-tai:                        SRFI-19 Time/Date conversions.  (line   9)
* date->time-utc:                        SRFI-19 Time/Date conversions.  (line  10)
* date-day:                              SRFI-19 Date.        (line  45)
* date-hour:                             SRFI-19 Date.        (line  42)
* date-minute:                           SRFI-19 Date.        (line  39)
* date-month:                            SRFI-19 Date.        (line  48)
* date-nanosecond:                       SRFI-19 Date.        (line  31)
* date-second:                           SRFI-19 Date.        (line  34)
* date-week-day:                         SRFI-19 Date.        (line  61)
* date-week-number:                      SRFI-19 Date.        (line  64)
* date-year:                             SRFI-19 Date.        (line  51)
* date-year-day:                         SRFI-19 Date.        (line  58)
* date-zone-offset:                      SRFI-19 Date.        (line  55)
* date?:                                 SRFI-19 Date.        (line  24)
* datum->random-state:                   Random.              (line  67)
* datum->syntax:                         Syntax Case.         (line 181)
* datum->syntax <1>:                     rnrs syntax-case.    (line  49)
* debug-disable:                         Debug Options.       (line  35)
* debug-enable:                          Debug Options.       (line  34)
* debug-options:                         Debug Options.       (line   9)
* debug-set!:                            Debug Options.       (line  36)
* declare-default-port!:                 URIs.                (line  67)
* declare-header!:                       HTTP.                (line  75)
* declare-opaque-header!:                HTTP.                (line  94)
* deep-clone:                            GOOPS Object Miscellany.  (line  35)
* deep-clone <1>:                        GOOPS Object Miscellany.  (line  36)
* default-duplicate-binding-handler:     Creating Guile Modules.  (line 160)
* default-prompt-tag:                    Prompt Primitives.   (line  27)
* default-random-source:                 SRFI-27 Default Random Source.  (line  15)
* define:                                Top Level.           (line  32)
* define <1>:                            rnrs base.           (line  77)
* define <2>:                            Curried Definitions. (line  24)
* define!:                               Top-Level Environment Instructions.  (line  23)
* define*:                               lambda* and define*. (line  24)
* define* <1>:                           Curried Definitions. (line  25)
* define*-public:                        ice-9 optargs.       (line  80)
* define-accessor:                       Accessors.           (line  16)
* define-class:                          Class Definition.    (line   8)
* define-class <1>:                      Class Definition.    (line  21)
* define-condition-type:                 SRFI-35.             (line  74)
* define-condition-type <1>:             rnrs conditions.     (line  57)
* define-enumeration:                    rnrs enums.          (line  67)
* define-foreign-object-type:            Foreign Objects.     (line 105)
* define-generic:                        Methods and Generic Functions.  (line  55)
* define-generic <1>:                    Methods and Generic Functions.  (line  57)
* define-immutable-record-type:          SRFI-9 Records.      (line 113)
* define-inlinable:                      Inlinable Procedures.  (line  39)
* define-language:                       Compiler Tower.      (line  22)
* define-macro:                          Defmacros.           (line  14)
* define-method:                         Methods and Generic Functions.  (line  55)
* define-method <1>:                     Methods and Generic Functions.  (line  66)
* define-module:                         Creating Guile Modules.  (line  18)
* define-once:                           Top Level.           (line  67)
* define-parsed-entity!:                 SSAX.                (line 178)
* define-peg-pattern:                    PEG API Reference.   (line  48)
* define-peg-string-patterns:            PEG API Reference.   (line  17)
* define-public:                         Creating Guile Modules.  (line 179)
* define-public <1>:                     Curried Definitions. (line  26)
* define-reader-ctor:                    SRFI-10.             (line  19)
* define-record-type:                    SRFI-9 Records.      (line  13)
* define-record-type <1>:                rnrs records syntactic.  (line   9)
* define-server-impl:                    Web Server.          (line  67)
* define-stream:                         SRFI-41 Stream Library.  (line   6)
* define-syntax:                         Defining Macros.     (line  26)
* define-syntax <1>:                     rnrs base.           (line  81)
* define-syntax-parameter:               Syntax Parameters.   (line  22)
* define-syntax-rule:                    Syntax Rules.        (line 207)
* define-values:                         Binding Multiple Values.  (line   6)
* define-wrapped-pointer-type:           Void Pointers and Byte Access.  (line  64)
* defined?:                              Binding Reflection.  (line   9)
* defmacro:                              Defmacros.           (line  14)
* defmacro*:                             ice-9 optargs.       (line  83)
* defmacro*-public:                      ice-9 optargs.       (line  84)
* defvar:                                Top Level.           (line  67)
* delay:                                 Delayed Evaluation.  (line  10)
* delay <1>:                             SRFI-45.             (line  37)
* delay <2>:                             rnrs r5rs.           (line  20)
* delete:                                List Modification.   (line  29)
* delete <1>:                            SRFI-1 Deleting.     (line   6)
* delete!:                               List Modification.   (line  41)
* delete! <1>:                           SRFI-1 Deleting.     (line   7)
* delete-duplicates:                     SRFI-1 Deleting.     (line  30)
* delete-duplicates!:                    SRFI-1 Deleting.     (line  31)
* delete-file:                           File System.         (line 172)
* delete-trap!:                          Trap States.         (line  46)
* delete1!:                              List Modification.   (line  63)
* delq:                                  List Modification.   (line  17)
* delq!:                                 List Modification.   (line  39)
* delq1!:                                List Modification.   (line  51)
* delv:                                  List Modification.   (line  23)
* delv!:                                 List Modification.   (line  40)
* delv1!:                                List Modification.   (line  57)
* denominator:                           Reals and Rationals. (line 124)
* denominator <1>:                       rnrs base.           (line 158)
* deq!:                                  Queues.              (line  31)
* dereference-pointer:                   Void Pointers and Byte Access.  (line  38)
* describe:                              Help Commands.       (line  35)
* directory-stream?:                     File System.         (line 244)
* dirname:                               File System.         (line 339)
* disable-trap!:                         Trap States.         (line  43)
* disable-value-history!:                Value History.       (line  48)
* disassemble:                           Compile Commands.    (line  18)
* disassemble-file:                      Compile Commands.    (line  21)
* display:                               Scheme Write.        (line  18)
* display <1>:                           rnrs io simple.      (line  55)
* display <2>:                           rnrs io simple.      (line  56)
* display <3>:                           GOOPS Object Miscellany.  (line  48)
* display-application:                   Frames.              (line  61)
* display-backtrace:                     Stacks.              (line  22)
* display-error:                         Handling Errors.     (line  34)
* div:                                   rnrs base.           (line 250)
* div <1>:                               Inlined Mathematical Instructions.  (line  31)
* div-and-mod:                           rnrs base.           (line 252)
* div0:                                  rnrs base.           (line 269)
* div0-and-mod0:                         rnrs base.           (line 271)
* do:                                    while do.            (line  11)
* do <1>:                                rnrs control.        (line  21)
* dotted-list?:                          SRFI-1 Predicates.   (line  31)
* doubly-weak-hash-table?:               Weak hash tables.    (line  28)
* down:                                  Debug Commands.      (line  21)
* drain-input:                           Buffering.           (line 102)
* drop:                                  SRFI-1 Selectors.    (line  28)
* drop <1>:                              Miscellaneous Instructions.  (line  28)
* drop-right:                            SRFI-1 Selectors.    (line  35)
* drop-right!:                           SRFI-1 Selectors.    (line  36)
* drop-while:                            SRFI-1 Searching.    (line  26)
* dup:                                   Ports and File Descriptors.  (line 210)
* dup->fdes:                             Ports and File Descriptors.  (line 198)
* dup->inport:                           Ports and File Descriptors.  (line 204)
* dup->outport:                          Ports and File Descriptors.  (line 207)
* dup->port:                             Ports and File Descriptors.  (line 214)
* dup2:                                  Ports and File Descriptors.  (line 245)
* duplicate-port:                        Ports and File Descriptors.  (line 218)
* dynamic-call:                          Foreign Functions.   (line  24)
* dynamic-func:                          Foreign Functions.   (line  10)
* dynamic-link:                          Foreign Libraries.   (line  37)
* dynamic-object?:                       Foreign Libraries.   (line  64)
* dynamic-pointer:                       Foreign Variables.   (line   9)
* dynamic-state?:                        Fluids and Dynamic States.  (line 142)
* dynamic-unlink:                        Foreign Libraries.   (line  68)
* dynamic-wind:                          Dynamic Wind.        (line  69)
* dynamic-wind <1>:                      rnrs base.           (line 358)
* eager:                                 SRFI-45.             (line  56)
* effective-version:                     Build Config.        (line  10)
* eighth:                                SRFI-1 Selectors.    (line  13)
* emit-begin-kw-arity:                   Bytecode.            (line  75)
* emit-begin-opt-arity:                  Bytecode.            (line  73)
* emit-begin-program:                    Bytecode.            (line  61)
* emit-begin-standard-arity:             Bytecode.            (line  71)
* emit-br-if-bitvector:                  Bytecode.            (line  85)
* emit-br-if-bytevector:                 Bytecode.            (line  84)
* emit-br-if-string:                     Bytecode.            (line  83)
* emit-br-if-symbol:                     Bytecode.            (line  80)
* emit-br-if-variable:                   Bytecode.            (line  81)
* emit-br-if-vector:                     Bytecode.            (line  82)
* emit-cache-current-module!:            Bytecode.            (line  47)
* emit-cached-module-box:                Bytecode.            (line  49)
* emit-cached-toplevel-box:              Bytecode.            (line  48)
* emit-end-arity:                        Bytecode.            (line  77)
* emit-end-program:                      Bytecode.            (line  62)
* emit-label:                            Bytecode.            (line  41)
* emit-load-constant:                    Bytecode.            (line  58)
* emit-load-static-procedure:            Bytecode.            (line  66)
* emit-source:                           Bytecode.            (line  44)
* emit-vector-length:                    Bytecode.            (line  30)
* enable-primitive-generic!:             Extending Primitives.  (line  16)
* enable-trap!:                          Trap States.         (line  40)
* enable-value-history!:                 Value History.       (line  45)
* encode-and-join-uri-path:              URIs.                (line 114)
* end-of-char-set?:                      Iterating Over Character Sets.  (line  32)
* endgrent:                              User Information.    (line  86)
* endhostent:                            Network Databases.   (line 221)
* endianness:                            Bytevector Endianness.  (line  21)
* endnetent:                             Network Databases.   (line 271)
* endprotoent:                           Network Databases.   (line 318)
* endpwent:                              User Information.    (line  43)
* endservent:                            Network Databases.   (line 379)
* enq!:                                  Queues.              (line  28)
* ensure-accessor:                       Generic Function Internals.  (line  38)
* ensure-generic:                        Generic Function Internals.  (line  13)
* ensure-metaclass:                      Class Definition Protocol.  (line 104)
* enum-set->list:                        rnrs enums.          (line  36)
* enum-set-complement:                   rnrs enums.          (line  59)
* enum-set-constructor:                  rnrs enums.          (line  30)
* enum-set-difference:                   rnrs enums.          (line  55)
* enum-set-indexer:                      rnrs enums.          (line  25)
* enum-set-intersection:                 rnrs enums.          (line  54)
* enum-set-member?:                      rnrs enums.          (line  41)
* enum-set-projection:                   rnrs enums.          (line  63)
* enum-set-subset?:                      rnrs enums.          (line  42)
* enum-set-union:                        rnrs enums.          (line  53)
* enum-set-universe:                     rnrs enums.          (line  21)
* enum-set=?:                            rnrs enums.          (line  43)
* environ:                               Runtime Environment. (line  84)
* environment:                           rnrs eval.           (line  15)
* eof-object:                            rnrs io ports.       (line  22)
* eof-object <1>:                        rnrs io simple.      (line  19)
* eof-object?:                           Binary I/O.          (line  33)
* eof-object? <1>:                       rnrs io ports.       (line  19)
* eof-object? <2>:                       rnrs io simple.      (line  20)
* eol-style:                             R6RS Transcoders.    (line  41)
* eq?:                                   Equality.            (line  32)
* eq? <1>:                               rnrs base.           (line 124)
* equal-hash:                            rnrs hashtables.     (line 110)
* equal?:                                Equality.            (line  91)
* equal? <1>:                            rnrs base.           (line 126)
* eqv?:                                  Equality.            (line  75)
* eqv? <1>:                              rnrs base.           (line 125)
* error:                                 Debug Commands.      (line  39)
* error <1>:                             Error Reporting.     (line  10)
* error <2>:                             rnrs base.           (line 317)
* error-handling-mode:                   R6RS Transcoders.    (line 114)
* error-message:                         Debug Commands.      (line  38)
* error?:                                SRFI-35.             (line 139)
* error? <1>:                            rnrs conditions.     (line  90)
* escape-special-chars:                  texinfo string-utils.  (line  15)
* euclidean-quotient:                    Arithmetic.          (line  79)
* euclidean-remainder:                   Arithmetic.          (line  80)
* euclidean/:                            Arithmetic.          (line  78)
* eval:                                  Fly Evaluation.      (line  10)
* eval <1>:                              rnrs eval.           (line   9)
* eval-in-sandbox:                       Sandboxed Evaluation.  (line  74)
* eval-string:                           Fly Evaluation.      (line  38)
* eval-when:                             Eval When.           (line  43)
* eval-when <1>:                         Loading.             (line  58)
* even?:                                 Integer Operations.  (line  10)
* even? <1>:                             rnrs base.           (line 174)
* every:                                 SRFI-1 Searching.    (line  61)
* exact:                                 rnrs base.           (line 164)
* exact->inexact:                        Exactness.           (line  68)
* exact->inexact <1>:                    rnrs r5rs.           (line   9)
* exact-integer-sqrt:                    Integer Operations.  (line  63)
* exact-integer-sqrt <1>:                rnrs base.           (line 177)
* exact-integer?:                        Integers.            (line  84)
* exact?:                                Exactness.           (line  19)
* exact? <1>:                            rnrs base.           (line 162)
* execl:                                 Processes.           (line 251)
* execle:                                Processes.           (line 276)
* execlp:                                Processes.           (line 266)
* exists:                                rnrs lists.          (line  14)
* exit:                                  Processes.           (line 214)
* exit <1>:                              rnrs programs.       (line  13)
* exp:                                   Scientific.          (line  41)
* exp <1>:                               rnrs base.           (line 144)
* expand:                                Compile Commands.    (line  12)
* expand-tabs:                           texinfo string-utils.  (line  68)
* expect:                                Expect.              (line 106)
* expect-strings:                        Expect.              (line  17)
* export:                                Creating Guile Modules.  (line 172)
* export!:                               Creating Guile Modules.  (line 188)
* expt:                                  Scientific.          (line  19)
* expt <1>:                              rnrs base.           (line 145)
* extract-condition:                     SRFI-35.             (line  63)
* f32vector:                             SRFI-4 API.          (line  73)
* f32vector->list:                       SRFI-4 API.          (line 181)
* f32vector-length:                      SRFI-4 API.          (line 101)
* f32vector-ref:                         SRFI-4 API.          (line 127)
* f32vector-set!:                        SRFI-4 API.          (line 154)
* f32vector?:                            SRFI-4 API.          (line  17)
* f64->scm:                              Unboxed Floating-Point Arithmetic.  (line  10)
* f64vector:                             SRFI-4 API.          (line  74)
* f64vector->list:                       SRFI-4 API.          (line 182)
* f64vector-length:                      SRFI-4 API.          (line 102)
* f64vector-ref:                         SRFI-4 API.          (line 128)
* f64vector-set!:                        SRFI-4 API.          (line 155)
* f64vector?:                            SRFI-4 API.          (line  18)
* fadd:                                  Unboxed Floating-Point Arithmetic.  (line  18)
* false-if-exception:                    Error Reporting.     (line  38)
* fchmod:                                File System.         (line 143)
* fchown:                                File System.         (line 130)
* fcntl:                                 Ports and File Descriptors.  (line 269)
* fdes->inport:                          Ports and File Descriptors.  (line  91)
* fdes->outport:                         Ports and File Descriptors.  (line  96)
* fdes->ports:                           Ports and File Descriptors.  (line  86)
* fdiv:                                  Unboxed Floating-Point Arithmetic.  (line  21)
* fdopen:                                Ports and File Descriptors.  (line  79)
* feature?:                              Feature Manipulation.  (line  10)
* fflush:                                Buffering.           (line  85)
* fifth:                                 SRFI-1 Selectors.    (line  10)
* file-encoding:                         Character Encoding of Source Files.  (line  64)
* file-exists?:                          File System.         (line 353)
* file-name-separator?:                  File System.         (line 370)
* file-options:                          R6RS File Ports.     (line  31)
* file-port?:                            File Ports.          (line 174)
* file-system-fold:                      File Tree Walk.      (line  75)
* file-system-tree:                      File Tree Walk.      (line  13)
* filename-completion-function:          Readline Functions.  (line 110)
* fileno:                                Ports and File Descriptors.  (line  70)
* fill-string:                           texinfo string-utils.  (line 167)
* filter:                                List Modification.   (line  69)
* filter <1>:                            rnrs lists.          (line  20)
* filter <2>:                            SXPath.              (line 153)
* filter!:                               List Modification.   (line  70)
* filter-empty-elements:                 texinfo docbook.     (line  54)
* filter-map:                            SRFI-1 Fold and Map. (line 209)
* find:                                  SRFI-1 Searching.    (line  10)
* find <1>:                              rnrs lists.          (line   9)
* find-mapped-elf-image:                 Bytecode.            (line 132)
* find-string-from-port?:                sxml ssax input-parse.  (line  56)
* find-tail:                             SRFI-1 Searching.    (line  14)
* finish:                                Debug Commands.      (line  81)
* finite?:                               Reals and Rationals. (line 107)
* finite? <1>:                           rnrs base.           (line 306)
* first:                                 SRFI-1 Selectors.    (line   6)
* first-set-bit:                         SRFI-60.             (line  44)
* fixnum->flonum:                        rnrs arithmetic flonums.  (line 130)
* fixnum-width:                          rnrs arithmetic fixnums.  (line  23)
* fixnum?:                               rnrs arithmetic fixnums.  (line  20)
* fl*:                                   rnrs arithmetic flonums.  (line  53)
* fl+:                                   rnrs arithmetic flonums.  (line  52)
* fl-:                                   rnrs arithmetic flonums.  (line  56)
* fl- <1>:                               rnrs arithmetic flonums.  (line  57)
* fl/:                                   rnrs arithmetic flonums.  (line  58)
* fl/ <1>:                               rnrs arithmetic flonums.  (line  59)
* fl<=?:                                 rnrs arithmetic flonums.  (line  23)
* fl<?:                                  rnrs arithmetic flonums.  (line  22)
* fl=?:                                  rnrs arithmetic flonums.  (line  21)
* fl>=?:                                 rnrs arithmetic flonums.  (line  25)
* fl>?:                                  rnrs arithmetic flonums.  (line  24)
* flabs:                                 rnrs arithmetic flonums.  (line  65)
* flacos:                                rnrs arithmetic flonums.  (line  97)
* flasin:                                rnrs arithmetic flonums.  (line  96)
* flatan:                                rnrs arithmetic flonums.  (line  98)
* flatan <1>:                            rnrs arithmetic flonums.  (line  99)
* flceiling:                             rnrs arithmetic flonums.  (line  83)
* flcos:                                 rnrs arithmetic flonums.  (line  94)
* fldenominator:                         rnrs arithmetic flonums.  (line  78)
* fldiv:                                 rnrs arithmetic flonums.  (line  69)
* fldiv-and-mod:                         rnrs arithmetic flonums.  (line  68)
* fldiv0:                                rnrs arithmetic flonums.  (line  72)
* fldiv0-and-mod0:                       rnrs arithmetic flonums.  (line  71)
* fldmod:                                rnrs arithmetic flonums.  (line  70)
* fleven?:                               rnrs arithmetic flonums.  (line  36)
* flexp:                                 rnrs arithmetic flonums.  (line  90)
* flexpt:                                rnrs arithmetic flonums.  (line 108)
* flfinite?:                             rnrs arithmetic flonums.  (line  42)
* flfloor:                               rnrs arithmetic flonums.  (line  82)
* flinfinite?:                           rnrs arithmetic flonums.  (line  43)
* flinteger?:                            rnrs arithmetic flonums.  (line  31)
* fllog:                                 rnrs arithmetic flonums.  (line  91)
* fllog <1>:                             rnrs arithmetic flonums.  (line  92)
* flmax:                                 rnrs arithmetic flonums.  (line  48)
* flmin:                                 rnrs arithmetic flonums.  (line  49)
* flmod0:                                rnrs arithmetic flonums.  (line  73)
* flnan?:                                rnrs arithmetic flonums.  (line  44)
* flnegative?:                           rnrs arithmetic flonums.  (line  34)
* flnumerator:                           rnrs arithmetic flonums.  (line  77)
* flock:                                 Ports and File Descriptors.  (line 315)
* flodd?:                                rnrs arithmetic flonums.  (line  35)
* flonum?:                               rnrs arithmetic flonums.  (line  14)
* floor:                                 Arithmetic.          (line  65)
* floor <1>:                             rnrs base.           (line 245)
* floor-quotient:                        Arithmetic.          (line 105)
* floor-remainder:                       Arithmetic.          (line 106)
* floor/:                                Arithmetic.          (line 104)
* flpositive?:                           rnrs arithmetic flonums.  (line  33)
* flround:                               rnrs arithmetic flonums.  (line  85)
* flsin:                                 rnrs arithmetic flonums.  (line  93)
* flsqrt:                                rnrs arithmetic flonums.  (line 104)
* fltan:                                 rnrs arithmetic flonums.  (line  95)
* fltruncate:                            rnrs arithmetic flonums.  (line  84)
* fluid->parameter:                      Parameters.          (line  99)
* fluid-bound?:                          Fluids and Dynamic States.  (line  93)
* fluid-ref:                             Fluids and Dynamic States.  (line  64)
* fluid-ref <1>:                         Dynamic Environment Instructions.  (line  69)
* fluid-ref*:                            Fluids and Dynamic States.  (line  74)
* fluid-set!:                            Fluids and Dynamic States.  (line  70)
* fluid-set! <1>:                        Dynamic Environment Instructions.  (line  72)
* fluid-thread-local?:                   Thread Local Variables.  (line  41)
* fluid-unset!:                          Fluids and Dynamic States.  (line  89)
* fluid?:                                Fluids and Dynamic States.  (line  60)
* flush-all-ports:                       Buffering.           (line  93)
* flush-output-port:                     rnrs io ports.       (line 176)
* flzero?:                               rnrs arithmetic flonums.  (line  32)
* fmul:                                  Unboxed Floating-Point Arithmetic.  (line  20)
* fold:                                  SRFI-1 Fold and Map. (line   6)
* fold-layout:                           SXML Tree Fold.      (line  41)
* fold-left:                             rnrs lists.          (line  30)
* fold-matches:                          Regexp Functions.    (line 145)
* fold-right:                            SRFI-1 Fold and Map. (line   7)
* fold-right <1>:                        rnrs lists.          (line  26)
* fold-values:                           SXML Tree Fold.      (line  31)
* foldt:                                 SXML Tree Fold.      (line  17)
* foldts:                                Transforming SXML.   (line  69)
* foldts <1>:                            SXML Tree Fold.      (line  22)
* foldts*:                               SXML Tree Fold.      (line  26)
* foldts*-values:                        SXML Tree Fold.      (line  36)
* for-all:                               rnrs lists.          (line  13)
* for-each:                              List Mapping.        (line  24)
* for-each <1>:                          SRFI-1 Fold and Map. (line 169)
* for-each <2>:                          rnrs base.           (line 190)
* force:                                 Delayed Evaluation.  (line  18)
* force <1>:                             SRFI-45.             (line  49)
* force <2>:                             rnrs r5rs.           (line  21)
* force-output:                          Buffering.           (line  85)
* foreign-call:                          Trampoline Instructions.  (line  23)
* formal-name->char:                     Characters.          (line 258)
* format:                                SRFI-28.             (line  12)
* format <1>:                            Formatted Output.    (line  26)
* fourth:                                SRFI-1 Selectors.    (line   9)
* frame:                                 Debug Commands.      (line  27)
* frame-address:                         Frames.              (line  24)
* frame-arguments:                       Frames.              (line  20)
* frame-bindings:                        Frames.              (line  39)
* frame-dynamic-link:                    Frames.              (line  31)
* frame-instruction-pointer:             Frames.              (line  25)
* frame-lookup-binding:                  Frames.              (line  43)
* frame-mv-return-address:               Frames.              (line  33)
* frame-previous:                        Frames.              (line  10)
* frame-procedure-name:                  Frames.              (line  15)
* frame-return-address:                  Frames.              (line  32)
* frame-stack-pointer:                   Frames.              (line  26)
* frame?:                                Frames.              (line   6)
* free-identifier=?:                     Syntax Transformer Helpers.  (line  16)
* free-identifier=? <1>:                 rnrs syntax-case.    (line  34)
* free-ref:                              Lexical Environment Instructions.  (line  35)
* free-set!:                             Instruction Set.     (line  69)
* free-set! <1>:                         Lexical Environment Instructions.  (line  38)
* fstat:                                 File System.         (line  49)
* fsub:                                  Unboxed Floating-Point Arithmetic.  (line  19)
* fsync:                                 Ports and File Descriptors.  (line 120)
* ftell:                                 Random Access.       (line  29)
* ftruncate:                             Random Access.       (line  36)
* ftw:                                   File Tree Walk.      (line 161)
* future:                                Futures.             (line  78)
* future?:                               Futures.             (line  94)
* fx*:                                   rnrs arithmetic fixnums.  (line  54)
* fx*/carry:                             rnrs arithmetic fixnums.  (line  88)
* fx+:                                   rnrs arithmetic fixnums.  (line  53)
* fx+/carry:                             rnrs arithmetic fixnums.  (line  74)
* fx-:                                   rnrs arithmetic fixnums.  (line  57)
* fx- <1>:                               rnrs arithmetic fixnums.  (line  58)
* fx-/carry:                             rnrs arithmetic fixnums.  (line  81)
* fx<=?:                                 rnrs arithmetic fixnums.  (line  34)
* fx<?:                                  rnrs arithmetic fixnums.  (line  32)
* fx=?:                                  rnrs arithmetic fixnums.  (line  30)
* fx>=?:                                 rnrs arithmetic fixnums.  (line  33)
* fx>?:                                  rnrs arithmetic fixnums.  (line  31)
* fxand:                                 rnrs arithmetic fixnums.  (line  96)
* fxarithmetic-shift:                    rnrs arithmetic fixnums.  (line 137)
* fxarithmetic-shift-left:               rnrs arithmetic fixnums.  (line 138)
* fxarithmetic-shift-right:              rnrs arithmetic fixnums.  (line 139)
* fxbit-count:                           rnrs arithmetic fixnums.  (line 108)
* fxbit-field:                           rnrs arithmetic fixnums.  (line 127)
* fxbit-set?:                            rnrs arithmetic fixnums.  (line 119)
* fxcopy-bit:                            rnrs arithmetic fixnums.  (line 123)
* fxcopy-bit-field:                      rnrs arithmetic fixnums.  (line 132)
* fxdiv:                                 rnrs arithmetic fixnums.  (line  66)
* fxdiv-and-mod:                         rnrs arithmetic fixnums.  (line  65)
* fxdiv0:                                rnrs arithmetic fixnums.  (line  69)
* fxdiv0-and-mod0:                       rnrs arithmetic fixnums.  (line  68)
* fxeven?:                               rnrs arithmetic fixnums.  (line  44)
* fxfirst-bit-set:                       rnrs arithmetic fixnums.  (line 115)
* fxif:                                  rnrs arithmetic fixnums.  (line 103)
* fxior:                                 rnrs arithmetic fixnums.  (line  97)
* fxlength:                              rnrs arithmetic fixnums.  (line 112)
* fxmax:                                 rnrs arithmetic fixnums.  (line  49)
* fxmin:                                 rnrs arithmetic fixnums.  (line  50)
* fxmod:                                 rnrs arithmetic fixnums.  (line  67)
* fxmod0:                                rnrs arithmetic fixnums.  (line  70)
* fxnegative?:                           rnrs arithmetic fixnums.  (line  42)
* fxnot:                                 rnrs arithmetic fixnums.  (line  95)
* fxodd?:                                rnrs arithmetic fixnums.  (line  43)
* fxpositive?:                           rnrs arithmetic fixnums.  (line  41)
* fxreverse-bit-field:                   rnrs arithmetic fixnums.  (line 149)
* fxrotate-bit-field:                    rnrs arithmetic fixnums.  (line 144)
* fxxor:                                 rnrs arithmetic fixnums.  (line  98)
* fxzero?:                               rnrs arithmetic fixnums.  (line  40)
* gc:                                    System Commands.     (line   6)
* gc <1>:                                Garbage Collection Functions.  (line   6)
* gc-live-object-stats:                  Garbage Collection Functions.  (line  57)
* gc-stats:                              Garbage Collection Functions.  (line  52)
* gcd:                                   Integer Operations.  (line  40)
* gcd <1>:                               rnrs base.           (line 175)
* gcprof:                                Statprof.            (line 213)
* generate-temporaries:                  Syntax Transformer Helpers.  (line  20)
* generate-temporaries <1>:              rnrs syntax-case.    (line  44)
* generic-function-methods:              Generic Functions.   (line  13)
* generic-function-name:                 Generic Functions.   (line  10)
* gensym:                                Symbol Primitives.   (line 159)
* get-bytevector-all:                    Binary I/O.          (line  66)
* get-bytevector-all <1>:                rnrs io ports.       (line 120)
* get-bytevector-n:                      Binary I/O.          (line  40)
* get-bytevector-n <1>:                  rnrs io ports.       (line 117)
* get-bytevector-n!:                     Binary I/O.          (line  46)
* get-bytevector-n! <1>:                 rnrs io ports.       (line 118)
* get-bytevector-some:                   Binary I/O.          (line  52)
* get-bytevector-some <1>:               rnrs io ports.       (line 119)
* get-bytevector-some!:                  Binary I/O.          (line  59)
* get-char:                              Textual I/O.         (line  20)
* get-char <1>:                          rnrs io ports.       (line 125)
* get-datum:                             rnrs io ports.       (line 136)
* get-environment-variable:              SRFI-98.             (line   9)
* get-environment-variables:             SRFI-98.             (line  14)
* get-internal-real-time:                Time.                (line 163)
* get-internal-run-time:                 Time.                (line 167)
* get-line:                              Textual I/O.         (line  91)
* get-line <1>:                          rnrs io ports.       (line 131)
* get-output-string:                     String Ports.        (line  43)
* get-string-all:                        Textual I/O.         (line  82)
* get-string-all <1>:                    rnrs io ports.       (line 130)
* get-string-n:                          Textual I/O.         (line  52)
* get-string-n <1>:                      rnrs io ports.       (line 127)
* get-string-n!:                         Textual I/O.         (line  67)
* get-string-n! <1>:                     rnrs io ports.       (line 128)
* get-u8:                                Binary I/O.          (line  19)
* get-u8 <1>:                            rnrs io ports.       (line 115)
* getaddrinfo:                           Network Databases.   (line  16)
* getaffinity:                           Processes.           (line 342)
* getcwd:                                Processes.           (line  11)
* getegid:                               Processes.           (line  61)
* getenv:                                Runtime Environment. (line  64)
* geteuid:                               Processes.           (line  54)
* getgid:                                Processes.           (line  50)
* getgr:                                 User Information.    (line  96)
* getgrent:                              User Information.    (line  82)
* getgrgid:                              User Information.    (line  71)
* getgrnam:                              User Information.    (line  74)
* getgroups:                             Processes.           (line  36)
* gethost:                               Network Databases.   (line 184)
* gethostbyaddr:                         Network Databases.   (line 186)
* gethostbyname:                         Network Databases.   (line 185)
* gethostent:                            Network Databases.   (line 215)
* gethostname:                           System Identification.  (line  30)
* getitimer:                             Signals.             (line 154)
* getlogin:                              User Information.    (line 105)
* getnet:                                Network Databases.   (line 248)
* getnetbyaddr:                          Network Databases.   (line 250)
* getnetbyname:                          Network Databases.   (line 249)
* getnetent:                             Network Databases.   (line 268)
* getopt-long:                           getopt-long Reference.  (line   6)
* getpass:                               Encryption.          (line  21)
* getpeername:                           Network Sockets and Communication.  (line 232)
* getpgrp:                               Processes.           (line 102)
* getpid:                                Processes.           (line  32)
* getppid:                               Processes.           (line  41)
* getpriority:                           Processes.           (line 330)
* getproto:                              Network Databases.   (line 295)
* getprotobyname:                        Network Databases.   (line 296)
* getprotobynumber:                      Network Databases.   (line 297)
* getprotoent:                           Network Databases.   (line 315)
* getpw:                                 User Information.    (line  53)
* getpwent:                              User Information.    (line  39)
* getpwnam:                              User Information.    (line  31)
* getpwuid:                              User Information.    (line  28)
* getserv:                               Network Databases.   (line 345)
* getservbyname:                         Network Databases.   (line 346)
* getservbyport:                         Network Databases.   (line 347)
* getservent:                            Network Databases.   (line 376)
* getsid:                                Processes.           (line 121)
* getsockname:                           Network Sockets and Communication.  (line 222)
* getsockopt:                            Network Sockets and Communication.  (line  57)
* getter-with-setter:                    SRFI-17.             (line  43)
* gettext:                               Gettext Support.     (line  19)
* gettimeofday:                          Time.                (line  11)
* getuid:                                Processes.           (line  46)
* gmtime:                                Time.                (line  72)
* goops-error:                           GOOPS Error Handling.  (line  25)
* greatest-fixnum:                       rnrs arithmetic fixnums.  (line  25)
* group:gid:                             User Information.    (line  66)
* group:mem:                             User Information.    (line  68)
* group:name:                            User Information.    (line  62)
* group:passwd:                          User Information.    (line  64)
* guard:                                 rnrs exceptions.     (line  39)
* guild compile:                         Compilation.         (line  49)
* GUILE_CHECK_RETVAL:                    Autoconf Macros.     (line 111)
* GUILE_FLAGS:                           Autoconf Macros.     (line  40)
* GUILE_MODULE_AVAILABLE:                Autoconf Macros.     (line 127)
* GUILE_MODULE_CHECK:                    Autoconf Macros.     (line 119)
* GUILE_MODULE_EXPORTS:                  Autoconf Macros.     (line 137)
* GUILE_MODULE_REQUIRED:                 Autoconf Macros.     (line 132)
* GUILE_MODULE_REQUIRED_EXPORT:          Autoconf Macros.     (line 143)
* GUILE_PKG:                             Autoconf Macros.     (line  22)
* GUILE_PROGS:                           Autoconf Macros.     (line  87)
* GUILE_SITE_DIR:                        Autoconf Macros.     (line  70)
* halt:                                  Miscellaneous Instructions.  (line   6)
* handle-interrupts:                     Miscellaneous Instructions.  (line  32)
* handle-request:                        Web Server.          (line  99)
* hash:                                  Hash Table Reference.  (line 124)
* hash <1>:                              SRFI-69 Hash table algorithms.  (line  17)
* hash-by-identity:                      SRFI-69 Hash table algorithms.  (line  20)
* hash-clear!:                           Hash Table Reference.  (line  85)
* hash-count:                            Hash Table Reference.  (line 219)
* hash-create-handle!:                   Hash Table Reference.  (line 159)
* hash-fold:                             Hash Table Reference.  (line 200)
* hash-for-each:                         Hash Table Reference.  (line 173)
* hash-for-each-handle:                  Hash Table Reference.  (line 191)
* hash-get-handle:                       Hash Table Reference.  (line 148)
* hash-map->list:                        Hash Table Reference.  (line 172)
* hash-ref:                              Hash Table Reference.  (line  89)
* hash-remove!:                          Hash Table Reference.  (line 113)
* hash-set!:                             Hash Table Reference.  (line 101)
* hash-table->alist:                     SRFI-69 Table properties.  (line  25)
* hash-table-delete!:                    SRFI-69 Accessing table items.  (line  19)
* hash-table-equivalence-function:       SRFI-69 Hash table algorithms.  (line  12)
* hash-table-exists?:                    SRFI-69 Accessing table items.  (line  23)
* hash-table-fold:                       SRFI-69 Table properties.  (line  20)
* hash-table-hash-function:              SRFI-69 Hash table algorithms.  (line  13)
* hash-table-keys:                       SRFI-69 Table properties.  (line  10)
* hash-table-ref:                        SRFI-69 Accessing table items.  (line   6)
* hash-table-ref/default:                SRFI-69 Accessing table items.  (line   7)
* hash-table-set!:                       SRFI-69 Accessing table items.  (line  16)
* hash-table-size:                       SRFI-69 Table properties.  (line   6)
* hash-table-update!:                    SRFI-69 Accessing table items.  (line  26)
* hash-table-update!/default:            SRFI-69 Accessing table items.  (line  28)
* hash-table-values:                     SRFI-69 Table properties.  (line  13)
* hash-table-walk:                       SRFI-69 Table properties.  (line  16)
* hash-table?:                           Hash Table Reference.  (line  81)
* hashq:                                 Hash Table Reference.  (line 125)
* hashq-create-handle!:                  Hash Table Reference.  (line 160)
* hashq-get-handle:                      Hash Table Reference.  (line 149)
* hashq-ref:                             Hash Table Reference.  (line  90)
* hashq-remove!:                         Hash Table Reference.  (line 114)
* hashq-set!:                            Hash Table Reference.  (line 102)
* hashtable-clear!:                      rnrs hashtables.     (line  79)
* hashtable-clear! <1>:                  rnrs hashtables.     (line  80)
* hashtable-contains?:                   rnrs hashtables.     (line  62)
* hashtable-copy:                        rnrs hashtables.     (line  73)
* hashtable-copy <1>:                    rnrs hashtables.     (line  74)
* hashtable-delete!:                     rnrs hashtables.     (line  57)
* hashtable-entries:                     rnrs hashtables.     (line  90)
* hashtable-equivalence-function:        rnrs hashtables.     (line  95)
* hashtable-hash-function:               rnrs hashtables.     (line 100)
* hashtable-keys:                        rnrs hashtables.     (line  86)
* hashtable-mutable?:                    rnrs hashtables.     (line 105)
* hashtable-ref:                         rnrs hashtables.     (line  48)
* hashtable-set!:                        rnrs hashtables.     (line  52)
* hashtable-size:                        rnrs hashtables.     (line  45)
* hashtable-update!:                     rnrs hashtables.     (line  66)
* hashtable?:                            rnrs hashtables.     (line  42)
* hashv:                                 Hash Table Reference.  (line 126)
* hashv-create-handle!:                  Hash Table Reference.  (line 161)
* hashv-get-handle:                      Hash Table Reference.  (line 150)
* hashv-ref:                             Hash Table Reference.  (line  91)
* hashv-remove!:                         Hash Table Reference.  (line 115)
* hashv-set!:                            Hash Table Reference.  (line 103)
* hashx-create-handle!:                  Hash Table Reference.  (line 162)
* hashx-get-handle:                      Hash Table Reference.  (line 151)
* hashx-ref:                             Hash Table Reference.  (line  92)
* hashx-remove!:                         Hash Table Reference.  (line 116)
* hashx-set!:                            Hash Table Reference.  (line 104)
* header->string:                        HTTP.                (line  32)
* header-parser:                         HTTP.                (line  55)
* header-validator:                      HTTP.                (line  61)
* header-writer:                         HTTP.                (line  66)
* help:                                  Help Commands.       (line  10)
* hook->list:                            Hook Reference.      (line  58)
* hook-empty?:                           Hook Reference.      (line  38)
* hook?:                                 Hook Reference.      (line  34)
* hostent:addr-list:                     Network Databases.   (line 175)
* hostent:addrtype:                      Network Databases.   (line 170)
* hostent:aliases:                       Network Databases.   (line 168)
* hostent:length:                        Network Databases.   (line 173)
* hostent:name:                          Network Databases.   (line 166)
* http:                                  Web Server.          (line 169)
* http-delete:                           Web Client.          (line  67)
* http-get:                              Web Client.          (line  63)
* http-head:                             Web Client.          (line  64)
* http-options:                          Web Client.          (line  69)
* http-post:                             Web Client.          (line  65)
* http-put:                              Web Client.          (line  66)
* http-request:                          Web Client.          (line  17)
* http-trace:                            Web Client.          (line  68)
* i/o-decoding-error?:                   R6RS Transcoders.    (line  85)
* i/o-encoding-error-char:               R6RS Transcoders.    (line 102)
* i/o-encoding-error?:                   R6RS Transcoders.    (line 101)
* i/o-error-filename:                    R6RS I/O Conditions. (line  34)
* i/o-error-port:                        R6RS I/O Conditions. (line  66)
* i/o-error-position:                    R6RS I/O Conditions. (line  27)
* i/o-error?:                            R6RS I/O Conditions. (line  11)
* i/o-file-already-exists-error?:        R6RS I/O Conditions. (line  53)
* i/o-file-does-not-exist-error?:        R6RS I/O Conditions. (line  59)
* i/o-file-is-read-only-error?:          R6RS I/O Conditions. (line  47)
* i/o-file-protection-error?:            R6RS I/O Conditions. (line  40)
* i/o-filename-error?:                   R6RS I/O Conditions. (line  33)
* i/o-invalid-position-error?:           R6RS I/O Conditions. (line  26)
* i/o-port-error?:                       R6RS I/O Conditions. (line  65)
* i/o-read-error?:                       R6RS I/O Conditions. (line  16)
* i/o-write-error?:                      R6RS I/O Conditions. (line  21)
* identifier-syntax:                     Identifier Macros.   (line  28)
* identifier-syntax <1>:                 Identifier Macros.   (line  75)
* identifier-syntax <2>:                 rnrs base.           (line  87)
* identifier?:                           Syntax Case.         (line 131)
* identifier? <1>:                       rnrs syntax-case.    (line  32)
* identity:                              Higher-Order Functions.  (line  44)
* if:                                    Conditionals.        (line  11)
* if <1>:                                rnrs base.           (line 115)
* imag-part:                             Complex.             (line  19)
* imag-part <1>:                         rnrs base.           (line 136)
* implementation-restriction-violation?: rnrs conditions.     (line 128)
* import:                                Module Commands.     (line   9)
* import <1>:                            R6RS Libraries.      (line 112)
* in:                                    Module Commands.     (line  21)
* in <1>:                                Module Commands.     (line  22)
* include:                               Local Inclusion.     (line  11)
* include-from-path:                     Local Inclusion.     (line  52)
* inet-lnaof:                            Network Address Conversion.  (line  39)
* inet-makeaddr:                         Network Address Conversion.  (line  46)
* inet-netof:                            Network Address Conversion.  (line  32)
* inet-ntop:                             Network Address Conversion.  (line  59)
* inet-pton:                             Network Address Conversion.  (line  68)
* inexact:                               rnrs base.           (line 165)
* inexact->exact:                        Exactness.           (line  47)
* inexact->exact <1>:                    rnrs r5rs.           (line  10)
* inexact?:                              Exactness.           (line  39)
* inexact? <1>:                          rnrs base.           (line 163)
* inf:                                   Reals and Rationals. (line 116)
* inf?:                                  Reals and Rationals. (line  98)
* infinite?:                             rnrs base.           (line 305)
* input-port?:                           Ports.               (line  63)
* input-port? <1>:                       rnrs io ports.       (line  29)
* input-port? <2>:                       rnrs io simple.      (line  24)
* inspect:                               Inspect Commands.    (line   6)
* install-suspendable-ports!:            Non-Blocking I/O.    (line 100)
* install-trap-handler!:                 High-Level Traps.    (line  42)
* instance?:                             Instances.           (line   9)
* instrumented-source-files:             Code Coverage.       (line  48)
* instrumented/executed-lines:           Code Coverage.       (line  57)
* integer->char:                         Characters.          (line 215)
* integer->char <1>:                     rnrs base.           (line  26)
* integer->char <2>:                     Inlined Scheme Instructions.  (line 102)
* integer->list:                         SRFI-60.             (line  83)
* integer-expt:                          Bitwise Operations.  (line 128)
* integer-length:                        Bitwise Operations.  (line 113)
* integer-valued?:                       rnrs base.           (line 296)
* integer?:                              Integers.            (line  64)
* integer? <1>:                          rnrs base.           (line 170)
* interaction-environment:               Fly Evaluation.      (line  19)
* iota:                                  SRFI-1 Constructors. (line  30)
* irritants-condition?:                  rnrs conditions.     (line 107)
* is-a?:                                 Instances.           (line  12)
* isatty?:                               Terminals and Ptys.  (line   6)
* join-thread:                           Threads.             (line  58)
* join-timeout-exception?:               SRFI-18 Exceptions.  (line  28)
* julian-day->date:                      SRFI-19 Time/Date conversions.  (line  11)
* julian-day->time-monotonic:            SRFI-19 Time/Date conversions.  (line  12)
* julian-day->time-tai:                  SRFI-19 Time/Date conversions.  (line  13)
* julian-day->time-utc:                  SRFI-19 Time/Date conversions.  (line  14)
* keyword->string:                       SRFI-88.             (line  28)
* keyword->symbol:                       Keyword Procedures.  (line  10)
* keyword-flatten:                       PEG API Reference.   (line 256)
* keyword?:                              Keyword Procedures.  (line   6)
* keyword? <1>:                          SRFI-88.             (line  19)
* kill:                                  Signals.             (line  14)
* known-header?:                         HTTP.                (line  51)
* lalr-parser:                           LALR(1) Parsing.     (line  12)
* lambda:                                Lambda.              (line  33)
* lambda <1>:                            rnrs base.           (line  93)
* lambda*:                               lambda* and define*. (line   9)
* language:                              Language Commands.   (line   6)
* last:                                  SRFI-1 Selectors.    (line  51)
* last-pair:                             List Selection.      (line  13)
* latin-1-codec:                         R6RS Transcoders.    (line  30)
* lazy:                                  SRFI-45.             (line  43)
* lchown:                                File System.         (line 130)
* lcm:                                   Integer Operations.  (line  48)
* lcm <1>:                               rnrs base.           (line 176)
* least-fixnum:                          rnrs arithmetic fixnums.  (line  24)
* left-justify-string:                   texinfo string-utils.  (line  93)
* length:                                List Selection.      (line   9)
* length <1>:                            rnrs base.           (line 196)
* length+:                               SRFI-1 Length Append etc.  (line   6)
* let:                                   Local Bindings.      (line  21)
* let <1>:                               while do.            (line 113)
* let <2>:                               rnrs base.           (line  96)
* let*:                                  Local Bindings.      (line  49)
* let* <1>:                              rnrs base.           (line  97)
* let*-values:                           SRFI-11.             (line   6)
* let*-values <1>:                       rnrs base.           (line 103)
* let-escape-continuation:               Prompt Primitives.   (line 136)
* let-keywords:                          ice-9 optargs.       (line  42)
* let-keywords*:                         ice-9 optargs.       (line  44)
* let-optional:                          ice-9 optargs.       (line  22)
* let-optional*:                         ice-9 optargs.       (line  23)
* let-syntax:                            Defining Macros.     (line  36)
* let-syntax <1>:                        rnrs base.           (line  82)
* let-values:                            SRFI-11.             (line   6)
* let-values <1>:                        rnrs base.           (line 102)
* let/ec:                                Prompt Primitives.   (line 137)
* letpar:                                Parallel Forms.      (line  20)
* letrec:                                Local Bindings.      (line  64)
* letrec <1>:                            rnrs base.           (line  98)
* letrec*:                               Local Bindings.      (line  88)
* letrec* <1>:                           rnrs base.           (line  99)
* letrec-syntax:                         Defining Macros.     (line  57)
* letrec-syntax <1>:                     rnrs base.           (line  83)
* lexical-violation?:                    rnrs conditions.     (line 134)
* library:                               R6RS Libraries.      (line  44)
* line-execution-counts:                 Code Coverage.       (line  52)
* link:                                  File System.         (line 212)
* link-assembly:                         Bytecode.            (line  99)
* list:                                  List Constructors.   (line  11)
* list <1>:                              rnrs base.           (line 193)
* list->array:                           Array Procedures.    (line  70)
* list->bitvector:                       Bit Vectors.         (line  63)
* list->c32vector:                       SRFI-4 API.          (line 209)
* list->c64vector:                       SRFI-4 API.          (line 210)
* list->char-set:                        Creating Character Sets.  (line  17)
* list->char-set!:                       Creating Character Sets.  (line  23)
* list->f32vector:                       SRFI-4 API.          (line 207)
* list->f64vector:                       SRFI-4 API.          (line 208)
* list->integer:                         SRFI-60.             (line  93)
* list->s16vector:                       SRFI-4 API.          (line 202)
* list->s32vector:                       SRFI-4 API.          (line 204)
* list->s64vector:                       SRFI-4 API.          (line 206)
* list->s8vector:                        SRFI-4 API.          (line 200)
* list->stream:                          SRFI-41 Stream Library.  (line  24)
* list->stream <1>:                      Streams.             (line  68)
* list->string:                          String Constructors. (line  17)
* list->string <1>:                      rnrs base.           (line 212)
* list->symbol:                          Symbol Primitives.   (line  53)
* list->typed-array:                     Array Procedures.    (line  73)
* list->u16vector:                       SRFI-4 API.          (line 201)
* list->u32vector:                       SRFI-4 API.          (line 203)
* list->u64vector:                       SRFI-4 API.          (line 205)
* list->u8vector:                        SRFI-4 API.          (line 199)
* list->vector:                          Vector Creation.     (line  13)
* list->vector <1>:                      SRFI-43 Conversion.  (line  15)
* list->vector <2>:                      rnrs base.           (line 340)
* list->vlist:                           VLists.              (line 130)
* list->weak-vector:                     Weak vectors.        (line  13)
* list-cdr-ref:                          List Selection.      (line  23)
* list-cdr-set!:                         List Modification.   (line  13)
* list-copy:                             List Constructors.   (line  32)
* list-copy <1>:                         SRFI-1 Constructors. (line  18)
* list-head:                             List Selection.      (line  32)
* list-index:                            SRFI-1 Searching.    (line  78)
* list-matches:                          Regexp Functions.    (line 136)
* list-ref:                              List Selection.      (line  18)
* list-ref <1>:                          rnrs base.           (line 197)
* list-set!:                             List Modification.   (line   9)
* list-sort:                             rnrs sorting.        (line   9)
* list-tabulate:                         SRFI-1 Constructors. (line  12)
* list-tail:                             List Selection.      (line  22)
* list-tail <1>:                         rnrs base.           (line 198)
* list-traps:                            Trap States.         (line  29)
* list=:                                 SRFI-1 Predicates.   (line  59)
* list?:                                 List Predicates.     (line  11)
* list? <1>:                             rnrs base.           (line  30)
* listen:                                Network Sockets and Communication.  (line 185)
* load:                                  Module Commands.     (line  12)
* load <1>:                              Loading.             (line   6)
* load-compiled:                         Loading.             (line  25)
* load-extension:                        Foreign Functions.   (line  55)
* load-f64:                              Unboxed Floating-Point Arithmetic.  (line  14)
* load-from-path:                        Load Paths.          (line  21)
* load-s64:                              Unboxed Integer Arithmetic.  (line  28)
* load-thunk-from-file:                  Bytecode.            (line 118)
* load-thunk-from-memory:                Bytecode.            (line 123)
* load-typed-array:                      Constant Instructions.  (line  78)
* load-u64:                              Unboxed Integer Arithmetic.  (line  22)
* local-compile:                         Local Evaluation.    (line  18)
* local-eval:                            Local Evaluation.    (line  16)
* locale-am-string:                      Accessing Locale Information.  (line  29)
* locale-currency-symbol:                Accessing Locale Information.  (line  88)
* locale-currency-symbol-precedes-negative?: Accessing Locale Information.  (line 108)
* locale-currency-symbol-precedes-positive?: Accessing Locale Information.  (line 106)
* locale-date+time-format:               Accessing Locale Information.  (line  34)
* locale-date-format:                    Accessing Locale Information.  (line  35)
* locale-day:                            Accessing Locale Information.  (line  20)
* locale-day-short:                      Accessing Locale Information.  (line  21)
* locale-decimal-point:                  Accessing Locale Information.  (line  58)
* locale-digit-grouping:                 Accessing Locale Information.  (line  64)
* locale-encoding:                       Accessing Locale Information.  (line  14)
* locale-era:                            Accessing Locale Information.  (line  47)
* locale-era-date+time-format:           Accessing Locale Information.  (line  39)
* locale-era-date-format:                Accessing Locale Information.  (line  38)
* locale-era-time-format:                Accessing Locale Information.  (line  40)
* locale-era-year:                       Accessing Locale Information.  (line  48)
* locale-monetary-decimal-point:         Accessing Locale Information.  (line  82)
* locale-monetary-fractional-digits:     Accessing Locale Information.  (line 101)
* locale-monetary-grouping:              Accessing Locale Information.  (line  84)
* locale-monetary-negative-sign:         Accessing Locale Information.  (line 118)
* locale-monetary-positive-sign:         Accessing Locale Information.  (line 117)
* locale-monetary-thousands-separator:   Accessing Locale Information.  (line  83)
* locale-month:                          Accessing Locale Information.  (line  22)
* locale-month-short:                    Accessing Locale Information.  (line  23)
* locale-negative-separated-by-space?:   Accessing Locale Information.  (line 111)
* locale-negative-sign-position:         Accessing Locale Information.  (line 123)
* locale-no-regexp:                      Accessing Locale Information.  (line 147)
* locale-pm-string:                      Accessing Locale Information.  (line  30)
* locale-positive-separated-by-space?:   Accessing Locale Information.  (line 110)
* locale-positive-sign-position:         Accessing Locale Information.  (line 122)
* locale-string->inexact:                Number Input and Output.  (line  25)
* locale-string->integer:                Number Input and Output.  (line  12)
* locale-thousands-separator:            Accessing Locale Information.  (line  59)
* locale-time+am/pm-format:              Accessing Locale Information.  (line  37)
* locale-time-format:                    Accessing Locale Information.  (line  36)
* locale-yes-regexp:                     Accessing Locale Information.  (line 146)
* locale?:                               i18n Introduction.   (line  68)
* locals:                                Debug Commands.      (line  33)
* localtime:                             Time.                (line  64)
* lock-mutex:                            Mutexes and Condition Variables.  (line 131)
* log:                                   Scientific.          (line  45)
* log <1>:                               rnrs base.           (line 146)
* log10:                                 Scientific.          (line  48)
* log2-binary-factors:                   SRFI-60.             (line  43)
* logand:                                Bitwise Operations.  (line  11)
* logand <1>:                            Inlined Mathematical Instructions.  (line  46)
* logbit?:                               Bitwise Operations.  (line  56)
* logcount:                              Bitwise Operations.  (line  99)
* logior:                                Bitwise Operations.  (line  19)
* logior <1>:                            Inlined Mathematical Instructions.  (line  49)
* lognot:                                Bitwise Operations.  (line  37)
* logsub:                                Inlined Mathematical Instructions.  (line  55)
* logtest:                               Bitwise Operations.  (line  47)
* logxor:                                Bitwise Operations.  (line  27)
* logxor <1>:                            Inlined Mathematical Instructions.  (line  52)
* long-fmov:                             Lexical Environment Instructions.  (line  21)
* long-mov:                              Lexical Environment Instructions.  (line  11)
* lookahead-char:                        Textual I/O.         (line  30)
* lookahead-char <1>:                    rnrs io ports.       (line 126)
* lookahead-u8:                          Binary I/O.          (line  24)
* lookahead-u8 <1>:                      rnrs io ports.       (line 116)
* lookup-compilation-order:              Compiler Tower.      (line  67)
* lookup-language:                       Compiler Tower.      (line  55)
* lookup-server-impl:                    Web Server.          (line  71)
* lset-adjoin:                           SRFI-1 Set Operations.  (line  51)
* lset-diff+intersection:                SRFI-1 Set Operations.  (line 135)
* lset-diff+intersection!:               SRFI-1 Set Operations.  (line 136)
* lset-difference:                       SRFI-1 Set Operations.  (line 118)
* lset-difference!:                      SRFI-1 Set Operations.  (line 119)
* lset-intersection:                     SRFI-1 Set Operations.  (line  94)
* lset-intersection!:                    SRFI-1 Set Operations.  (line  95)
* lset-union:                            SRFI-1 Set Operations.  (line  63)
* lset-union!:                           SRFI-1 Set Operations.  (line  64)
* lset-xor:                              SRFI-1 Set Operations.  (line 150)
* lset-xor!:                             SRFI-1 Set Operations.  (line 151)
* lset<=:                                SRFI-1 Set Operations.  (line  21)
* lset=:                                 SRFI-1 Set Operations.  (line  35)
* lstat:                                 File System.         (line 119)
* macro-binding:                         Internal Macros.     (line  31)
* macro-name:                            Internal Macros.     (line  27)
* macro-transformer:                     Internal Macros.     (line  35)
* macro-type:                            Internal Macros.     (line  22)
* macro?:                                Internal Macros.     (line  10)
* magnitude:                             Complex.             (line  23)
* magnitude <1>:                         rnrs base.           (line 139)
* major-version:                         Build Config.        (line  11)
* make:                                  Instance Creation.   (line  12)
* make <1>:                              Instance Creation.   (line  17)
* make <2>:                              Instance Creation.   (line  18)
* make <3>:                              Class Definition Protocol.  (line 128)
* make-accessor:                         Generic Function Internals.  (line  51)
* make-arity:                            Building CPS.        (line  50)
* make-array:                            Array Procedures.    (line  39)
* make-array <1>:                        Inlined Scheme Instructions.  (line  67)
* make-assertion-violation:              rnrs conditions.     (line 100)
* make-atomic-box:                       Atomics.             (line  36)
* make-atomic-box <1>:                   Inlined Atomic Instructions.  (line   8)
* make-binding:                          Compiled Procedures. (line  58)
* make-bitvector:                        Bit Vectors.         (line  22)
* make-buffered-input-port:              Buffered Input.      (line  15)
* make-bytevector:                       Bytevector Manipulation.  (line   9)
* make-c-struct:                         Foreign Structs.     (line  33)
* make-c32vector:                        SRFI-4 API.          (line  46)
* make-c64vector:                        SRFI-4 API.          (line  47)
* make-chunked-input-port:               Transfer Codings.    (line  23)
* make-chunked-output-port:              Transfer Codings.    (line  38)
* make-class:                            Class Definition Protocol.  (line  80)
* make-closure:                          Lexical Environment Instructions.  (line  26)
* make-completion-function:              Readline Functions.  (line 115)
* make-compound-condition:               SRFI-35.             (line  47)
* make-condition:                        SRFI-35.             (line  37)
* make-condition-type:                   SRFI-35.             (line  26)
* make-condition-variable:               Mutexes and Condition Variables.  (line 188)
* make-condition-variable <1>:           SRFI-18 Condition variables.  (line  17)
* make-custom-binary-input-port:         Custom Ports.        (line  12)
* make-custom-binary-input-port <1>:     rnrs io ports.       (line 107)
* make-custom-binary-input/output-port:  Custom Ports.        (line  76)
* make-custom-binary-input/output-port <1>: rnrs io ports.    (line 111)
* make-custom-binary-output-port:        Custom Ports.        (line  64)
* make-custom-binary-output-port <1>:    rnrs io ports.       (line 109)
* make-date:                             SRFI-19 Date.        (line  27)
* make-doubly-weak-hash-table:           Weak hash tables.    (line   8)
* make-empty-attlist:                    SSAX.                (line 165)
* make-enumeration:                      rnrs enums.          (line  17)
* make-eq-hashtable:                     rnrs hashtables.     (line  20)
* make-eq-hashtable <1>:                 rnrs hashtables.     (line  21)
* make-eqv-hashtable:                    rnrs hashtables.     (line  26)
* make-eqv-hashtable <1>:                rnrs hashtables.     (line  27)
* make-error:                            rnrs conditions.     (line  89)
* make-f32vector:                        SRFI-4 API.          (line  44)
* make-f64vector:                        SRFI-4 API.          (line  45)
* make-fluid:                            Fluids and Dynamic States.  (line  43)
* make-foreign-object-type:              Foreign Objects.     (line  95)
* make-future:                           Futures.             (line  83)
* make-generic:                          Generic Function Internals.  (line  27)
* make-guardian:                         Guardians.           (line  15)
* make-hash-table:                       Hash Table Reference.  (line  56)
* make-hash-table <1>:                   SRFI-69 Creating hash tables.  (line   6)
* make-hashtable:                        rnrs hashtables.     (line  32)
* make-hashtable <1>:                    rnrs hashtables.     (line  33)
* make-hook:                             Hook Reference.      (line  28)
* make-i/o-decoding-error:               R6RS Transcoders.    (line  84)
* make-i/o-encoding-error:               R6RS Transcoders.    (line 100)
* make-i/o-error:                        R6RS I/O Conditions. (line  10)
* make-i/o-file-already-exists-error:    R6RS I/O Conditions. (line  52)
* make-i/o-file-does-not-exist-error:    R6RS I/O Conditions. (line  58)
* make-i/o-file-is-read-only-error:      R6RS I/O Conditions. (line  46)
* make-i/o-file-protection-error:        R6RS I/O Conditions. (line  39)
* make-i/o-invalid-position-error:       R6RS I/O Conditions. (line  25)
* make-i/o-port-error:                   R6RS I/O Conditions. (line  64)
* make-i/o-read-error:                   R6RS I/O Conditions. (line  15)
* make-i/o-write-error:                  R6RS I/O Conditions. (line  20)
* make-implementation-restriction-violation: rnrs conditions. (line 127)
* make-instance:                         Instance Creation.   (line  40)
* make-instance <1>:                     Instance Creation.   (line  41)
* make-io-filename-error:                R6RS I/O Conditions. (line  32)
* make-irritants-condition:              rnrs conditions.     (line 106)
* make-lexical-violation:                rnrs conditions.     (line 133)
* make-line-buffered-input-port:         Buffered Input.      (line  30)
* make-list:                             List Constructors.   (line  36)
* make-locale:                           i18n Introduction.   (line  37)
* make-long-immediate:                   Constant Instructions.  (line  16)
* make-long-long-immediate:              Constant Instructions.  (line  20)
* make-message-condition:                rnrs conditions.     (line  71)
* make-method:                           Method Definition Internals.  (line  38)
* make-mutex:                            Mutexes and Condition Variables.  (line 112)
* make-mutex <1>:                        SRFI-18 Mutexes.     (line  10)
* make-no-infinities-violation:          rnrs arithmetic flonums.  (line 118)
* make-no-nans-violation:                rnrs arithmetic flonums.  (line 125)
* make-non-continuable-violation:        rnrs conditions.     (line 121)
* make-non-immediate:                    Constant Instructions.  (line  30)
* make-object-property:                  Object Properties.   (line  34)
* make-parameter:                        Parameters.          (line  44)
* make-pointer:                          Foreign Variables.   (line  40)
* make-polar:                            Complex.             (line  11)
* make-polar <1>:                        rnrs base.           (line 138)
* make-procedure-with-setter:            Procedures with Setters.  (line  43)
* make-prompt-tag:                       Prompt Primitives.   (line  22)
* make-q:                                Queues.              (line  18)
* make-random-source:                    SRFI-27 Random Sources.  (line   6)
* make-record-constructor-descriptor:    rnrs records procedural.  (line  27)
* make-record-type:                      Records.             (line  19)
* make-record-type-descriptor:           rnrs records procedural.  (line   9)
* make-rectangular:                      Complex.             (line   6)
* make-rectangular <1>:                  rnrs base.           (line 137)
* make-recursive-mutex:                  Mutexes and Condition Variables.  (line 125)
* make-regexp:                           Regexp Functions.    (line  52)
* make-s16vector:                        SRFI-4 API.          (line  39)
* make-s32vector:                        SRFI-4 API.          (line  41)
* make-s64vector:                        SRFI-4 API.          (line  43)
* make-s8vector:                         SRFI-4 API.          (line  37)
* make-sandbox-module:                   Sandboxed Evaluation.  (line 242)
* make-serious-condition:                rnrs conditions.     (line  83)
* make-shared-array:                     Shared Arrays.       (line   6)
* make-short-immediate:                  Constant Instructions.  (line  12)
* make-socket-address:                   Network Socket Address.  (line  12)
* make-socket-address <1>:               Network Socket Address.  (line  13)
* make-socket-address <2>:               Network Socket Address.  (line  15)
* make-soft-port:                        Soft Ports.          (line   9)
* make-stack:                            Stack Capture.       (line  17)
* make-stream:                           Streams.             (line  49)
* make-string:                           String Constructors. (line  30)
* make-string <1>:                       rnrs base.           (line 211)
* make-struct-layout:                    Meta-Vtables.        (line  85)
* make-struct/no-tail:                   Structure Basics.    (line  10)
* make-symbol:                           Symbol Uninterned.   (line  46)
* make-syntax-transformer:               Internal Macros.     (line   6)
* make-syntax-violation:                 rnrs conditions.     (line 139)
* make-tcp-server-socket:                REPL Servers.        (line  18)
* make-text-wrapper:                     texinfo string-utils.  (line 117)
* make-thread:                           Threads.             (line  94)
* make-thread <1>:                       SRFI-18 Threads.     (line  26)
* make-thread-local-fluid:               Thread Local Variables.  (line  33)
* make-time:                             SRFI-19 Time.        (line  43)
* make-transcoder:                       R6RS Transcoders.    (line 154)
* make-transcoder <1>:                   R6RS Transcoders.    (line 155)
* make-transcoder <2>:                   R6RS Transcoders.    (line 156)
* make-typed-array:                      Array Procedures.    (line  43)
* make-u16vector:                        SRFI-4 API.          (line  38)
* make-u32vector:                        SRFI-4 API.          (line  40)
* make-u64vector:                        SRFI-4 API.          (line  42)
* make-u8vector:                         SRFI-4 API.          (line  36)
* make-unbound-fluid:                    Fluids and Dynamic States.  (line  55)
* make-undefined-variable:               Variables.           (line  38)
* make-undefined-violation:              rnrs conditions.     (line 148)
* make-unix-domain-server-socket:        REPL Servers.        (line  25)
* make-variable:                         Variables.           (line  42)
* make-variable-transformer:             Identifier Macros.   (line  51)
* make-variable-transformer <1>:         rnrs syntax-case.    (line  12)
* make-vector:                           Vector Creation.     (line  34)
* make-vector <1>:                       SRFI-43 Constructors.  (line   6)
* make-vector <2>:                       rnrs base.           (line 338)
* make-vector <3>:                       rnrs base.           (line 339)
* make-vector <4>:                       Inlined Scheme Instructions.  (line  11)
* make-vector/immediate:                 Inlined Scheme Instructions.  (line  15)
* make-violation:                        rnrs conditions.     (line  94)
* make-vtable:                           Vtables.             (line  10)
* make-warning:                          rnrs conditions.     (line  78)
* make-weak-key-hash-table:              Weak hash tables.    (line   6)
* make-weak-value-hash-table:            Weak hash tables.    (line   7)
* make-weak-vector:                      Weak vectors.        (line   6)
* make-who-condition:                    rnrs conditions.     (line 113)
* malloc-stats:                          Memory Blocks.       (line 127)
* map:                                   List Mapping.        (line  13)
* map <1>:                               SRFI-1 Fold and Map. (line 161)
* map!:                                  SRFI-1 Fold and Map. (line 195)
* map-in-order:                          List Mapping.        (line  14)
* map-union:                             SXPath.              (line 190)
* match:                                 Pattern Matching.    (line  67)
* match-lambda:                          Pattern Matching.    (line 173)
* match-lambda*:                         Pattern Matching.    (line 188)
* match-let:                             Pattern Matching.    (line 203)
* match-let <1>:                         Pattern Matching.    (line 216)
* match-let*:                            Pattern Matching.    (line 225)
* match-letrec:                          Pattern Matching.    (line 239)
* match-pattern:                         PEG API Reference.   (line 118)
* match:count:                           Match Structures.    (line  73)
* match:end:                             Match Structures.    (line  49)
* match:prefix:                          Match Structures.    (line  59)
* match:start:                           Match Structures.    (line  39)
* match:string:                          Match Structures.    (line  78)
* match:substring:                       Match Structures.    (line  24)
* match:suffix:                          Match Structures.    (line  66)
* max:                                   Arithmetic.          (line  48)
* max <1>:                               rnrs base.           (line 241)
* member:                                List Searching.      (line  26)
* member <1>:                            SRFI-1 Searching.    (line  90)
* member <2>:                            rnrs lists.          (line  45)
* memp:                                  rnrs lists.          (line  44)
* memq:                                  List Searching.      (line  12)
* memq <1>:                              rnrs lists.          (line  47)
* memv:                                  List Searching.      (line  19)
* memv <1>:                              rnrs lists.          (line  46)
* merge:                                 Sorting.             (line  15)
* merge!:                                Sorting.             (line  23)
* message-condition?:                    SRFI-35.             (line 121)
* message-condition? <1>:                rnrs conditions.     (line  72)
* method:                                Method Definition Internals.  (line  20)
* method-generic-function:               Generic Functions.   (line  21)
* method-procedure:                      Generic Functions.   (line  29)
* method-source:                         Generic Functions.   (line  33)
* method-source <1>:                     Generic Functions.   (line  34)
* method-specializers:                   Generic Functions.   (line  25)
* micro-version:                         Build Config.        (line  13)
* min:                                   Arithmetic.          (line  52)
* min <1>:                               rnrs base.           (line 242)
* minor-version:                         Build Config.        (line  12)
* mkdir:                                 File System.         (line 223)
* mknod:                                 File System.         (line 279)
* mkstemp!:                              File System.         (line 309)
* mktime:                                Time.                (line  78)
* mod:                                   rnrs base.           (line 251)
* mod <1>:                               Inlined Mathematical Instructions.  (line  40)
* mod0:                                  rnrs base.           (line 270)
* modified-julian-day->date:             SRFI-19 Time/Date conversions.  (line  15)
* modified-julian-day->time-monotonic:   SRFI-19 Time/Date conversions.  (line  16)
* modified-julian-day->time-tai:         SRFI-19 Time/Date conversions.  (line  17)
* modified-julian-day->time-utc:         SRFI-19 Time/Date conversions.  (line  18)
* module:                                Module Commands.     (line   6)
* module-add!:                           Module System Reflection.  (line  74)
* module-box:                            Top-Level Environment Instructions.  (line  47)
* module-define!:                        Module System Reflection.  (line  83)
* module-ref:                            Module System Reflection.  (line  78)
* module-set!:                           Module System Reflection.  (line  90)
* module-stexi-documentation:            texinfo reflection.  (line  17)
* module-use!:                           Module System Reflection.  (line  56)
* module-uses:                           Module System Reflection.  (line  53)
* module-variable:                       Module System Reflection.  (line  70)
* modulo:                                Integer Operations.  (line  28)
* modulo <1>:                            rnrs r5rs.           (line  16)
* modulo-expt:                           Integer Operations.  (line  56)
* monetary-amount->locale-string:        Number Input and Output.  (line  45)
* monitor:                               Mutexes and Condition Variables.  (line 235)
* mov:                                   Lexical Environment Instructions.  (line  10)
* move->fdes:                            Ports and File Descriptors.  (line 110)
* mul:                                   Inlined Mathematical Instructions.  (line  28)
* mutex-level:                           Mutexes and Condition Variables.  (line 177)
* mutex-lock!:                           SRFI-18 Mutexes.     (line  36)
* mutex-locked?:                         Mutexes and Condition Variables.  (line 183)
* mutex-name:                            SRFI-18 Mutexes.     (line  15)
* mutex-owner:                           Mutexes and Condition Variables.  (line 171)
* mutex-specific:                        SRFI-18 Mutexes.     (line  19)
* mutex-specific-set!:                   SRFI-18 Mutexes.     (line  23)
* mutex-state:                           SRFI-18 Mutexes.     (line  26)
* mutex-unlock!:                         SRFI-18 Mutexes.     (line  41)
* mutex?:                                Mutexes and Condition Variables.  (line 121)
* n-for-each-par-map:                    Parallel Forms.      (line  64)
* n-par-for-each:                        Parallel Forms.      (line  53)
* n-par-map:                             Parallel Forms.      (line  52)
* nan:                                   Reals and Rationals. (line 112)
* nan?:                                  Reals and Rationals. (line 103)
* nan? <1>:                              rnrs base.           (line 304)
* native-endianness:                     Bytevector Endianness.  (line  17)
* native-eol-style:                      R6RS Transcoders.    (line  79)
* native-transcoder:                     R6RS Transcoders.    (line 165)
* negate:                                Higher-Order Functions.  (line  19)
* negative?:                             Comparison.          (line  43)
* negative? <1>:                         rnrs base.           (line 187)
* netent:addrtype:                       Network Databases.   (line 240)
* netent:aliases:                        Network Databases.   (line 238)
* netent:name:                           Network Databases.   (line 236)
* netent:net:                            Network Databases.   (line 243)
* newline:                               Venerable Port Interfaces.  (line  80)
* newline <1>:                           rnrs io simple.      (line  57)
* newline <2>:                           rnrs io simple.      (line  58)
* next:                                  Debug Commands.      (line  76)
* next-token:                            sxml ssax input-parse.  (line  47)
* next-token-of:                         sxml ssax input-parse.  (line  50)
* nftw:                                  File Tree Walk.      (line 209)
* ngettext:                              Gettext Support.     (line  44)
* nice:                                  Processes.           (line 310)
* nil?:                                  Nil.                 (line  19)
* ninth:                                 SRFI-1 Selectors.    (line  14)
* nl_langinfo:                           Accessing Locale Information.  (line   6)
* no-applicable-method:                  Handling Invocation Errors.  (line  16)
* no-applicable-method <1>:              Handling Invocation Errors.  (line  17)
* no-infinities-violation?:              rnrs arithmetic flonums.  (line 119)
* no-method:                             Handling Invocation Errors.  (line   9)
* no-method <1>:                         Handling Invocation Errors.  (line  10)
* no-nans-violation?:                    rnrs arithmetic flonums.  (line 126)
* no-next-method:                        Handling Invocation Errors.  (line  23)
* no-next-method <1>:                    Handling Invocation Errors.  (line  24)
* node-closure:                          SXPath.              (line 261)
* node-eq?:                              SXPath.              (line 132)
* node-equal?:                           SXPath.              (line 137)
* node-join:                             SXPath.              (line 239)
* node-or:                               SXPath.              (line 254)
* node-parent:                           SXPath.              (line 281)
* node-pos:                              SXPath.              (line 142)
* node-reduce:                           SXPath.              (line 245)
* node-reverse:                          SXPath.              (line 198)
* node-self:                             SXPath.              (line 233)
* node-trace:                            SXPath.              (line 206)
* node-typeof?:                          SXPath.              (line 103)
* nodeset?:                              SXPath.              (line 100)
* non-continuable-violation?:            rnrs conditions.     (line 122)
* not:                                   Booleans.            (line  57)
* not <1>:                               rnrs base.           (line  12)
* not-pair?:                             SRFI-1 Predicates.   (line  53)
* null-environment:                      Environments.        (line  26)
* null-environment <1>:                  rnrs r5rs.           (line  26)
* null-list?:                            SRFI-1 Predicates.   (line  47)
* null-pointer?:                         Foreign Variables.   (line  51)
* null?:                                 List Predicates.     (line  20)
* null? <1>:                             rnrs base.           (line  31)
* number->locale-string:                 Number Input and Output.  (line  36)
* number->string:                        Conversion.          (line  11)
* number->string <1>:                    rnrs base.           (line 206)
* number?:                               Numerical Tower.     (line  47)
* number? <1>:                           rnrs base.           (line  68)
* numerator:                             Reals and Rationals. (line 120)
* numerator <1>:                         rnrs base.           (line 157)
* object->string:                        General Conversion.  (line  18)
* object-properties:                     Object Properties.   (line  57)
* object-property:                       Object Properties.   (line  65)
* object-stexi-documentation:            texinfo reflection.  (line  28)
* odd?:                                  Integer Operations.  (line   6)
* odd? <1>:                              rnrs base.           (line 173)
* open:                                  Ports and File Descriptors.  (line 127)
* open-bytevector-input-port:            Bytevector Ports.    (line   6)
* open-bytevector-input-port <1>:        rnrs io ports.       (line 103)
* open-bytevector-output-port:           Bytevector Ports.    (line  13)
* open-bytevector-output-port <1>:       rnrs io ports.       (line 104)
* open-fdes:                             Ports and File Descriptors.  (line 151)
* open-file:                             File Ports.          (line  18)
* open-file-input-port:                  R6RS File Ports.     (line  70)
* open-file-input-port <1>:              R6RS File Ports.     (line  71)
* open-file-input-port <2>:              R6RS File Ports.     (line  72)
* open-file-input-port <3>:              R6RS File Ports.     (line  74)
* open-file-output-port:                 R6RS File Ports.     (line  98)
* open-file-output-port <1>:             R6RS File Ports.     (line  99)
* open-file-output-port <2>:             R6RS File Ports.     (line 100)
* open-file-output-port <3>:             R6RS File Ports.     (line 102)
* open-input-file:                       File Ports.          (line  89)
* open-input-file <1>:                   rnrs io simple.      (line  31)
* open-input-output-pipe:                Pipes.               (line  62)
* open-input-pipe:                       Pipes.               (line  45)
* open-input-string:                     String Ports.        (line  29)
* open-output-file:                      File Ports.          (line 101)
* open-output-file <1>:                  rnrs io simple.      (line  32)
* open-output-pipe:                      Pipes.               (line  54)
* open-output-string:                    String Ports.        (line  36)
* open-pipe:                             Pipes.               (line  11)
* open-pipe*:                            Pipes.               (line  12)
* open-server:                           Web Server.          (line  87)
* open-socket-for-uri:                   Web Client.          (line  11)
* opendir:                               File System.         (line 235)
* optimize:                              Compile Commands.    (line  15)
* option:                                System Commands.     (line  12)
* option <1>:                            SRFI-37.             (line  37)
* option-names:                          SRFI-37.             (line  56)
* option-optional-arg?:                  SRFI-37.             (line  58)
* option-processor:                      SRFI-37.             (line  59)
* option-ref:                            option-ref Reference.  (line   6)
* option-required-arg?:                  SRFI-37.             (line  57)
* or:                                    and or.              (line  19)
* or <1>:                                rnrs base.           (line 121)
* output-port?:                          Ports.               (line  68)
* output-port? <1>:                      rnrs io ports.       (line  30)
* output-port? <2>:                      rnrs io simple.      (line  25)
* package-stexi-documentation:           texinfo reflection.  (line  85)
* package-stexi-documentation-for-include: texinfo reflection.  (line 105)
* package-stexi-extended-menu:           texinfo reflection.  (line  65)
* package-stexi-generic-menu:            texinfo reflection.  (line  55)
* package-stexi-standard-copying:        texinfo reflection.  (line  30)
* package-stexi-standard-menu:           texinfo reflection.  (line  60)
* package-stexi-standard-prologue:       texinfo reflection.  (line  70)
* package-stexi-standard-titlepage:      texinfo reflection.  (line  37)
* pair-fold:                             SRFI-1 Fold and Map. (line  68)
* pair-fold-right:                       SRFI-1 Fold and Map. (line  69)
* pair-for-each:                         SRFI-1 Fold and Map. (line 204)
* pair?:                                 Pairs.               (line  51)
* pair? <1>:                             rnrs base.           (line  34)
* par-for-each:                          Parallel Forms.      (line  29)
* par-map:                               Parallel Forms.      (line  28)
* parallel:                              Parallel Forms.      (line  15)
* parameterize:                          Parameters.          (line  62)
* parse-c-struct:                        Foreign Structs.     (line  39)
* parse-header:                          HTTP.                (line 113)
* parse-http-method:                     HTTP.                (line 132)
* parse-http-version:                    HTTP.                (line 136)
* parse-path:                            Load Paths.          (line 108)
* parse-path-with-ellipsis:              Load Paths.          (line 114)
* parse-request-uri:                     HTTP.                (line 140)
* partition:                             SRFI-1 Filtering and Partitioning.  (line  14)
* partition <1>:                         rnrs lists.          (line  21)
* partition!:                            SRFI-1 Filtering and Partitioning.  (line  15)
* passwd:dir:                            User Information.    (line  23)
* passwd:gecos:                          User Information.    (line  21)
* passwd:gid:                            User Information.    (line  19)
* passwd:name:                           User Information.    (line  13)
* passwd:passwd:                         User Information.    (line  15)
* passwd:shell:                          User Information.    (line  25)
* passwd:uid:                            User Information.    (line  17)
* pause:                                 Signals.             (line 131)
* pclose:                                Pipes.               (line  65)
* peek-char:                             Venerable Port Interfaces.  (line  66)
* peek-char <1>:                         rnrs io simple.      (line  43)
* peek-char <2>:                         rnrs io simple.      (line  44)
* peek-next-char:                        sxml ssax input-parse.  (line  39)
* peg-record?:                           PEG API Reference.   (line 216)
* peg-string-compile:                    PEG API Reference.   (line  85)
* peg:end:                               PEG API Reference.   (line 203)
* peg:start:                             PEG API Reference.   (line 198)
* peg:string:                            PEG API Reference.   (line 194)
* peg:substring:                         PEG API Reference.   (line 208)
* peg:tree:                              PEG API Reference.   (line 213)
* pipe:                                  Ports and File Descriptors.  (line 169)
* PKG_CHECK_MODULES:                     Autoconf Macros.     (line  12)
* pointer->bytevector:                   Void Pointers and Byte Access.  (line  13)
* pointer->procedure:                    Dynamic FFI.         (line   9)
* pointer->scm:                          Foreign Variables.   (line  61)
* pointer->string:                       Void Pointers and Byte Access.  (line  50)
* pointer-address:                       Foreign Variables.   (line  33)
* pointer?:                              Foreign Variables.   (line  45)
* poll-coop-repl-server:                 Cooperative REPL Servers.  (line  34)
* pop:                                   Miscellaneous Instructions.  (line  23)
* pop-dynamic-state:                     Dynamic Environment Instructions.  (line  83)
* pop-fluid:                             Dynamic Environment Instructions.  (line  64)
* popen:                                 Pipes.               (line  11)
* port->fdes:                            Ports and File Descriptors.  (line  75)
* port->stream:                          SRFI-41 Stream Library.  (line  27)
* port->stream <1>:                      Streams.             (line  76)
* port-closed?:                          Ports.               (line  82)
* port-column:                           Textual I/O.         (line 133)
* port-conversion-strategy:              Encoding.            (line  60)
* port-encoding:                         Encoding.            (line  11)
* port-eof?:                             rnrs io ports.       (line  87)
* port-filename:                         File Ports.          (line 159)
* port-for-each:                         Ports and File Descriptors.  (line 254)
* port-has-port-position?:               rnrs io ports.       (line  73)
* port-has-set-port-position!?:          rnrs io ports.       (line  80)
* port-line:                             Textual I/O.         (line 134)
* port-mode:                             File Ports.          (line 152)
* port-position:                         rnrs io ports.       (line  70)
* port-revealed:                         Ports and File Descriptors.  (line  61)
* port-transcoder:                       rnrs io ports.       (line  33)
* port?:                                 Ports.               (line  59)
* port? <1>:                             rnrs io ports.       (line  28)
* positive?:                             Comparison.          (line  39)
* positive? <1>:                         rnrs base.           (line 186)
* post-order:                            Transforming SXML.   (line  71)
* pre-post-order:                        Transforming SXML.   (line  73)
* pretty-print:                          Inspect Commands.    (line   9)
* pretty-print <1>:                      Pretty Printing.     (line  28)
* primitive-eval:                        Fly Evaluation.      (line 112)
* primitive-exit:                        Processes.           (line 229)
* primitive-fork:                        Processes.           (line 286)
* primitive-generic-generic:             Extending Primitives.  (line  22)
* primitive-load:                        Loading.             (line  32)
* primitive-load-path:                   Load Paths.          (line  40)
* primitive-move->fdes:                  Ports and File Descriptors.  (line 101)
* primitive-_exit:                       Processes.           (line 230)
* print-options:                         Scheme Write.        (line  30)
* print-set!:                            Scheme Write.        (line  57)
* procedure:                             Procedures with Setters.  (line  53)
* procedure->pointer:                    Dynamic FFI.         (line 113)
* procedure-documentation:               Procedure Properties.  (line  58)
* procedure-execution-count:             Code Coverage.       (line  61)
* procedure-name:                        Procedure Properties.  (line  30)
* procedure-properties:                  Procedure Properties.  (line  39)
* procedure-property:                    Procedure Properties.  (line  43)
* procedure-source:                      Procedure Properties.  (line  34)
* procedure-with-setter?:                Procedures with Setters.  (line  48)
* procedure?:                            Procedure Properties.  (line  17)
* procedure? <1>:                        rnrs base.           (line  74)
* profile:                               Profile Commands.    (line   9)
* program-arguments:                     Runtime Environment. (line   6)
* program-arguments-alist:               Compiled Procedures. (line 121)
* program-arities:                       Compiled Procedures. (line  89)
* program-arity:                         Compiled Procedures. (line  91)
* program-bindings:                      Compiled Procedures. (line  57)
* program-code:                          Compiled Procedures. (line  37)
* program-free-variable-ref:             Compiled Procedures. (line  46)
* program-free-variable-set!:            Compiled Procedures. (line  48)
* program-lambda-list:                   Compiled Procedures. (line 138)
* program-num-free-variable:             Compiled Procedures. (line  42)
* program-sources:                       Compiled Procedures. (line  74)
* program?:                              Compiled Procedures. (line  33)
* promise?:                              Delayed Evaluation.  (line  14)
* promise? <1>:                          SRFI-45.             (line  34)
* prompt:                                Dynamic Environment Instructions.  (line  28)
* proper-list?:                          SRFI-1 Predicates.   (line   8)
* protoent:aliases:                      Network Databases.   (line 288)
* protoent:name:                         Network Databases.   (line 286)
* protoent:proto:                        Network Databases.   (line 290)
* provide:                               Feature Manipulation.  (line  16)
* provided?:                             Feature Manipulation.  (line   9)
* PTR2SCM:                               Non-immediate objects.  (line  16)
* push:                                  Miscellaneous Instructions.  (line  11)
* push-dynamic-state:                    Dynamic Environment Instructions.  (line  78)
* push-fluid:                            Dynamic Environment Instructions.  (line  59)
* put-bytevector:                        Binary I/O.          (line  87)
* put-bytevector <1>:                    rnrs io ports.       (line 122)
* put-char:                              Textual I/O.         (line 108)
* put-char <1>:                          rnrs io ports.       (line 132)
* put-datum:                             rnrs io ports.       (line 155)
* put-string:                            Textual I/O.         (line 112)
* put-string <1>:                        Textual I/O.         (line 113)
* put-string <2>:                        Textual I/O.         (line 114)
* put-string <3>:                        rnrs io ports.       (line 133)
* put-u8:                                Binary I/O.          (line  82)
* put-u8 <1>:                            rnrs io ports.       (line 121)
* putenv:                                Runtime Environment. (line  94)
* pwd:                                   Processes.           (line  11)
* q-empty-check:                         Queues.              (line  49)
* q-empty?:                              Queues.              (line  46)
* q-front:                               Queues.              (line  52)
* q-length:                              Queues.              (line  43)
* q-pop!:                                Queues.              (line  32)
* q-push!:                               Queues.              (line  40)
* q-rear:                                Queues.              (line  56)
* q-remove!:                             Queues.              (line  60)
* q?:                                    Queues.              (line  21)
* quasiquote:                            Expression Syntax.   (line  67)
* quasiquote <1>:                        rnrs base.           (line 110)
* quasisyntax:                           rnrs syntax-case.    (line  24)
* quit:                                  System Commands.     (line  17)
* quit <1>:                              Processes.           (line 213)
* quo:                                   Inlined Mathematical Instructions.  (line  34)
* quote:                                 Expression Syntax.   (line  49)
* quote <1>:                             rnrs base.           (line 109)
* quotient:                              Integer Operations.  (line  14)
* quotient <1>:                          rnrs r5rs.           (line  14)
* raise:                                 Signals.             (line  43)
* raise <1>:                             SRFI-18 Exceptions.  (line  24)
* raise <2>:                             rnrs exceptions.     (line  56)
* raise-continuable:                     rnrs exceptions.     (line  62)
* random:                                Random.              (line  18)
* random-integer:                        SRFI-27 Default Random Source.  (line   6)
* random-real:                           SRFI-27 Default Random Source.  (line  11)
* random-source-make-integers:           SRFI-27 Random Number Generators.  (line   6)
* random-source-make-reals:              SRFI-27 Random Number Generators.  (line  28)
* random-source-make-reals <1>:          SRFI-27 Random Number Generators.  (line  29)
* random-source-pseudo-randomize!:       SRFI-27 Random Sources.  (line  21)
* random-source-randomize!:              SRFI-27 Random Sources.  (line  16)
* random-source-state-ref:               SRFI-27 Random Sources.  (line  33)
* random-source-state-set!:              SRFI-27 Random Sources.  (line  34)
* random-source?:                        SRFI-27 Random Sources.  (line  12)
* random-state->datum:                   Random.              (line  72)
* random-state-from-platform:            Random.              (line  77)
* random:exp:                            Random.              (line  26)
* random:hollow-sphere!:                 Random.              (line  32)
* random:normal:                         Random.              (line  39)
* random:normal-vector!:                 Random.              (line  46)
* random:solid-sphere!:                  Random.              (line  52)
* random:uniform:                        Random.              (line  59)
* rational-valued?:                      rnrs base.           (line 295)
* rational?:                             Reals and Rationals. (line  79)
* rational? <1>:                         rnrs base.           (line 156)
* rationalize:                           Reals and Rationals. (line  86)
* rationalize <1>:                       rnrs base.           (line 159)
* re-export:                             Creating Guile Modules.  (line 182)
* read:                                  Scheme Read.         (line   6)
* read <1>:                              rnrs io simple.      (line  50)
* read <2>:                              rnrs io simple.      (line  51)
* read-char:                             Venerable Port Interfaces.  (line  62)
* read-char <1>:                         rnrs io simple.      (line  45)
* read-char <2>:                         rnrs io simple.      (line  46)
* read-client:                           Web Server.          (line  92)
* read-delimited:                        Line/Delimited.      (line  40)
* read-delimited!:                       Line/Delimited.      (line  46)
* read-disable:                          Scheme Read.         (line  52)
* read-enable:                           Scheme Read.         (line  51)
* read-hash-extend:                      Reader Extensions.   (line   6)
* read-header:                           HTTP.                (line 105)
* read-headers:                          HTTP.                (line 121)
* read-line:                             Line/Delimited.      (line  13)
* read-line!:                            Line/Delimited.      (line  34)
* read-options:                          Scheme Read.         (line  15)
* read-request:                          Requests.            (line  65)
* read-request-body:                     Requests.            (line  89)
* read-request-line:                     HTTP.                (line 145)
* read-response:                         Responses.           (line  32)
* read-response-body:                    Responses.           (line  80)
* read-response-line:                    HTTP.                (line 152)
* read-set!:                             Scheme Read.         (line  53)
* read-string:                           sxml ssax input-parse.  (line  54)
* read-text-line:                        sxml ssax input-parse.  (line  52)
* read-with-shared-structure:            SRFI-38.             (line  69)
* read-with-shared-structure <1>:        SRFI-38.             (line  70)
* readdir:                               File System.         (line 249)
* readline:                              Readline Functions.  (line  14)
* readline-disable:                      Readline Options.    (line  13)
* readline-enable:                       Readline Options.    (line  12)
* readline-options:                      Readline Options.    (line  11)
* readline-port:                         Readline Functions.  (line  35)
* readline-set!:                         Readline Options.    (line  14)
* readlink:                              File System.         (line 125)
* real->flonum:                          rnrs arithmetic flonums.  (line  17)
* real-part:                             Complex.             (line  15)
* real-part <1>:                         rnrs base.           (line 135)
* real-valued?:                          rnrs base.           (line 294)
* real?:                                 Reals and Rationals. (line  72)
* real? <1>:                             rnrs base.           (line 155)
* rec:                                   SRFI-31.             (line   6)
* receive:                               Multiple Values.     (line  70)
* receive <1>:                           Procedure Call and Return Instructions.  (line  64)
* receive-values:                        Procedure Call and Return Instructions.  (line  69)
* record-accessor:                       Records.             (line  52)
* record-accessor <1>:                   rnrs records procedural.  (line  49)
* record-constructor:                    Records.             (line  34)
* record-constructor <1>:                rnrs records procedural.  (line  41)
* record-constructor-descriptor:         rnrs records syntactic.  (line  71)
* record-field-mutable?:                 rnrs records inspection.  (line  45)
* record-modifier:                       Records.             (line  61)
* record-mutator:                        rnrs records procedural.  (line  53)
* record-predicate:                      Records.             (line  46)
* record-predicate <1>:                  rnrs records procedural.  (line  45)
* record-rtd:                            rnrs records inspection.  (line  13)
* record-type-descriptor:                Records.             (line  72)
* record-type-descriptor <1>:            rnrs records syntactic.  (line  67)
* record-type-descriptor?:               rnrs records procedural.  (line  24)
* record-type-field-names:               rnrs records inspection.  (line  40)
* record-type-fields:                    Records.             (line  87)
* record-type-generative?:               rnrs records inspection.  (line  28)
* record-type-name:                      Records.             (line  81)
* record-type-name <1>:                  rnrs records inspection.  (line  17)
* record-type-opaque?:                   rnrs records inspection.  (line  36)
* record-type-parent:                    rnrs records inspection.  (line  20)
* record-type-sealed?:                   rnrs records inspection.  (line  32)
* record-type-uid:                       rnrs records inspection.  (line  24)
* record?:                               Records.             (line  13)
* record? <1>:                           rnrs records inspection.  (line   9)
* recv!:                                 Network Sockets and Communication.  (line 240)
* recvfrom!:                             Network Sockets and Communication.  (line 269)
* redirect-port:                         Ports and File Descriptors.  (line 230)
* reduce:                                SRFI-1 Fold and Map. (line  73)
* reduce-right:                          SRFI-1 Fold and Map. (line  74)
* regexp-exec:                           Regexp Functions.    (line  91)
* regexp-match?:                         Match Structures.    (line  20)
* regexp-quote:                          Backslash Escapes.   (line  30)
* regexp-substitute:                     Regexp Functions.    (line 167)
* regexp-substitute/global:              Regexp Functions.    (line 202)
* regexp?:                               Regexp Functions.    (line 130)
* registers:                             Debug Commands.      (line  45)
* relative-ref?:                         URIs.                (line 149)
* release-port-handle:                   Ports and File Descriptors.  (line 117)
* reload:                                Module Commands.     (line  15)
* reload-module:                         Module System Reflection.  (line  61)
* rem:                                   Inlined Mathematical Instructions.  (line  37)
* remainder:                             Integer Operations.  (line  15)
* remainder <1>:                         rnrs r5rs.           (line  15)
* remove:                                SRFI-1 Filtering and Partitioning.  (line  31)
* remove <1>:                            rnrs lists.          (line  36)
* remove!:                               SRFI-1 Filtering and Partitioning.  (line  32)
* remove-class-accessors!:               Customizing Class Redefinition.  (line  28)
* remove-fdes-finalizer!:                Ports and File Descriptors.  (line 398)
* remove-hook!:                          Hook Reference.      (line  48)
* remp:                                  rnrs lists.          (line  35)
* remq:                                  rnrs lists.          (line  38)
* remv:                                  rnrs lists.          (line  37)
* rename:                                File System.         (line 207)
* rename-file:                           File System.         (line 207)
* repl-default-option-set!:              System Commands.     (line  47)
* replace-range:                         Transforming SXML.   (line  75)
* replace-titles:                        texinfo docbook.     (line  58)
* request-absolute-uri:                  Requests.            (line 141)
* request-accept:                        Requests.            (line 101)
* request-accept-charset:                Requests.            (line 102)
* request-accept-encoding:               Requests.            (line 103)
* request-accept-language:               Requests.            (line 104)
* request-allow:                         Requests.            (line 105)
* request-authorization:                 Requests.            (line 106)
* request-cache-control:                 Requests.            (line 107)
* request-connection:                    Requests.            (line 108)
* request-content-encoding:              Requests.            (line 109)
* request-content-language:              Requests.            (line 110)
* request-content-length:                Requests.            (line 111)
* request-content-location:              Requests.            (line 112)
* request-content-md5:                   Requests.            (line 113)
* request-content-range:                 Requests.            (line 114)
* request-content-type:                  Requests.            (line 115)
* request-date:                          Requests.            (line 116)
* request-expect:                        Requests.            (line 117)
* request-expires:                       Requests.            (line 118)
* request-from:                          Requests.            (line 119)
* request-headers:                       Requests.            (line  45)
* request-host:                          Requests.            (line 120)
* request-if-match:                      Requests.            (line 121)
* request-if-modified-since:             Requests.            (line 122)
* request-if-none-match:                 Requests.            (line 123)
* request-if-range:                      Requests.            (line 124)
* request-if-unmodified-since:           Requests.            (line 125)
* request-last-modified:                 Requests.            (line 126)
* request-max-forwards:                  Requests.            (line 127)
* request-meta:                          Requests.            (line  46)
* request-method:                        Requests.            (line  42)
* request-port:                          Requests.            (line  47)
* request-pragma:                        Requests.            (line 128)
* request-proxy-authorization:           Requests.            (line 129)
* request-range:                         Requests.            (line 130)
* request-referer:                       Requests.            (line 131)
* request-te:                            Requests.            (line 132)
* request-trailer:                       Requests.            (line 133)
* request-transfer-encoding:             Requests.            (line 134)
* request-upgrade:                       Requests.            (line 135)
* request-uri:                           Requests.            (line  43)
* request-user-agent:                    Requests.            (line 136)
* request-version:                       Requests.            (line  44)
* request-via:                           Requests.            (line 137)
* request-warning:                       Requests.            (line 138)
* request?:                              Requests.            (line  41)
* require:                               SLIB.                (line  17)
* require-extension:                     SRFI-55.             (line  10)
* reset:                                 Shift and Reset.     (line  64)
* reset-frame:                           Function Prologue Instructions.  (line  44)
* reset-hook!:                           Hook Reference.      (line  53)
* reset-parsed-entity-definitions!:      SSAX.                (line 184)
* resolve:                               Top-Level Environment Instructions.  (line  17)
* resolve-interface:                     Module System Reflection.  (line  47)
* resolve-module:                        Module System Reflection.  (line  37)
* response-accept-ranges:                Responses.           (line  93)
* response-age:                          Responses.           (line  94)
* response-allow:                        Responses.           (line  95)
* response-body-port:                    Responses.           (line  70)
* response-cache-control:                Responses.           (line  96)
* response-code:                         Responses.           (line  14)
* response-connection:                   Responses.           (line  97)
* response-content-encoding:             Responses.           (line  98)
* response-content-language:             Responses.           (line  99)
* response-content-length:               Responses.           (line 100)
* response-content-location:             Responses.           (line 101)
* response-content-md5:                  Responses.           (line 102)
* response-content-range:                Responses.           (line 103)
* response-content-type:                 Responses.           (line 104)
* response-date:                         Responses.           (line 105)
* response-etag:                         Responses.           (line 106)
* response-expires:                      Responses.           (line 107)
* response-headers:                      Responses.           (line  16)
* response-last-modified:                Responses.           (line 108)
* response-location:                     Responses.           (line 109)
* response-must-not-include-body?:       Responses.           (line  62)
* response-port:                         Responses.           (line  17)
* response-pragma:                       Responses.           (line 110)
* response-proxy-authenticate:           Responses.           (line 111)
* response-reason-phrase:                Responses.           (line  15)
* response-retry-after:                  Responses.           (line 112)
* response-server:                       Responses.           (line 113)
* response-trailer:                      Responses.           (line 114)
* response-transfer-encoding:            Responses.           (line 115)
* response-upgrade:                      Responses.           (line 116)
* response-vary:                         Responses.           (line 117)
* response-version:                      Responses.           (line  13)
* response-via:                          Responses.           (line 118)
* response-warning:                      Responses.           (line 119)
* response-www-authenticate:             Responses.           (line 120)
* response?:                             Responses.           (line  12)
* restore-signals:                       Signals.             (line 115)
* restricted-vector-sort!:               Sorting.             (line  86)
* return-from-interrupt:                 Miscellaneous Instructions.  (line  37)
* return-values:                         Procedure Call and Return Instructions.  (line  77)
* reverse:                               Append/Reverse.      (line  40)
* reverse <1>:                           rnrs base.           (line 203)
* reverse!:                              Append/Reverse.      (line  41)
* reverse-bit-field:                     SRFI-60.             (line  77)
* reverse-list->string:                  String Constructors. (line  23)
* reverse-list->vector:                  SRFI-43 Conversion.  (line  22)
* reverse-vector->list:                  SRFI-43 Conversion.  (line  11)
* rewinddir:                             File System.         (line 255)
* rewrite-cont:                          Building CPS.        (line  55)
* rewrite-exp:                           Building CPS.        (line  54)
* rewrite-term:                          Building CPS.        (line  53)
* right-justify-string:                  texinfo string-utils.  (line  99)
* rmdir:                                 File System.         (line 230)
* rotate-bit-field:                      SRFI-60.             (line  68)
* round:                                 Arithmetic.          (line  60)
* round <1>:                             rnrs base.           (line 247)
* round-ash:                             Bitwise Operations.  (line  82)
* round-quotient:                        Arithmetic.          (line 211)
* round-remainder:                       Arithmetic.          (line 212)
* round/:                                Arithmetic.          (line 210)
* run-hook:                              Hook Reference.      (line  62)
* run-server:                            REPL Servers.        (line  29)
* run-server <1>:                        Web Server.          (line 148)
* s16vector:                             SRFI-4 API.          (line  68)
* s16vector->list:                       SRFI-4 API.          (line 176)
* s16vector-length:                      SRFI-4 API.          (line  96)
* s16vector-ref:                         SRFI-4 API.          (line 122)
* s16vector-set!:                        SRFI-4 API.          (line 149)
* s16vector?:                            SRFI-4 API.          (line  12)
* s32vector:                             SRFI-4 API.          (line  70)
* s32vector->list:                       SRFI-4 API.          (line 178)
* s32vector-length:                      SRFI-4 API.          (line  98)
* s32vector-ref:                         SRFI-4 API.          (line 124)
* s32vector-set!:                        SRFI-4 API.          (line 151)
* s32vector?:                            SRFI-4 API.          (line  14)
* s64->scm:                              Unboxed Integer Arithmetic.  (line  27)
* s64vector:                             SRFI-4 API.          (line  72)
* s64vector->list:                       SRFI-4 API.          (line 180)
* s64vector-length:                      SRFI-4 API.          (line 100)
* s64vector-ref:                         SRFI-4 API.          (line 126)
* s64vector-set!:                        SRFI-4 API.          (line 153)
* s64vector?:                            SRFI-4 API.          (line  16)
* s8vector:                              SRFI-4 API.          (line  66)
* s8vector->list:                        SRFI-4 API.          (line 174)
* s8vector-length:                       SRFI-4 API.          (line  94)
* s8vector-ref:                          SRFI-4 API.          (line 120)
* s8vector-set!:                         SRFI-4 API.          (line 147)
* s8vector?:                             SRFI-4 API.          (line  10)
* sanitize-response:                     Web Server.          (line 112)
* save-module-excursion:                 Module System Reflection.  (line  26)
* scandir:                               File Tree Walk.      (line 150)
* scheme-report-environment:             Environments.        (line  25)
* scheme-report-environment <1>:         rnrs r5rs.           (line  27)
* scm->f64:                              Unboxed Floating-Point Arithmetic.  (line   6)
* scm->pointer:                          Foreign Variables.   (line  58)
* scm->s64:                              Unboxed Integer Arithmetic.  (line  26)
* scm->u64:                              Unboxed Integer Arithmetic.  (line  13)
* scm->u64/truncate:                     Unboxed Integer Arithmetic.  (line  36)
* scm-error:                             Error Reporting.     (line  14)
* SCM2PTR:                               Non-immediate objects.  (line  12)
* scm_abs:                               Arithmetic.          (line  42)
* scm_accept:                            Network Sockets and Communication.  (line 195)
* scm_access:                            File System.         (line  13)
* scm_acons:                             Adding or Setting Alist Entries.  (line  93)
* scm_add_feature:                       Feature Manipulation.  (line  23)
* scm_add_hook_x:                        Hook Reference.      (line  43)
* scm_alarm:                             Signals.             (line 121)
* scm_alignof:                           Foreign Structs.     (line  22)
* scm_all_threads:                       Threads.             (line  21)
* scm_angle:                             Complex.             (line  29)
* scm_any_to_c32vector:                  SRFI-4 Extensions.   (line  34)
* scm_any_to_c64vector:                  SRFI-4 Extensions.   (line  35)
* scm_any_to_f32vector:                  SRFI-4 Extensions.   (line  32)
* scm_any_to_f64vector:                  SRFI-4 Extensions.   (line  33)
* scm_any_to_s16vector:                  SRFI-4 Extensions.   (line  27)
* scm_any_to_s32vector:                  SRFI-4 Extensions.   (line  29)
* scm_any_to_s64vector:                  SRFI-4 Extensions.   (line  31)
* scm_any_to_s8vector:                   SRFI-4 Extensions.   (line  25)
* scm_any_to_u16vector:                  SRFI-4 Extensions.   (line  26)
* scm_any_to_u32vector:                  SRFI-4 Extensions.   (line  28)
* scm_any_to_u64vector:                  SRFI-4 Extensions.   (line  30)
* scm_any_to_u8vector:                   SRFI-4 Extensions.   (line  24)
* scm_append:                            Append/Reverse.      (line  17)
* scm_append_x:                          Append/Reverse.      (line  18)
* scm_apply:                             Fly Evaluation.      (line  71)
* scm_apply_0:                           Fly Evaluation.      (line  67)
* scm_apply_1:                           Fly Evaluation.      (line  68)
* scm_apply_2:                           Fly Evaluation.      (line  69)
* scm_apply_3:                           Fly Evaluation.      (line  70)
* SCM_ARG1:                              Handling Errors.     (line 137)
* SCM_ARG2:                              Handling Errors.     (line 138)
* SCM_ARG3:                              Handling Errors.     (line 139)
* SCM_ARG4:                              Handling Errors.     (line 140)
* SCM_ARG5:                              Handling Errors.     (line 141)
* SCM_ARG6:                              Handling Errors.     (line 142)
* SCM_ARG7:                              Handling Errors.     (line 143)
* SCM_ARGn:                              Handling Errors.     (line 152)
* scm_array_cell_ref:                    Arrays as arrays of arrays.  (line  29)
* scm_array_cell_set_x:                  Arrays as arrays of arrays.  (line  73)
* scm_array_contents:                    Shared Arrays.       (line 108)
* scm_array_copy_x:                      Array Procedures.    (line 150)
* scm_array_dimensions:                  Array Procedures.    (line 118)
* scm_array_fill_x:                      Array Procedures.    (line 156)
* scm_array_for_each:                    Array Procedures.    (line 183)
* scm_array_get_handle:                  Accessing Arrays from C.  (line  65)
* scm_array_handle_bit_elements:         Accessing Arrays from C.  (line 235)
* scm_array_handle_bit_writable_elements: Accessing Arrays from C.  (line 276)
* scm_array_handle_c32_elements:         Accessing Arrays from C.  (line 196)
* scm_array_handle_c32_writable_elements: Accessing Arrays from C.  (line 228)
* scm_array_handle_c64_elements:         Accessing Arrays from C.  (line 198)
* scm_array_handle_c64_writable_elements: Accessing Arrays from C.  (line 230)
* scm_array_handle_dims:                 Accessing Arrays from C.  (line  97)
* scm_array_handle_elements:             Accessing Arrays from C.  (line 148)
* scm_array_handle_f32_elements:         Accessing Arrays from C.  (line 192)
* scm_array_handle_f32_writable_elements: Accessing Arrays from C.  (line 224)
* scm_array_handle_f64_elements:         Accessing Arrays from C.  (line 194)
* scm_array_handle_f64_writable_elements: Accessing Arrays from C.  (line 226)
* scm_array_handle_pos:                  Accessing Arrays from C.  (line 127)
* scm_array_handle_rank:                 Accessing Arrays from C.  (line  79)
* scm_array_handle_ref:                  Accessing Arrays from C.  (line 135)
* scm_array_handle_release:              Accessing Arrays from C.  (line  74)
* scm_array_handle_s16_elements:         Accessing Arrays from C.  (line 182)
* scm_array_handle_s16_writable_elements: Accessing Arrays from C.  (line 214)
* scm_array_handle_s32_elements:         Accessing Arrays from C.  (line 186)
* scm_array_handle_s32_writable_elements: Accessing Arrays from C.  (line 218)
* scm_array_handle_s64_elements:         Accessing Arrays from C.  (line 190)
* scm_array_handle_s64_writable_elements: Accessing Arrays from C.  (line 222)
* scm_array_handle_s8_elements:          Accessing Arrays from C.  (line 178)
* scm_array_handle_s8_writable_elements: Accessing Arrays from C.  (line 210)
* scm_array_handle_set:                  Accessing Arrays from C.  (line 141)
* scm_array_handle_u16_elements:         Accessing Arrays from C.  (line 180)
* scm_array_handle_u16_writable_elements: Accessing Arrays from C.  (line 212)
* scm_array_handle_u32_elements:         Accessing Arrays from C.  (line 184)
* scm_array_handle_u32_writable_elements: Accessing Arrays from C.  (line 216)
* scm_array_handle_u64_elements:         Accessing Arrays from C.  (line 188)
* scm_array_handle_u64_writable_elements: Accessing Arrays from C.  (line 220)
* scm_array_handle_u8_elements:          Accessing Arrays from C.  (line 176)
* scm_array_handle_u8_writable_elements: Accessing Arrays from C.  (line 208)
* scm_array_handle_uniform_elements:     Accessing Arrays from C.  (line 159)
* scm_array_handle_uniform_element_size: Accessing Arrays from C.  (line 171)
* scm_array_handle_uniform_writable_elements: Accessing Arrays from C.  (line 166)
* scm_array_handle_writable_elements:    Accessing Arrays from C.  (line 154)
* scm_array_index_map_x:                 Array Procedures.    (line 188)
* scm_array_in_bounds_p:                 Array Procedures.    (line  99)
* scm_array_length:                      Array Procedures.    (line 132)
* scm_array_map_x:                       Array Procedures.    (line 168)
* scm_array_p:                           Array Procedures.    (line  22)
* scm_array_rank:                        Array Procedures.    (line 138)
* scm_array_ref:                         Array Procedures.    (line  92)
* scm_array_set_x:                       Array Procedures.    (line 108)
* scm_array_slice:                       Arrays as arrays of arrays.  (line  52)
* scm_array_slice_for_each:              Arrays as arrays of arrays.  (line 109)
* scm_array_slice_for_each_in_order:     Arrays as arrays of arrays.  (line 146)
* scm_array_to_list:                     Array Procedures.    (line 145)
* scm_array_type:                        Array Procedures.    (line  86)
* scm_ash:                               Bitwise Operations.  (line  68)
* SCM_ASSERT:                            Handling Errors.     (line 126)
* scm_assert_foreign_object_type:        Foreign Objects.     (line  49)
* scm_assert_smob_type:                  Smobs.               (line 122)
* SCM_ASSERT_TYPE:                       Handling Errors.     (line 128)
* scm_assoc:                             Retrieving Alist Entries.  (line  15)
* scm_assoc_ref:                         Retrieving Alist Entries.  (line  29)
* scm_assoc_remove_x:                    Removing Alist Entries.  (line  61)
* scm_assoc_set_x:                       Adding or Setting Alist Entries.  (line 104)
* scm_assq:                              Retrieving Alist Entries.  (line  13)
* scm_assq_ref:                          Retrieving Alist Entries.  (line  27)
* scm_assq_remove_x:                     Removing Alist Entries.  (line  59)
* scm_assq_set_x:                        Adding or Setting Alist Entries.  (line 102)
* scm_assv:                              Retrieving Alist Entries.  (line  14)
* scm_assv_ref:                          Retrieving Alist Entries.  (line  28)
* scm_assv_remove_x:                     Removing Alist Entries.  (line  60)
* scm_assv_set_x:                        Adding or Setting Alist Entries.  (line 103)
* scm_backtrace:                         Pre-Unwind Debugging.  (line  25)
* scm_backtrace_with_highlights:         Pre-Unwind Debugging.  (line  24)
* scm_basename:                          File System.         (line 345)
* scm_bind:                              Network Sockets and Communication.  (line 171)
* scm_bindtextdomain:                    Gettext Support.     (line  85)
* scm_bind_textdomain_codeset:           Gettext Support.     (line 101)
* scm_bitvector:                         Bit Vectors.         (line  31)
* scm_bitvector_elements:                Bit Vectors.         (line 131)
* scm_bitvector_fill_x:                  Bit Vectors.         (line  59)
* scm_bitvector_length:                  Bit Vectors.         (line  35)
* scm_bitvector_p:                       Bit Vectors.         (line  16)
* scm_bitvector_ref:                     Bit Vectors.         (line  43)
* scm_bitvector_set_x:                   Bit Vectors.         (line  50)
* scm_bitvector_to_list:                 Bit Vectors.         (line  68)
* scm_bitvector_writable_elements:       Bit Vectors.         (line 140)
* scm_bit_count:                         Bit Vectors.         (line  73)
* scm_bit_count_star:                    Bit Vectors.         (line 116)
* scm_bit_extract:                       Bitwise Operations.  (line 142)
* scm_bit_invert_x:                      Bit Vectors.         (line  89)
* scm_bit_position:                      Bit Vectors.         (line  80)
* scm_bit_set_star_x:                    Bit Vectors.         (line  93)
* scm_boolean_p:                         Booleans.            (line  62)
* scm_boot_guile:                        Initialization.      (line  78)
* scm_broadcast_condition_variable:      Mutexes and Condition Variables.  (line 220)
* SCM_BYTEVECTOR_CONTENTS:               Bytevector Manipulation.  (line  64)
* scm_bytevector_copy:                   Bytevector Manipulation.  (line  48)
* scm_bytevector_copy_x:                 Bytevector Manipulation.  (line  40)
* scm_bytevector_eq_p:                   Bytevector Manipulation.  (line  30)
* scm_bytevector_fill_x:                 Bytevector Manipulation.  (line  35)
* scm_bytevector_ieee_double_native_ref: Bytevectors as Floats.  (line  32)
* scm_bytevector_ieee_double_native_set_x: Bytevectors as Floats.  (line  40)
* scm_bytevector_ieee_double_ref:        Bytevectors as Floats.  (line  13)
* scm_bytevector_ieee_double_set_x:      Bytevectors as Floats.  (line  23)
* scm_bytevector_ieee_single_native_ref: Bytevectors as Floats.  (line  31)
* scm_bytevector_ieee_single_native_set_x: Bytevectors as Floats.  (line  38)
* scm_bytevector_ieee_single_ref:        Bytevectors as Floats.  (line  12)
* scm_bytevector_ieee_single_set_x:      Bytevectors as Floats.  (line  21)
* scm_bytevector_length:                 Bytevector Manipulation.  (line  23)
* SCM_BYTEVECTOR_LENGTH:                 Bytevector Manipulation.  (line  61)
* scm_bytevector_p:                      Bytevector Manipulation.  (line  16)
* scm_bytevector_s16_native_ref:         Bytevectors as Integers.  (line 102)
* scm_bytevector_s16_native_set_x:       Bytevectors as Integers.  (line 118)
* scm_bytevector_s16_ref:                Bytevectors as Integers.  (line  64)
* scm_bytevector_s16_set_x:              Bytevectors as Integers.  (line  83)
* scm_bytevector_s32_native_ref:         Bytevectors as Integers.  (line 104)
* scm_bytevector_s32_native_set_x:       Bytevectors as Integers.  (line 120)
* scm_bytevector_s32_ref:                Bytevectors as Integers.  (line  66)
* scm_bytevector_s32_set_x:              Bytevectors as Integers.  (line  85)
* scm_bytevector_s64_native_ref:         Bytevectors as Integers.  (line 106)
* scm_bytevector_s64_native_set_x:       Bytevectors as Integers.  (line 122)
* scm_bytevector_s64_ref:                Bytevectors as Integers.  (line  68)
* scm_bytevector_s64_set_x:              Bytevectors as Integers.  (line  87)
* scm_bytevector_s8_ref:                 Bytevectors as Integers.  (line  62)
* scm_bytevector_s8_set_x:               Bytevectors as Integers.  (line  81)
* scm_bytevector_sint_ref:               Bytevectors as Integers.  (line  32)
* scm_bytevector_sint_set_x:             Bytevectors as Integers.  (line  45)
* scm_bytevector_to_pointer:             Void Pointers and Byte Access.  (line  31)
* scm_bytevector_to_sint_list:           Bytevectors and Integer Lists.  (line  29)
* scm_bytevector_to_u8_list:             Bytevectors and Integer Lists.  (line  14)
* scm_bytevector_to_uint_list:           Bytevectors and Integer Lists.  (line  24)
* scm_bytevector_u16_native_ref:         Bytevectors as Integers.  (line 101)
* scm_bytevector_u16_native_set_x:       Bytevectors as Integers.  (line 117)
* scm_bytevector_u16_ref:                Bytevectors as Integers.  (line  63)
* scm_bytevector_u16_set_x:              Bytevectors as Integers.  (line  82)
* scm_bytevector_u32_native_ref:         Bytevectors as Integers.  (line 103)
* scm_bytevector_u32_native_set_x:       Bytevectors as Integers.  (line 119)
* scm_bytevector_u32_ref:                Bytevectors as Integers.  (line  65)
* scm_bytevector_u32_set_x:              Bytevectors as Integers.  (line  84)
* scm_bytevector_u64_native_ref:         Bytevectors as Integers.  (line 105)
* scm_bytevector_u64_native_set_x:       Bytevectors as Integers.  (line 121)
* scm_bytevector_u64_ref:                Bytevectors as Integers.  (line  67)
* scm_bytevector_u64_set_x:              Bytevectors as Integers.  (line  86)
* scm_bytevector_u8_ref:                 Bytevectors as Integers.  (line  61)
* scm_bytevector_u8_set_x:               Bytevectors as Integers.  (line  80)
* scm_bytevector_uint_ref:               Bytevectors as Integers.  (line  27)
* scm_bytevector_uint_set_x:             Bytevectors as Integers.  (line  38)
* scm_c32vector:                         SRFI-4 API.          (line  87)
* scm_c32vector_elements:                SRFI-4 API.          (line 277)
* scm_c32vector_length:                  SRFI-4 API.          (line 115)
* scm_c32vector_p:                       SRFI-4 API.          (line  31)
* scm_c32vector_ref:                     SRFI-4 API.          (line 141)
* scm_c32vector_set_x:                   SRFI-4 API.          (line 168)
* scm_c32vector_to_list:                 SRFI-4 API.          (line 195)
* scm_c32vector_writable_elements:       SRFI-4 API.          (line 305)
* scm_c64vector:                         SRFI-4 API.          (line  88)
* scm_c64vector_elements:                SRFI-4 API.          (line 279)
* scm_c64vector_length:                  SRFI-4 API.          (line 116)
* scm_c64vector_p:                       SRFI-4 API.          (line  32)
* scm_c64vector_ref:                     SRFI-4 API.          (line 142)
* scm_c64vector_set_x:                   SRFI-4 API.          (line 169)
* scm_c64vector_to_list:                 SRFI-4 API.          (line 196)
* scm_c64vector_writable_elements:       SRFI-4 API.          (line 307)
* scm_caaaar:                            Pairs.               (line 140)
* scm_caaadr:                            Pairs.               (line 139)
* scm_caaar:                             Pairs.               (line 124)
* scm_caadar:                            Pairs.               (line 138)
* scm_caaddr:                            Pairs.               (line 137)
* scm_caadr:                             Pairs.               (line 123)
* scm_caar:                              Pairs.               (line 116)
* scm_cadaar:                            Pairs.               (line 136)
* scm_cadadr:                            Pairs.               (line 135)
* scm_cadar:                             Pairs.               (line 122)
* scm_caddar:                            Pairs.               (line 134)
* scm_cadddr:                            Pairs.               (line 133)
* scm_caddr:                             Pairs.               (line 121)
* scm_cadr:                              Pairs.               (line 115)
* scm_call:                              Fly Evaluation.      (line  99)
* scm_calloc:                            Memory Blocks.       (line  44)
* scm_call_0:                            Fly Evaluation.      (line  84)
* scm_call_1:                            Fly Evaluation.      (line  85)
* scm_call_2:                            Fly Evaluation.      (line  86)
* scm_call_3:                            Fly Evaluation.      (line  87)
* scm_call_4:                            Fly Evaluation.      (line  88)
* scm_call_5:                            Fly Evaluation.      (line  89)
* scm_call_6:                            Fly Evaluation.      (line  90)
* scm_call_7:                            Fly Evaluation.      (line  91)
* scm_call_8:                            Fly Evaluation.      (line  93)
* scm_call_9:                            Fly Evaluation.      (line  95)
* scm_call_n:                            Fly Evaluation.      (line 108)
* scm_call_with_blocked_asyncs:          Asyncs.              (line  52)
* scm_call_with_input_string:            String Ports.        (line  14)
* scm_call_with_output_string:           String Ports.        (line   7)
* scm_call_with_unblocked_asyncs:        Asyncs.              (line  63)
* scm_cancel_thread:                     Threads.             (line  83)
* scm_car:                               Pairs.               (line  72)
* SCM_CAR:                               Pairs.               (line  76)
* scm_catch:                             Catch.               (line  56)
* scm_catch_with_pre_unwind_handler:     Catch.               (line  54)
* scm_cdaaar:                            Pairs.               (line 132)
* scm_cdaadr:                            Pairs.               (line 131)
* scm_cdaar:                             Pairs.               (line 120)
* scm_cdadar:                            Pairs.               (line 130)
* scm_cdaddr:                            Pairs.               (line 129)
* scm_cdadr:                             Pairs.               (line 119)
* scm_cdar:                              Pairs.               (line 114)
* scm_cddaar:                            Pairs.               (line 128)
* scm_cddadr:                            Pairs.               (line 127)
* scm_cddar:                             Pairs.               (line 118)
* scm_cdddar:                            Pairs.               (line 126)
* scm_cddddr:                            Pairs.               (line 125)
* scm_cdddr:                             Pairs.               (line 117)
* scm_cddr:                              Pairs.               (line 113)
* scm_cdr:                               Pairs.               (line  73)
* SCM_CDR:                               Pairs.               (line  77)
* scm_ceiling:                           Arithmetic.          (line  70)
* scm_ceiling_divide:                    Arithmetic.          (line 132)
* scm_ceiling_quotient:                  Arithmetic.          (line 133)
* scm_ceiling_remainder:                 Arithmetic.          (line 134)
* scm_cell:                              Allocating Cells.    (line  19)
* SCM_CELL_OBJECT:                       Accessing Cell Entries.  (line  22)
* SCM_CELL_TYPE:                         Heap Cell Type Information.  (line  12)
* SCM_CELL_WORD:                         Accessing Cell Entries.  (line  12)
* scm_centered_divide:                   Arithmetic.          (line 179)
* scm_centered_quotient:                 Arithmetic.          (line 180)
* scm_centered_remainder:                Arithmetic.          (line 181)
* scm_char_alphabetic_p:                 Characters.          (line 164)
* scm_char_downcase:                     Characters.          (line 226)
* scm_char_general_category:             Characters.          (line 188)
* scm_char_is_both_p:                    Characters.          (line 184)
* scm_char_locale_ci_eq:                 Text Collation.      (line  44)
* scm_char_locale_ci_gt:                 Text Collation.      (line  37)
* scm_char_locale_ci_lt:                 Text Collation.      (line  35)
* scm_char_locale_downcase:              Character Case Mapping.  (line  24)
* scm_char_locale_gt:                    Text Collation.      (line  33)
* scm_char_locale_lt:                    Text Collation.      (line  31)
* scm_char_locale_titlecase:             Character Case Mapping.  (line  29)
* scm_char_locale_upcase:                Character Case Mapping.  (line  19)
* scm_char_lower_case_p:                 Characters.          (line 180)
* scm_char_numeric_p:                    Characters.          (line 168)
* scm_char_p:                            Characters.          (line 107)
* scm_char_set:                          Creating Character Sets.  (line  14)
* scm_char_set_adjoin:                   Character-Set Algebra.  (line  12)
* scm_char_set_adjoin_x:                 Character-Set Algebra.  (line  22)
* scm_char_set_any:                      Querying Character Sets.  (line  54)
* scm_char_set_complement:               Character-Set Algebra.  (line  32)
* scm_char_set_complement_x:             Character-Set Algebra.  (line  63)
* scm_char_set_contains_p:               Querying Character Sets.  (line  44)
* scm_char_set_copy:                     Creating Character Sets.  (line   9)
* scm_char_set_count:                    Querying Character Sets.  (line  29)
* scm_char_set_cursor:                   Iterating Over Character Sets.  (line  17)
* scm_char_set_cursor_next:              Iterating Over Character Sets.  (line  27)
* scm_char_set_delete:                   Character-Set Algebra.  (line  17)
* scm_char_set_delete_x:                 Character-Set Algebra.  (line  27)
* scm_char_set_difference:               Character-Set Algebra.  (line  50)
* scm_char_set_difference_x:             Character-Set Algebra.  (line  75)
* scm_char_set_diff_plus_intersection:   Character-Set Algebra.  (line  58)
* scm_char_set_diff_plus_intersection_x: Character-Set Algebra.  (line  83)
* scm_char_set_eq:                       Character Set Predicates/Comparison.  (line  16)
* scm_char_set_every:                    Querying Character Sets.  (line  49)
* scm_char_set_filter:                   Creating Character Sets.  (line  40)
* scm_char_set_filter_x:                 Creating Character Sets.  (line  46)
* scm_char_set_fold:                     Iterating Over Character Sets.  (line  38)
* scm_char_set_for_each:                 Iterating Over Character Sets.  (line  65)
* scm_char_set_hash:                     Character Set Predicates/Comparison.  (line  25)
* scm_char_set_intersection:             Character-Set Algebra.  (line  46)
* scm_char_set_intersection_x:           Character-Set Algebra.  (line  71)
* scm_char_set_leq:                      Character Set Predicates/Comparison.  (line  20)
* scm_char_set_map:                      Iterating Over Character Sets.  (line  70)
* scm_char_set_p:                        Character Set Predicates/Comparison.  (line  12)
* scm_char_set_ref:                      Iterating Over Character Sets.  (line  21)
* scm_char_set_size:                     Querying Character Sets.  (line  25)
* scm_char_set_to_list:                  Querying Character Sets.  (line  34)
* scm_char_set_to_string:                Querying Character Sets.  (line  38)
* scm_char_set_unfold:                   Iterating Over Character Sets.  (line  43)
* scm_char_set_unfold_x:                 Iterating Over Character Sets.  (line  54)
* scm_char_set_union:                    Character-Set Algebra.  (line  42)
* scm_char_set_union_x:                  Character-Set Algebra.  (line  67)
* scm_char_set_xor:                      Character-Set Algebra.  (line  54)
* scm_char_set_xor_x:                    Character-Set Algebra.  (line  79)
* scm_char_titlecase:                    Characters.          (line 230)
* scm_char_to_integer:                   Characters.          (line 212)
* scm_char_upcase:                       Characters.          (line 222)
* scm_char_upper_case_p:                 Characters.          (line 176)
* scm_char_whitespace_p:                 Characters.          (line 172)
* scm_chdir:                             Processes.           (line   7)
* scm_chmod:                             File System.         (line 144)
* scm_chown:                             File System.         (line 131)
* scm_chroot:                            Processes.           (line  26)
* scm_close:                             Ports and File Descriptors.  (line 156)
* scm_closedir:                          File System.         (line 261)
* scm_close_fdes:                        Ports and File Descriptors.  (line 163)
* scm_close_port:                        Ports.               (line  74)
* scm_complex_p:                         Complex Numbers.     (line  37)
* scm_condition_variable_p:              Mutexes and Condition Variables.  (line 193)
* scm_connect:                           Network Sockets and Communication.  (line 155)
* scm_cons:                              Pairs.               (line  46)
* scm_cons_source:                       Source Properties.   (line  87)
* scm_copy_file:                         File System.         (line 177)
* scm_copy_random_state:                 Random.              (line  15)
* scm_copy_tree:                         Copying.             (line  13)
* scm_crypt:                             Encryption.          (line  14)
* scm_ctermid:                           Terminals and Ptys.  (line  17)
* scm_current_dynamic_state:             Fluids and Dynamic States.  (line 152)
* scm_current_error_port:                Default Ports.       (line  39)
* scm_current_input_port:                Default Ports.       (line   7)
* scm_current_load_port:                 Loading.             (line  79)
* scm_current_module:                    Module System Reflection.  (line  18)
* scm_current_output_port:               Default Ports.       (line  24)
* scm_current_processor_count:           Threads.             (line 123)
* scm_current_thread:                    Threads.             (line  25)
* scm_current_time:                      Time.                (line   7)
* scm_c_angle:                           Complex.             (line  42)
* scm_c_array_rank:                      Array Procedures.    (line 141)
* scm_c_bind_keyword_arguments:          Keyword Procedures.  (line  40)
* scm_c_bitvector_length:                Bit Vectors.         (line  38)
* scm_c_bitvector_ref:                   Bit Vectors.         (line  46)
* scm_c_bitvector_set_x:                 Bit Vectors.         (line  54)
* scm_c_bytevector_length:               Bytevector Manipulation.  (line  26)
* scm_c_bytevector_ref:                  Bytevector Manipulation.  (line  51)
* scm_c_bytevector_set_x:                Bytevector Manipulation.  (line  54)
* scm_c_call_with_blocked_asyncs:        Asyncs.              (line  58)
* scm_c_call_with_current_module:        Accessing Modules from C.  (line  12)
* scm_c_call_with_unblocked_asyncs:      Asyncs.              (line  69)
* scm_c_catch:                           Catch.               (line 107)
* scm_c_define:                          Top Level.           (line  42)
* scm_c_define <1>:                      Accessing Modules from C.  (line  97)
* scm_c_define_gsubr:                    Primitive Procedures.  (line  24)
* scm_c_define_module:                   Accessing Modules from C.  (line 126)
* scm_c_downcase:                        Characters.          (line 241)
* scm_c_eval_string:                     Fly Evaluation.      (line  62)
* scm_c_export:                          Accessing Modules from C.  (line 149)
* scm_c_hook_add:                        C Hooks.             (line  70)
* scm_c_hook_init:                       C Hooks.             (line  42)
* scm_c_hook_remove:                     C Hooks.             (line  76)
* scm_c_hook_run:                        C Hooks.             (line  86)
* scm_c_imag_part:                       Complex.             (line  38)
* scm_c_locale_stringn_to_number:        Conversion.          (line  26)
* scm_c_lookup:                          Accessing Modules from C.  (line  78)
* scm_c_magnitude:                       Complex.             (line  41)
* scm_c_make_bitvector:                  Bit Vectors.         (line  27)
* scm_c_make_bytevector:                 Bytevector Manipulation.  (line  11)
* scm_c_make_gsubr:                      Primitive Procedures.  (line  12)
* scm_c_make_polar:                      Complex.             (line  33)
* scm_c_make_port:                       I/O Extensions.      (line  33)
* scm_c_make_port_with_encoding:         I/O Extensions.      (line  30)
* scm_c_make_rectangular:                Complex.             (line  32)
* scm_c_make_socket_address:             Network Socket Address.  (line  74)
* scm_c_make_string:                     String Constructors. (line  36)
* scm_c_make_struct:                     Structure Basics.    (line  34)
* scm_c_make_structv:                    Structure Basics.    (line  36)
* scm_c_make_vector:                     Vector Creation.     (line  40)
* scm_c_module_define:                   Accessing Modules from C.  (line 105)
* scm_c_module_lookup:                   Accessing Modules from C.  (line  86)
* scm_c_nvalues:                         Multiple Values.     (line  40)
* scm_c_port_for_each:                   Ports and File Descriptors.  (line 256)
* scm_c_prepare_to_wait_on_cond:         Asyncs.              (line  95)
* scm_c_prepare_to_wait_on_fd:           Asyncs.              (line  88)
* scm_c_primitive_load:                  Loading.             (line  41)
* scm_c_private_lookup:                  Accessing Modules from C.  (line  43)
* scm_c_private_ref:                     Accessing Modules from C.  (line  68)
* scm_c_private_variable:                Accessing Modules from C.  (line  32)
* scm_c_public_lookup:                   Accessing Modules from C.  (line  40)
* scm_c_public_ref:                      Accessing Modules from C.  (line  65)
* scm_c_public_variable:                 Accessing Modules from C.  (line  19)
* scm_c_put_latin1_chars:                Using Ports from C.  (line  40)
* scm_c_put_utf32_chars:                 Using Ports from C.  (line  42)
* scm_c_read:                            Using Ports from C.  (line   9)
* scm_c_read_bytes:                      Using Ports from C.  (line  24)
* scm_c_real_part:                       Complex.             (line  37)
* scm_c_resolve_module:                  Accessing Modules from C.  (line 138)
* scm_c_round:                           Arithmetic.          (line  74)
* scm_c_run_hook:                        Hook Reference.      (line  72)
* scm_c_string_length:                   String Selection.    (line  14)
* scm_c_string_ref:                      String Selection.    (line  22)
* scm_c_string_set_x:                    String Modification. (line  15)
* scm_c_string_utf8_length:              Bytevectors as Strings.  (line  18)
* scm_c_substring:                       String Selection.    (line  61)
* scm_c_substring_copy:                  String Selection.    (line  64)
* scm_c_substring_read_only:             String Selection.    (line  66)
* scm_c_substring_shared:                String Selection.    (line  62)
* scm_c_symbol_length:                   Symbol Primitives.   (line 152)
* scm_c_titlecase:                       Characters.          (line 242)
* scm_c_truncate:                        Arithmetic.          (line  73)
* scm_c_upcase:                          Characters.          (line 240)
* scm_c_use_module:                      Accessing Modules from C.  (line 144)
* scm_c_values:                          Multiple Values.     (line  32)
* scm_c_value_ref:                       Multiple Values.     (line  44)
* scm_c_vector_length:                   Vector Accessors.    (line  14)
* scm_c_vector_ref:                      Vector Accessors.    (line  28)
* scm_c_vector_set_x:                    Vector Accessors.    (line  48)
* scm_c_wait_finished:                   Asyncs.              (line 105)
* scm_c_with_continuation_barrier:       Continuation Barriers.  (line  23)
* scm_c_with_dynamic_state:              Fluids and Dynamic States.  (line 177)
* scm_c_with_fluid:                      Fluids and Dynamic States.  (line 125)
* scm_c_with_fluids:                     Fluids and Dynamic States.  (line 123)
* scm_c_with_throw_handler:              Throw Handlers.      (line  49)
* scm_c_write:                           Using Ports from C.  (line  17)
* scm_c_write_bytes:                     Using Ports from C.  (line  26)
* scm_datum_to_random_state:             Random.              (line  68)
* SCM_DEFINE:                            Snarfing Macros.     (line  24)
* scm_define:                            Top Level.           (line  41)
* scm_define <1>:                        Accessing Modules from C.  (line 102)
* scm_defined_p:                         Binding Reflection.  (line  10)
* scm_delete:                            List Modification.   (line  30)
* scm_delete1_x:                         List Modification.   (line  64)
* scm_delete_file:                       File System.         (line 173)
* scm_delete_x:                          List Modification.   (line  44)
* scm_delq:                              List Modification.   (line  18)
* scm_delq1_x:                           List Modification.   (line  52)
* scm_delq_x:                            List Modification.   (line  42)
* scm_delv:                              List Modification.   (line  24)
* scm_delv1_x:                           List Modification.   (line  58)
* scm_delv_x:                            List Modification.   (line  43)
* scm_denominator:                       Reals and Rationals. (line 125)
* scm_difference:                        Arithmetic.          (line  18)
* scm_directory_stream_p:                File System.         (line 245)
* scm_dirname:                           File System.         (line 340)
* scm_display_application:               Frames.              (line  62)
* scm_display_backtrace:                 Stacks.              (line  26)
* scm_display_backtrace_with_highlights: Stacks.              (line  24)
* scm_display_error:                     Handling Errors.     (line  35)
* scm_divide:                            Arithmetic.          (line  29)
* scm_double_cell:                       Allocating Cells.    (line  26)
* scm_doubly_weak_hash_table_p:          Weak hash tables.    (line  31)
* scm_drain_input:                       Buffering.           (line 103)
* scm_dup2:                              Ports and File Descriptors.  (line 246)
* scm_dup_to_fdes:                       Ports and File Descriptors.  (line 199)
* scm_dynamic_call:                      Foreign Functions.   (line  25)
* scm_dynamic_func:                      Foreign Functions.   (line  11)
* scm_dynamic_link:                      Foreign Libraries.   (line  38)
* scm_dynamic_object_p:                  Foreign Libraries.   (line  65)
* scm_dynamic_pointer:                   Foreign Variables.   (line  10)
* scm_dynamic_state_p:                   Fluids and Dynamic States.  (line 143)
* scm_dynamic_unlink:                    Foreign Libraries.   (line  69)
* scm_dynamic_wind:                      Dynamic Wind.        (line  70)
* scm_dynwind_begin:                     Dynamic Wind.        (line 127)
* scm_dynwind_block_asyncs:              Asyncs.              (line  73)
* scm_dynwind_current_dynamic_state:     Fluids and Dynamic States.  (line 172)
* scm_dynwind_current_error_port:        Default Ports.       (line  65)
* scm_dynwind_current_input_port:        Default Ports.       (line  63)
* scm_dynwind_current_output_port:       Default Ports.       (line  64)
* scm_dynwind_end:                       Dynamic Wind.        (line 153)
* scm_dynwind_fluid:                     Fluids and Dynamic States.  (line 133)
* scm_dynwind_free:                      Dynamic Wind.        (line 190)
* scm_dynwind_free <1>:                  Memory Blocks.       (line 121)
* scm_dynwind_lock_mutex:                Mutexes and Condition Variables.  (line 154)
* scm_dynwind_rewind_handler:            Dynamic Wind.        (line 178)
* scm_dynwind_rewind_handler_with_scm:   Dynamic Wind.        (line 180)
* scm_dynwind_unblock_asyncs:            Asyncs.              (line  78)
* scm_dynwind_unwind_handler:            Dynamic Wind.        (line 166)
* scm_dynwind_unwind_handler_with_scm:   Dynamic Wind.        (line 168)
* scm_effective_version:                 Build Config.        (line  15)
* scm_end_of_char_set_p:                 Iterating Over Character Sets.  (line  33)
* scm_environ:                           Runtime Environment. (line  85)
* scm_eof_object_p:                      Binary I/O.          (line  34)
* SCM_EOF_VAL:                           Immediate objects.   (line  35)
* SCM_EOL:                               Immediate objects.   (line  31)
* scm_equal_p:                           Equality.            (line  92)
* scm_eqv_p:                             Equality.            (line  76)
* scm_eq_p:                              Equality.            (line  33)
* scm_error:                             Handling Errors.     (line  81)
* scm_error_scm:                         Error Reporting.     (line  15)
* scm_euclidean_divide:                  Arithmetic.          (line  81)
* scm_euclidean_quotient:                Arithmetic.          (line  82)
* scm_euclidean_remainder:               Arithmetic.          (line  83)
* scm_eval:                              Fly Evaluation.      (line  11)
* scm_eval_string:                       Fly Evaluation.      (line  57)
* scm_eval_string_in_module:             Fly Evaluation.      (line  58)
* scm_even_p:                            Integer Operations.  (line  11)
* scm_exact_integer_p:                   Integers.            (line  85)
* scm_exact_integer_sqrt:                Integer Operations.  (line  64)
* scm_exact_p:                           Exactness.           (line  20)
* scm_exact_to_inexact:                  Exactness.           (line  69)
* scm_execl:                             Processes.           (line 252)
* scm_execle:                            Processes.           (line 277)
* scm_execlp:                            Processes.           (line 267)
* scm_f32vector:                         SRFI-4 API.          (line  85)
* scm_f32vector_elements:                SRFI-4 API.          (line 273)
* scm_f32vector_length:                  SRFI-4 API.          (line 113)
* scm_f32vector_p:                       SRFI-4 API.          (line  29)
* scm_f32vector_ref:                     SRFI-4 API.          (line 139)
* scm_f32vector_set_x:                   SRFI-4 API.          (line 166)
* scm_f32vector_to_list:                 SRFI-4 API.          (line 193)
* scm_f32vector_writable_elements:       SRFI-4 API.          (line 301)
* scm_f64vector:                         SRFI-4 API.          (line  86)
* scm_f64vector_elements:                SRFI-4 API.          (line 275)
* scm_f64vector_length:                  SRFI-4 API.          (line 114)
* scm_f64vector_p:                       SRFI-4 API.          (line  30)
* scm_f64vector_ref:                     SRFI-4 API.          (line 140)
* scm_f64vector_set_x:                   SRFI-4 API.          (line 167)
* scm_f64vector_to_list:                 SRFI-4 API.          (line 194)
* scm_f64vector_writable_elements:       SRFI-4 API.          (line 303)
* scm_fcntl:                             Ports and File Descriptors.  (line 270)
* scm_fdes_to_ports:                     Ports and File Descriptors.  (line  87)
* scm_fdopen:                            Ports and File Descriptors.  (line  80)
* scm_fileno:                            Ports and File Descriptors.  (line  71)
* scm_file_encoding:                     Character Encoding of Source Files.  (line  65)
* scm_file_port_p:                       File Ports.          (line 175)
* scm_finite_p:                          Reals and Rationals. (line 108)
* scm_flock:                             Ports and File Descriptors.  (line 316)
* scm_floor:                             Arithmetic.          (line  66)
* scm_floor_divide:                      Arithmetic.          (line 107)
* scm_floor_quotient:                    Arithmetic.          (line 108)
* scm_floor_remainder:                   Arithmetic.          (line 109)
* scm_fluid_bound_p:                     Fluids and Dynamic States.  (line  94)
* scm_fluid_p:                           Fluids and Dynamic States.  (line  61)
* scm_fluid_ref:                         Fluids and Dynamic States.  (line  65)
* scm_fluid_ref_star:                    Fluids and Dynamic States.  (line  75)
* scm_fluid_set_x:                       Fluids and Dynamic States.  (line  71)
* scm_fluid_thread_local_p:              Thread Local Variables.  (line  42)
* scm_fluid_unset_x:                     Fluids and Dynamic States.  (line  90)
* scm_flush_all_ports:                   Buffering.           (line  94)
* scm_force:                             Delayed Evaluation.  (line  19)
* scm_force_output:                      Buffering.           (line  86)
* scm_foreign_object_ref:                Foreign Objects.     (line  71)
* scm_foreign_object_set_x:              Foreign Objects.     (line  81)
* scm_foreign_object_signed_ref:         Foreign Objects.     (line  74)
* scm_foreign_object_signed_set_x:       Foreign Objects.     (line  85)
* scm_foreign_object_unsigned_ref:       Foreign Objects.     (line  72)
* scm_foreign_object_unsigned_set_x:     Foreign Objects.     (line  83)
* scm_fork:                              Processes.           (line 287)
* scm_frame_arguments:                   Frames.              (line  21)
* scm_frame_p:                           Frames.              (line   7)
* scm_frame_previous:                    Frames.              (line  11)
* scm_frame_procedure_name:              Frames.              (line  16)
* scm_from_bool:                         Booleans.            (line  80)
* scm_from_char:                         Integers.            (line 180)
* scm_from_double:                       Reals and Rationals. (line 138)
* scm_from_int:                          Integers.            (line 185)
* scm_from_int16:                        Integers.            (line 197)
* scm_from_int32:                        Integers.            (line 199)
* scm_from_int64:                        Integers.            (line 201)
* scm_from_int8:                         Integers.            (line 195)
* scm_from_intmax:                       Integers.            (line 203)
* scm_from_intptr_t:                     Integers.            (line 205)
* scm_from_latin1_keyword:               Keyword Procedures.  (line  34)
* scm_from_latin1_string:                Conversion to/from C.  (line 164)
* scm_from_latin1_stringn:               Conversion to/from C.  (line 172)
* scm_from_latin1_symbol:                Symbol Primitives.   (line 122)
* scm_from_locale_keyword:               Keyword Procedures.  (line  21)
* scm_from_locale_keywordn:              Keyword Procedures.  (line  22)
* scm_from_locale_string:                Conversion to/from C.  (line  37)
* scm_from_locale_stringn:               Conversion to/from C.  (line  38)
* scm_from_locale_symbol:                Symbol Primitives.   (line 128)
* scm_from_locale_symboln:               Symbol Primitives.   (line 129)
* scm_from_long:                         Integers.            (line 187)
* scm_from_long_long:                    Integers.            (line 189)
* scm_from_mpz:                          Integers.            (line 218)
* scm_from_pointer:                      Foreign Variables.   (line  70)
* scm_from_port_string:                  Conversion to/from C.  (line 203)
* scm_from_port_stringn:                 Conversion to/from C.  (line 204)
* scm_from_ptrdiff_t:                    Integers.            (line 194)
* scm_from_schar:                        Integers.            (line 181)
* scm_from_short:                        Integers.            (line 183)
* scm_from_signed_integer:               Integers.            (line 138)
* scm_from_size_t:                       Integers.            (line 191)
* scm_from_sockaddr:                     Network Socket Address.  (line  83)
* scm_from_ssize_t:                      Integers.            (line 192)
* scm_from_stringn:                      Conversion to/from C.  (line 149)
* scm_from_uchar:                        Integers.            (line 182)
* scm_from_uint:                         Integers.            (line 186)
* scm_from_uint16:                       Integers.            (line 198)
* scm_from_uint32:                       Integers.            (line 200)
* scm_from_uint64:                       Integers.            (line 202)
* scm_from_uint8:                        Integers.            (line 196)
* scm_from_uintmax:                      Integers.            (line 204)
* scm_from_uintptr_t:                    Integers.            (line 193)
* scm_from_uintptr_t <1>:                Integers.            (line 206)
* scm_from_ulong:                        Integers.            (line 188)
* scm_from_ulong_long:                   Integers.            (line 190)
* scm_from_unsigned_integer:             Integers.            (line 139)
* scm_from_ushort:                       Integers.            (line 184)
* scm_from_utf32_string:                 Conversion to/from C.  (line 166)
* scm_from_utf32_stringn:                Conversion to/from C.  (line 175)
* scm_from_utf8_keyword:                 Keyword Procedures.  (line  35)
* scm_from_utf8_string:                  Conversion to/from C.  (line 165)
* scm_from_utf8_stringn:                 Conversion to/from C.  (line 174)
* scm_from_utf8_symbol:                  Symbol Primitives.   (line 123)
* scm_fsync:                             Ports and File Descriptors.  (line 121)
* scm_ftell:                             Random Access.       (line  30)
* scm_gc:                                Garbage Collection Functions.  (line   7)
* scm_gcd:                               Integer Operations.  (line  41)
* scm_gc_calloc:                         Memory Blocks.       (line  79)
* scm_gc_free:                           Memory Blocks.       (line  95)
* scm_gc_live_object_stats:              Garbage Collection Functions.  (line  58)
* scm_gc_malloc:                         Memory Blocks.       (line  74)
* scm_gc_malloc_pointerless:             Memory Blocks.       (line  75)
* scm_gc_mark:                           Garbage Collection Functions.  (line  61)
* scm_gc_protect_object:                 Garbage Collection Functions.  (line  13)
* scm_gc_realloc:                        Memory Blocks.       (line  77)
* scm_gc_register_allocation:            Memory Blocks.       (line 108)
* scm_gc_stats:                          Garbage Collection Functions.  (line  53)
* scm_gc_unprotect_object:               Garbage Collection Functions.  (line  26)
* scm_gensym:                            Symbol Primitives.   (line 160)
* scm_geq_p:                             Comparison.          (line  31)
* scm_getaddrinfo:                       Network Databases.   (line  18)
* scm_getaffinity:                       Processes.           (line 343)
* scm_getcwd:                            Processes.           (line  12)
* scm_getegid:                           Processes.           (line  62)
* scm_getenv:                            Runtime Environment. (line  65)
* scm_geteuid:                           Processes.           (line  55)
* scm_getgid:                            Processes.           (line  51)
* scm_getgrgid:                          User Information.    (line  97)
* scm_getgroups:                         Processes.           (line  37)
* scm_gethost:                           Network Databases.   (line 187)
* scm_gethostname:                       System Identification.  (line  31)
* scm_getitimer:                         Signals.             (line 157)
* scm_getlogin:                          User Information.    (line 106)
* scm_getnet:                            Network Databases.   (line 251)
* scm_getpass:                           Encryption.          (line  22)
* scm_getpeername:                       Network Sockets and Communication.  (line 233)
* scm_getpgrp:                           Processes.           (line 103)
* scm_getpid:                            Processes.           (line  33)
* scm_getppid:                           Processes.           (line  42)
* scm_getpriority:                       Processes.           (line 331)
* scm_getproto:                          Network Databases.   (line 298)
* scm_getpwuid:                          User Information.    (line  54)
* scm_getserv:                           Network Databases.   (line 348)
* scm_getsid:                            Processes.           (line 122)
* scm_getsockname:                       Network Sockets and Communication.  (line 223)
* scm_getsockopt:                        Network Sockets and Communication.  (line  59)
* scm_gettext:                           Gettext Support.     (line  20)
* scm_gettimeofday:                      Time.                (line  12)
* scm_getuid:                            Processes.           (line  47)
* scm_get_bytevector_all:                Binary I/O.          (line  67)
* scm_get_bytevector_n:                  Binary I/O.          (line  41)
* scm_get_bytevector_n_x:                Binary I/O.          (line  47)
* scm_get_bytevector_some:               Binary I/O.          (line  53)
* scm_get_bytevector_some_x:             Binary I/O.          (line  60)
* scm_get_internal_real_time:            Time.                (line 164)
* scm_get_internal_run_time:             Time.                (line 168)
* scm_get_output_string:                 String Ports.        (line  44)
* scm_get_u8:                            Binary I/O.          (line  20)
* SCM_GLOBAL_KEYWORD:                    Snarfing Macros.     (line  63)
* SCM_GLOBAL_SYMBOL:                     Snarfing Macros.     (line  45)
* SCM_GLOBAL_VARIABLE:                   Snarfing Macros.     (line  81)
* SCM_GLOBAL_VARIABLE_INIT:              Snarfing Macros.     (line  87)
* scm_gmtime:                            Time.                (line  73)
* scm_gr_p:                              Comparison.          (line  22)
* scm_hash:                              Hash Table Reference.  (line 127)
* scm_hashq:                             Hash Table Reference.  (line 128)
* scm_hashq_create_handle_x:             Hash Table Reference.  (line 164)
* scm_hashq_get_handle:                  Hash Table Reference.  (line 153)
* scm_hashq_ref:                         Hash Table Reference.  (line  94)
* scm_hashq_remove_x:                    Hash Table Reference.  (line 118)
* scm_hashq_set_x:                       Hash Table Reference.  (line 106)
* scm_hashv:                             Hash Table Reference.  (line 129)
* scm_hashv_create_handle_x:             Hash Table Reference.  (line 165)
* scm_hashv_get_handle:                  Hash Table Reference.  (line 154)
* scm_hashv_ref:                         Hash Table Reference.  (line  95)
* scm_hashv_remove_x:                    Hash Table Reference.  (line 119)
* scm_hashv_set_x:                       Hash Table Reference.  (line 107)
* scm_hashx_create_handle_x:             Hash Table Reference.  (line 166)
* scm_hashx_get_handle:                  Hash Table Reference.  (line 155)
* scm_hashx_ref:                         Hash Table Reference.  (line  96)
* scm_hashx_remove_x:                    Hash Table Reference.  (line 120)
* scm_hashx_set_x:                       Hash Table Reference.  (line 108)
* scm_hash_clear_x:                      Hash Table Reference.  (line  86)
* scm_hash_count:                        Hash Table Reference.  (line 220)
* scm_hash_create_handle_x:              Hash Table Reference.  (line 163)
* scm_hash_fold:                         Hash Table Reference.  (line 201)
* scm_hash_for_each:                     Hash Table Reference.  (line 175)
* scm_hash_for_each_handle:              Hash Table Reference.  (line 192)
* scm_hash_get_handle:                   Hash Table Reference.  (line 152)
* scm_hash_map_to_list:                  Hash Table Reference.  (line 174)
* scm_hash_ref:                          Hash Table Reference.  (line  93)
* scm_hash_remove_x:                     Hash Table Reference.  (line 117)
* scm_hash_set_x:                        Hash Table Reference.  (line 105)
* scm_hash_table_p:                      Hash Table Reference.  (line  82)
* SCM_HOOKP:                             Hook Reference.      (line  79)
* scm_hook_empty_p:                      Hook Reference.      (line  39)
* scm_hook_p:                            Hook Reference.      (line  35)
* scm_hook_to_list:                      Hook Reference.      (line  59)
* scm_imag_part:                         Complex.             (line  20)
* SCM_IMP:                               Immediate objects.   (line  13)
* scm_inet_makeaddr:                     Network Address Conversion.  (line  47)
* scm_inet_netof:                        Network Address Conversion.  (line  33)
* scm_inet_ntop:                         Network Address Conversion.  (line  60)
* scm_inet_pton:                         Network Address Conversion.  (line  69)
* scm_inexact_p:                         Exactness.           (line  40)
* scm_inexact_to_exact:                  Exactness.           (line  48)
* scm_inf:                               Reals and Rationals. (line 117)
* scm_inf_p:                             Reals and Rationals. (line  99)
* scm_init_guile:                        Initialization.      (line  52)
* scm_input_port_p:                      Ports.               (line  64)
* scm_integer_expt:                      Bitwise Operations.  (line 129)
* scm_integer_length:                    Bitwise Operations.  (line 114)
* scm_integer_p:                         Integers.            (line  65)
* scm_integer_to_char:                   Characters.          (line 216)
* scm_interaction_environment:           Fly Evaluation.      (line  20)
* scm_internal_catch:                    Catch.               (line 111)
* scm_isatty_p:                          Terminals and Ptys.  (line   7)
* scm_is_array:                          Array Procedures.    (line  33)
* scm_is_bitvector:                      Bit Vectors.         (line  19)
* scm_is_bool:                           Booleans.            (line  77)
* scm_is_bytevector:                     Bytevector Manipulation.  (line  19)
* scm_is_complex:                        Complex Numbers.     (line  43)
* scm_is_dynamic_state:                  Fluids and Dynamic States.  (line 147)
* scm_is_eq:                             Equality.            (line  66)
* scm_is_exact:                          Exactness.           (line  32)
* scm_is_exact_integer:                  Integers.            (line  94)
* scm_is_false:                          Booleans.            (line  74)
* scm_is_inexact:                        Exactness.           (line  43)
* scm_is_integer:                        Integers.            (line  81)
* scm_is_keyword:                        Keyword Procedures.  (line  18)
* scm_is_null:                           List Predicates.     (line  24)
* scm_is_number:                         Numerical Tower.     (line  63)
* scm_is_pair:                           Pairs.               (line  55)
* scm_is_rational:                       Reals and Rationals. (line 129)
* scm_is_real:                           Reals and Rationals. (line 128)
* scm_is_signed_integer:                 Integers.            (line 117)
* scm_is_simple_vector:                  Vector Accessing from C.  (line  17)
* scm_is_string:                         String Predicates.   (line  13)
* scm_is_symbol:                         Symbol Primitives.   (line  13)
* scm_is_true:                           Booleans.            (line  71)
* scm_is_typed_array:                    Array Procedures.    (line  36)
* scm_is_unsigned_integer:               Integers.            (line 119)
* scm_is_vector:                         Vector Creation.     (line  50)
* scm_join_thread:                       Threads.             (line  59)
* scm_join_thread_timed:                 Threads.             (line  60)
* SCM_KEYWORD:                           Snarfing Macros.     (line  62)
* scm_keyword_p:                         Keyword Procedures.  (line   7)
* scm_keyword_to_symbol:                 Keyword Procedures.  (line  11)
* scm_kill:                              Signals.             (line  15)
* scm_last_pair:                         List Selection.      (line  14)
* scm_lcm:                               Integer Operations.  (line  49)
* scm_length:                            List Selection.      (line  10)
* scm_leq_p:                             Comparison.          (line  26)
* scm_less_p:                            Comparison.          (line  18)
* scm_link:                              File System.         (line 213)
* scm_listen:                            Network Sockets and Communication.  (line 186)
* scm_list_1:                            List Constructors.   (line  12)
* scm_list_2:                            List Constructors.   (line  13)
* scm_list_3:                            List Constructors.   (line  14)
* scm_list_4:                            List Constructors.   (line  15)
* scm_list_5:                            List Constructors.   (line  16)
* scm_list_cdr_set_x:                    List Modification.   (line  14)
* scm_list_copy:                         List Constructors.   (line  33)
* scm_list_head:                         List Selection.      (line  33)
* scm_list_n:                            List Constructors.   (line  17)
* scm_list_p:                            List Predicates.     (line  12)
* scm_list_ref:                          List Selection.      (line  19)
* scm_list_set_x:                        List Modification.   (line  10)
* scm_list_tail:                         List Selection.      (line  24)
* scm_list_to_bitvector:                 Bit Vectors.         (line  64)
* scm_list_to_c32vector:                 SRFI-4 API.          (line 221)
* scm_list_to_c64vector:                 SRFI-4 API.          (line 222)
* scm_list_to_char_set:                  Creating Character Sets.  (line  18)
* scm_list_to_char_set_x:                Creating Character Sets.  (line  24)
* scm_list_to_f32vector:                 SRFI-4 API.          (line 219)
* scm_list_to_f64vector:                 SRFI-4 API.          (line 220)
* scm_list_to_s16vector:                 SRFI-4 API.          (line 214)
* scm_list_to_s32vector:                 SRFI-4 API.          (line 216)
* scm_list_to_s64vector:                 SRFI-4 API.          (line 218)
* scm_list_to_s8vector:                  SRFI-4 API.          (line 212)
* scm_list_to_typed_array:               Array Procedures.    (line  74)
* scm_list_to_u16vector:                 SRFI-4 API.          (line 213)
* scm_list_to_u32vector:                 SRFI-4 API.          (line 215)
* scm_list_to_u64vector:                 SRFI-4 API.          (line 217)
* scm_list_to_u8vector:                  SRFI-4 API.          (line 211)
* scm_lnaof:                             Network Address Conversion.  (line  40)
* scm_load_extension:                    Foreign Functions.   (line  56)
* scm_load_thunk_from_file:              Bytecode.            (line 119)
* scm_load_thunk_from_memory:            Bytecode.            (line 124)
* scm_locale_p:                          i18n Introduction.   (line  69)
* scm_locale_string_to_inexact:          Number Input and Output.  (line  26)
* scm_locale_string_to_integer:          Number Input and Output.  (line  13)
* scm_localtime:                         Time.                (line  65)
* scm_local_eval:                        Local Evaluation.    (line  17)
* scm_lock_mutex:                        Mutexes and Condition Variables.  (line 132)
* scm_logand:                            Bitwise Operations.  (line  12)
* scm_logbit_p:                          Bitwise Operations.  (line  57)
* scm_logcount:                          Bitwise Operations.  (line 100)
* scm_logior:                            Bitwise Operations.  (line  20)
* scm_lognot:                            Bitwise Operations.  (line  38)
* scm_logtest:                           Bitwise Operations.  (line  48)
* scm_lookahead_u8:                      Binary I/O.          (line  25)
* scm_lookup:                            Accessing Modules from C.  (line  83)
* scm_loxor:                             Bitwise Operations.  (line  28)
* scm_lstat:                             File System.         (line 120)
* scm_macro_binding:                     Internal Macros.     (line  32)
* scm_macro_name:                        Internal Macros.     (line  28)
* scm_macro_p:                           Internal Macros.     (line  11)
* scm_macro_transformer:                 Internal Macros.     (line  36)
* scm_macro_type:                        Internal Macros.     (line  23)
* scm_magnitude:                         Complex.             (line  24)
* scm_major_version:                     Build Config.        (line  16)
* scm_make_array:                        Array Procedures.    (line  40)
* scm_make_bitvector:                    Bit Vectors.         (line  23)
* scm_make_bytevector:                   Bytevector Manipulation.  (line  10)
* scm_make_c32vector:                    SRFI-4 API.          (line  58)
* scm_make_c64vector:                    SRFI-4 API.          (line  59)
* scm_make_condition_variable:           Mutexes and Condition Variables.  (line 189)
* scm_make_doubly_weak_hash_table:       Weak hash tables.    (line  11)
* scm_make_f32vector:                    SRFI-4 API.          (line  56)
* scm_make_f64vector:                    SRFI-4 API.          (line  57)
* scm_make_fluid:                        Fluids and Dynamic States.  (line  44)
* scm_make_fluid_with_default:           Fluids and Dynamic States.  (line  45)
* scm_make_foreign_object_0:             Foreign Objects.     (line  53)
* scm_make_foreign_object_1:             Foreign Objects.     (line  54)
* scm_make_foreign_object_2:             Foreign Objects.     (line  55)
* scm_make_foreign_object_3:             Foreign Objects.     (line  57)
* scm_make_foreign_object_n:             Foreign Objects.     (line  59)
* scm_make_foreign_object_type:          Foreign Objects.     (line  13)
* scm_make_guardian:                     Guardians.           (line  16)
* scm_make_hook:                         Hook Reference.      (line  29)
* scm_make_locale:                       i18n Introduction.   (line  39)
* scm_make_mutex:                        Mutexes and Condition Variables.  (line 113)
* scm_make_mutex_with_kind:              Mutexes and Condition Variables.  (line 114)
* scm_make_polar:                        Complex.             (line  12)
* scm_make_port_type:                    I/O Extensions.      (line  21)
* scm_make_procedure_with_setter:        Procedures with Setters.  (line  44)
* scm_make_rectangular:                  Complex.             (line   7)
* scm_make_recursive_mutex:              Mutexes and Condition Variables.  (line 126)
* scm_make_regexp:                       Regexp Functions.    (line  53)
* scm_make_s16vector:                    SRFI-4 API.          (line  51)
* scm_make_s32vector:                    SRFI-4 API.          (line  53)
* scm_make_s64vector:                    SRFI-4 API.          (line  55)
* scm_make_s8vector:                     SRFI-4 API.          (line  49)
* scm_make_shared_array:                 Shared Arrays.       (line   7)
* scm_make_smob_type:                    Smobs.               (line  17)
* scm_make_socket_address:               Network Socket Address.  (line  16)
* scm_make_stack:                        Stack Capture.       (line  18)
* scm_make_string:                       String Constructors. (line  31)
* scm_make_struct:                       Structure Basics.    (line  32)
* scm_make_struct_layout:                Meta-Vtables.        (line  86)
* scm_make_symbol:                       Symbol Uninterned.   (line  47)
* scm_make_thread_local_fluid:           Thread Local Variables.  (line  34)
* scm_make_typed_array:                  Array Procedures.    (line  44)
* scm_make_u16vector:                    SRFI-4 API.          (line  50)
* scm_make_u32vector:                    SRFI-4 API.          (line  52)
* scm_make_u64vector:                    SRFI-4 API.          (line  54)
* scm_make_u8vector:                     SRFI-4 API.          (line  48)
* scm_make_unbound_fluid:                Fluids and Dynamic States.  (line  56)
* scm_make_undefined_variable:           Variables.           (line  39)
* scm_make_variable:                     Variables.           (line  43)
* scm_make_vector:                       Vector Creation.     (line  35)
* scm_make_weak_key_hash_table:          Weak hash tables.    (line   9)
* scm_make_weak_value_hash_table:        Weak hash tables.    (line  10)
* scm_make_weak_vector:                  Weak vectors.        (line   7)
* scm_malloc:                            Memory Blocks.       (line  43)
* scm_map:                               List Mapping.        (line  15)
* scm_markcdr:                           Smobs.               (line 188)
* scm_max:                               Arithmetic.          (line  49)
* scm_member:                            List Searching.      (line  27)
* scm_memory_error:                      Handling Errors.     (line 102)
* scm_memq:                              List Searching.      (line  13)
* scm_memv:                              List Searching.      (line  20)
* scm_merge:                             Sorting.             (line  16)
* scm_merge_x:                           Sorting.             (line  24)
* scm_micro_version:                     Build Config.        (line  18)
* scm_min:                               Arithmetic.          (line  53)
* scm_minor_version:                     Build Config.        (line  17)
* scm_misc_error:                        Handling Errors.     (line 103)
* scm_mkdir:                             File System.         (line 224)
* scm_mknod:                             File System.         (line 280)
* scm_mkstemp:                           File System.         (line 310)
* scm_mktime:                            Time.                (line  79)
* scm_module_define:                     Accessing Modules from C.  (line 107)
* scm_module_ensure_local_variable:      Accessing Modules from C.  (line 116)
* scm_module_lookup:                     Accessing Modules from C.  (line  87)
* scm_module_reverse_lookup:             Accessing Modules from C.  (line 122)
* scm_module_variable:                   Accessing Modules from C.  (line  91)
* scm_modulo:                            Integer Operations.  (line  29)
* scm_modulo_expt:                       Integer Operations.  (line  57)
* scm_mutex_level:                       Mutexes and Condition Variables.  (line 178)
* scm_mutex_locked_p:                    Mutexes and Condition Variables.  (line 184)
* scm_mutex_owner:                       Mutexes and Condition Variables.  (line 172)
* scm_mutex_p:                           Mutexes and Condition Variables.  (line 122)
* scm_nan:                               Reals and Rationals. (line 113)
* scm_nan_p:                             Reals and Rationals. (line 104)
* scm_native_endianness:                 Bytevector Endianness.  (line  18)
* scm_negative_p:                        Comparison.          (line  44)
* scm_new_double_smob:                   Smobs.               (line 132)
* scm_new_smob:                          Smobs.               (line 131)
* scm_ngettext:                          Gettext Support.     (line  45)
* scm_nice:                              Processes.           (line 311)
* scm_not:                               Booleans.            (line  58)
* scm_null_p:                            List Predicates.     (line  21)
* scm_number_p:                          Numerical Tower.     (line  48)
* scm_number_to_string:                  Conversion.          (line  12)
* scm_numerator:                         Reals and Rationals. (line 121)
* scm_num_eq_p:                          Comparison.          (line  14)
* scm_num_overflow:                      Handling Errors.     (line  95)
* scm_object_properties:                 Object Properties.   (line  58)
* scm_object_property:                   Object Properties.   (line  66)
* scm_object_to_string:                  General Conversion.  (line  19)
* scm_odd_p:                             Integer Operations.  (line   7)
* scm_oneminus:                          Arithmetic.          (line  38)
* scm_oneplus:                           Arithmetic.          (line  34)
* scm_open:                              Ports and File Descriptors.  (line 128)
* scm_opendir:                           File System.         (line 236)
* scm_open_bytevector_input_port:        Bytevector Ports.    (line   7)
* scm_open_bytevector_output_port:       Bytevector Ports.    (line  14)
* scm_open_fdes:                         Ports and File Descriptors.  (line 152)
* scm_open_file:                         File Ports.          (line  22)
* scm_open_file_with_encoding:           File Ports.          (line  20)
* scm_open_input_string:                 String Ports.        (line  30)
* scm_open_output_string:                String Ports.        (line  37)
* scm_output_port_p:                     Ports.               (line  69)
* scm_out_of_range:                      Handling Errors.     (line  96)
* SCM_PACK:                              The SCM Type.        (line  32)
* scm_pair_p:                            Pairs.               (line  52)
* scm_parse_path:                        Load Paths.          (line 109)
* scm_parse_path_with_ellipsis:          Load Paths.          (line 115)
* scm_pause:                             Signals.             (line 132)
* scm_permanent_object:                  Garbage Collection Functions.  (line  32)
* scm_pipe:                              Ports and File Descriptors.  (line 170)
* scm_pointer_address:                   Foreign Variables.   (line  34)
* scm_pointer_to_bytevector:             Void Pointers and Byte Access.  (line  15)
* scm_pointer_to_procedure:              Dynamic FFI.         (line  11)
* scm_pointer_to_procedure_with_errno:   Dynamic FFI.         (line  13)
* scm_port_closed_p:                     Ports.               (line  83)
* scm_port_column:                       Textual I/O.         (line 135)
* scm_port_conversion_strategy:          Encoding.            (line  61)
* scm_port_encoding:                     Encoding.            (line  12)
* scm_port_filename:                     File Ports.          (line 160)
* scm_port_for_each:                     Ports and File Descriptors.  (line 255)
* scm_port_line:                         Textual I/O.         (line 136)
* scm_port_mode:                         File Ports.          (line 153)
* scm_port_p:                            Ports.               (line  60)
* scm_port_revealed:                     Ports and File Descriptors.  (line  62)
* scm_positive_p:                        Comparison.          (line  40)
* scm_primitive_eval:                    Fly Evaluation.      (line 113)
* scm_primitive_exit:                    Processes.           (line 231)
* scm_primitive_load:                    Loading.             (line  33)
* scm_primitive_load_path:               Load Paths.          (line  42)
* scm_primitive_move_to_fdes:            Ports and File Descriptors.  (line 102)
* scm_primitive__exit:                   Processes.           (line 232)
* scm_private_lookup:                    Accessing Modules from C.  (line  42)
* scm_private_ref:                       Accessing Modules from C.  (line  67)
* scm_private_variable:                  Accessing Modules from C.  (line  31)
* scm_procedure:                         Procedures with Setters.  (line  54)
* scm_procedure_documentation:           Procedure Properties.  (line  59)
* scm_procedure_name:                    Procedure Properties.  (line  31)
* scm_procedure_p:                       Procedure Properties.  (line  18)
* scm_procedure_properties:              Procedure Properties.  (line  40)
* scm_procedure_property:                Procedure Properties.  (line  44)
* scm_procedure_source:                  Procedure Properties.  (line  35)
* scm_procedure_to_pointer:              Dynamic FFI.         (line 114)
* scm_procedure_with_setter_p:           Procedures with Setters.  (line  49)
* scm_product:                           Arithmetic.          (line  24)
* scm_program_arguments:                 Runtime Environment. (line   9)
* scm_program_arities:                   Compiled Procedures. (line  90)
* scm_program_code:                      Compiled Procedures. (line  38)
* scm_program_free_variable-ref:         Compiled Procedures. (line  47)
* scm_program_free_variable_set_x:       Compiled Procedures. (line  49)
* scm_program_num_free_variables:        Compiled Procedures. (line  43)
* scm_program_p:                         Compiled Procedures. (line  34)
* scm_promise_p:                         Delayed Evaluation.  (line  15)
* scm_pthread_cond_timedwait:            Blocking.            (line  41)
* scm_pthread_cond_wait:                 Blocking.            (line  39)
* scm_pthread_mutex_lock:                Blocking.            (line  35)
* scm_public_lookup:                     Accessing Modules from C.  (line  39)
* scm_public_ref:                        Accessing Modules from C.  (line  64)
* scm_public_variable:                   Accessing Modules from C.  (line  18)
* scm_putenv:                            Runtime Environment. (line  95)
* scm_put_bytevector:                    Binary I/O.          (line  88)
* scm_put_u8:                            Binary I/O.          (line  83)
* scm_quotient:                          Integer Operations.  (line  16)
* scm_raise:                             Signals.             (line  44)
* scm_random:                            Random.              (line  19)
* scm_random_exp:                        Random.              (line  27)
* scm_random_hollow_sphere_x:            Random.              (line  33)
* scm_random_normal:                     Random.              (line  40)
* scm_random_normal_vector_x:            Random.              (line  47)
* scm_random_solid_sphere_x:             Random.              (line  53)
* scm_random_state_from_platform:        Random.              (line  78)
* scm_random_state_to_datum:             Random.              (line  73)
* scm_random_uniform:                    Random.              (line  60)
* scm_rationalize:                       Reals and Rationals. (line  87)
* scm_rational_p:                        Reals and Rationals. (line  80)
* scm_read:                              Scheme Read.         (line   7)
* scm_readdir:                           File System.         (line 250)
* scm_readlink:                          File System.         (line 126)
* scm_read_delimited_x:                  Line/Delimited.      (line  62)
* scm_read_hash_extend:                  Reader Extensions.   (line   7)
* scm_read_line:                         Line/Delimited.      (line  79)
* scm_realloc:                           Memory Blocks.       (line  61)
* scm_real_p:                            Reals and Rationals. (line  73)
* scm_real_part:                         Complex.             (line  16)
* scm_recv:                              Network Sockets and Communication.  (line 241)
* scm_recvfrom:                          Network Sockets and Communication.  (line 270)
* scm_redirect_port:                     Ports and File Descriptors.  (line 231)
* scm_regexp_exec:                       Regexp Functions.    (line  92)
* scm_regexp_p:                          Regexp Functions.    (line 131)
* scm_remainder:                         Integer Operations.  (line  17)
* scm_remember_upto_here_1:              Garbage Collection Functions.  (line  41)
* scm_remember_upto_here_2:              Garbage Collection Functions.  (line  42)
* scm_remove_hook_x:                     Hook Reference.      (line  49)
* scm_rename:                            File System.         (line 208)
* scm_reset_hook_x:                      Hook Reference.      (line  54)
* scm_resolve_module:                    Module System Reflection.  (line  39)
* scm_restore_signals:                   Signals.             (line 116)
* scm_restricted_vector_sort_x:          Sorting.             (line  87)
* scm_reverse:                           Append/Reverse.      (line  42)
* scm_reverse_list_to_string:            String Constructors. (line  24)
* scm_reverse_x:                         Append/Reverse.      (line  43)
* scm_rewinddir:                         File System.         (line 256)
* scm_rmdir:                             File System.         (line 231)
* scm_round_ash:                         Bitwise Operations.  (line  83)
* scm_round_divide:                      Arithmetic.          (line 213)
* scm_round_number:                      Arithmetic.          (line  61)
* scm_round_quotient:                    Arithmetic.          (line 214)
* scm_round_remainder:                   Arithmetic.          (line 215)
* scm_run_finalizers:                    Foreign Objects.     (line  43)
* scm_run_hook:                          Hook Reference.      (line  63)
* scm_s16vector:                         SRFI-4 API.          (line  80)
* scm_s16vector_elements:                SRFI-4 API.          (line 263)
* scm_s16vector_length:                  SRFI-4 API.          (line 108)
* scm_s16vector_p:                       SRFI-4 API.          (line  24)
* scm_s16vector_ref:                     SRFI-4 API.          (line 134)
* scm_s16vector_set_x:                   SRFI-4 API.          (line 161)
* scm_s16vector_to_list:                 SRFI-4 API.          (line 188)
* scm_s16vector_writable_elements:       SRFI-4 API.          (line 291)
* scm_s32vector:                         SRFI-4 API.          (line  82)
* scm_s32vector_elements:                SRFI-4 API.          (line 267)
* scm_s32vector_length:                  SRFI-4 API.          (line 110)
* scm_s32vector_p:                       SRFI-4 API.          (line  26)
* scm_s32vector_ref:                     SRFI-4 API.          (line 136)
* scm_s32vector_set_x:                   SRFI-4 API.          (line 163)
* scm_s32vector_to_list:                 SRFI-4 API.          (line 190)
* scm_s32vector_writable_elements:       SRFI-4 API.          (line 295)
* scm_s64vector:                         SRFI-4 API.          (line  84)
* scm_s64vector_elements:                SRFI-4 API.          (line 271)
* scm_s64vector_length:                  SRFI-4 API.          (line 112)
* scm_s64vector_p:                       SRFI-4 API.          (line  28)
* scm_s64vector_ref:                     SRFI-4 API.          (line 138)
* scm_s64vector_set_x:                   SRFI-4 API.          (line 165)
* scm_s64vector_to_list:                 SRFI-4 API.          (line 192)
* scm_s64vector_writable_elements:       SRFI-4 API.          (line 299)
* scm_s8vector:                          SRFI-4 API.          (line  78)
* scm_s8vector_elements:                 SRFI-4 API.          (line 259)
* scm_s8vector_length:                   SRFI-4 API.          (line 106)
* scm_s8vector_p:                        SRFI-4 API.          (line  22)
* scm_s8vector_ref:                      SRFI-4 API.          (line 132)
* scm_s8vector_set_x:                    SRFI-4 API.          (line 159)
* scm_s8vector_to_list:                  SRFI-4 API.          (line 186)
* scm_s8vector_writable_elements:        SRFI-4 API.          (line 287)
* scm_search_path:                       Load Paths.          (line 123)
* scm_seed_to_random_state:              Random.              (line  64)
* scm_seek:                              Random Access.       (line   7)
* scm_select:                            Ports and File Descriptors.  (line 340)
* scm_send:                              Network Sockets and Communication.  (line 258)
* scm_sendfile:                          File System.         (line 182)
* scm_sendto:                            Network Sockets and Communication.  (line 302)
* scm_setaffinity:                       Processes.           (line 354)
* scm_setegid:                           Processes.           (line  96)
* scm_seteuid:                           Processes.           (line  89)
* scm_setgid:                            Processes.           (line  83)
* scm_setgrent:                          User Information.    (line  91)
* scm_setgroups:                         Processes.           (line  69)
* scm_sethost:                           Network Databases.   (line 226)
* scm_sethostname:                       System Identification.  (line  35)
* scm_setitimer:                         Signals.             (line 158)
* scm_setlocale:                         Locales.             (line   7)
* scm_setnet:                            Network Databases.   (line 276)
* scm_setpgid:                           Processes.           (line 108)
* scm_setpriority:                       Processes.           (line 317)
* scm_setproto:                          Network Databases.   (line 323)
* scm_setpwent:                          User Information.    (line  48)
* scm_setserv:                           Network Databases.   (line 384)
* scm_setsid:                            Processes.           (line 115)
* scm_setsockopt:                        Network Sockets and Communication.  (line  60)
* scm_setuid:                            Processes.           (line  77)
* scm_setvbuf:                           Buffering.           (line  65)
* scm_set_automatic_finalization_enabled: Foreign Objects.    (line  28)
* scm_set_car_x:                         Pairs.               (line 152)
* scm_set_cdr_x:                         Pairs.               (line 157)
* SCM_SET_CELL_OBJECT:                   Accessing Cell Entries.  (line  47)
* SCM_SET_CELL_TYPE:                     Heap Cell Type Information.  (line  17)
* SCM_SET_CELL_WORD:                     Accessing Cell Entries.  (line  33)
* scm_set_current_dynamic_state:         Fluids and Dynamic States.  (line 157)
* scm_set_current_error_port:            Default Ports.       (line  51)
* scm_set_current_input_port:            Default Ports.       (line  49)
* scm_set_current_module:                Module System Reflection.  (line  22)
* scm_set_current_output_port:           Default Ports.       (line  50)
* scm_set_object_properties_x:           Object Properties.   (line  62)
* scm_set_object_property_x:             Object Properties.   (line  70)
* scm_set_port_close:                    I/O Extensions.      (line 107)
* scm_set_port_column_x:                 Textual I/O.         (line 148)
* scm_set_port_conversion_strategy_x:    Encoding.            (line  70)
* scm_set_port_encoding_x:               Encoding.            (line  17)
* scm_set_port_filename_x:               File Ports.          (line 168)
* scm_set_port_get_natural_buffer_sizes: I/O Extensions.      (line 166)
* scm_set_port_line_x:                   Textual I/O.         (line 149)
* scm_set_port_needs_close_on_gc:        I/O Extensions.      (line 116)
* scm_set_port_print:                    I/O Extensions.      (line  97)
* scm_set_port_random_access_p:          I/O Extensions.      (line 149)
* scm_set_port_read_wait_fd:             I/O Extensions.      (line  82)
* scm_set_port_revealed_x:               Ports and File Descriptors.  (line  66)
* scm_set_port_seek:                     I/O Extensions.      (line 123)
* scm_set_port_truncate:                 I/O Extensions.      (line 131)
* scm_set_port_write_wait_fd:            I/O Extensions.      (line  84)
* scm_set_procedure_properties_x:        Procedure Properties.  (line  48)
* scm_set_procedure_property_x:          Procedure Properties.  (line  52)
* scm_set_program_arguments:             Runtime Environment. (line  36)
* scm_set_program_arguments_scm:         Runtime Environment. (line  10)
* SCM_SET_SMOB_DATA:                     Smobs.               (line 159)
* SCM_SET_SMOB_DATA_2:                   Smobs.               (line 160)
* SCM_SET_SMOB_DATA_3:                   Smobs.               (line 161)
* scm_set_smob_equalp:                   Smobs.               (line 112)
* SCM_SET_SMOB_FLAGS:                    Smobs.               (line 148)
* scm_set_smob_free:                     Smobs.               (line  36)
* scm_set_smob_mark:                     Smobs.               (line  66)
* SCM_SET_SMOB_OBJECT:                   Smobs.               (line 173)
* SCM_SET_SMOB_OBJECT_2:                 Smobs.               (line 174)
* SCM_SET_SMOB_OBJECT_3:                 Smobs.               (line 175)
* scm_set_smob_print:                    Smobs.               (line  96)
* scm_set_source_properties_x:           Source Properties.   (line  45)
* scm_set_source_property_x:             Source Properties.   (line  50)
* scm_set_struct_vtable_name_x:          Vtable Contents.     (line  47)
* scm_shared_array_increments:           Shared Arrays.       (line  95)
* scm_shared_array_offset:               Shared Arrays.       (line 100)
* scm_shared_array_root:                 Shared Arrays.       (line 104)
* scm_shell:                             Initialization.      (line  94)
* scm_shutdown:                          Network Sockets and Communication.  (line 133)
* scm_sigaction:                         Signals.             (line  49)
* scm_sigaction_for_thread:              Signals.             (line  50)
* scm_signal_condition_variable:         Mutexes and Condition Variables.  (line 216)
* scm_simple_format:                     Simple Output.       (line  10)
* SCM_SIMPLE_VECTOR_LENGTH:              Vector Accessing from C.  (line  26)
* SCM_SIMPLE_VECTOR_REF:                 Vector Accessing from C.  (line  30)
* SCM_SIMPLE_VECTOR_SET:                 Vector Accessing from C.  (line  34)
* scm_sint_list_to_bytevector:           Bytevectors and Integer Lists.  (line  39)
* scm_sizeof:                            Foreign Structs.     (line  13)
* scm_sleep:                             Signals.             (line 139)
* scm_sloppy_assoc:                      Sloppy Alist Functions.  (line  54)
* scm_sloppy_assq:                       Sloppy Alist Functions.  (line  44)
* scm_sloppy_assv:                       Sloppy Alist Functions.  (line  49)
* SCM_SMOB_DATA:                         Smobs.               (line 152)
* SCM_SMOB_DATA_2:                       Smobs.               (line 153)
* SCM_SMOB_DATA_3:                       Smobs.               (line 154)
* SCM_SMOB_FLAGS:                        Smobs.               (line 144)
* SCM_SMOB_OBJECT:                       Smobs.               (line 166)
* SCM_SMOB_OBJECT_2:                     Smobs.               (line 167)
* SCM_SMOB_OBJECT_2_LOC:                 Smobs.               (line 181)
* SCM_SMOB_OBJECT_3:                     Smobs.               (line 168)
* SCM_SMOB_OBJECT_3_LOC:                 Smobs.               (line 182)
* SCM_SMOB_OBJECT_LOC:                   Smobs.               (line 180)
* SCM_SMOB_PREDICATE:                    Smobs.               (line 126)
* SCM_SNARF_INIT:                        Snarfing Macros.     (line  15)
* scm_socket:                            Network Sockets and Communication.  (line  21)
* scm_socketpair:                        Network Sockets and Communication.  (line  48)
* scm_sort:                              Sorting.             (line  48)
* scm_sorted_p:                          Sorting.             (line  42)
* scm_sort_list:                         Sorting.             (line  76)
* scm_sort_list_x:                       Sorting.             (line  81)
* scm_sort_x:                            Sorting.             (line  54)
* scm_source_properties:                 Source Properties.   (line  55)
* scm_source_property:                   Source Properties.   (line  59)
* scm_spawn_thread:                      Threads.             (line  40)
* scm_stable_sort:                       Sorting.             (line  61)
* scm_stable_sort_x:                     Sorting.             (line  66)
* scm_stack_id:                          Stacks.              (line  11)
* scm_stack_length:                      Stacks.              (line  15)
* scm_stack_p:                           Stacks.              (line   7)
* scm_stack_ref:                         Stacks.              (line  19)
* scm_stat:                              File System.         (line  50)
* scm_status_exit_val:                   Processes.           (line 169)
* scm_status_stop_sig:                   Processes.           (line 180)
* scm_status_term_sig:                   Processes.           (line 175)
* scm_std_select:                        Blocking.            (line  46)
* scm_std_sleep:                         Blocking.            (line  52)
* scm_std_usleep:                        Blocking.            (line  56)
* scm_strerror:                          Error Reporting.     (line  30)
* scm_strftime:                          Time.                (line 113)
* scm_string:                            String Constructors. (line  18)
* scm_string_any:                        String Predicates.   (line  24)
* scm_string_append:                     Reversing and Appending Strings.  (line  18)
* scm_string_append_shared:              Reversing and Appending Strings.  (line  27)
* scm_string_bytes_per_char:             String Internals.    (line  25)
* scm_string_capitalize:                 Alphabetic Case Mapping.  (line  49)
* scm_string_capitalize_x:               Alphabetic Case Mapping.  (line  54)
* scm_string_ci_eq:                      String Comparison.   (line 122)
* scm_string_ci_ge:                      String Comparison.   (line 147)
* scm_string_ci_gt:                      String Comparison.   (line 137)
* scm_string_ci_le:                      String Comparison.   (line 142)
* scm_string_ci_lt:                      String Comparison.   (line 132)
* scm_string_ci_neq:                     String Comparison.   (line 127)
* scm_string_ci_to_symbol:               Symbol Primitives.   (line  75)
* scm_string_compare:                    String Comparison.   (line  78)
* scm_string_compare_ci:                 String Comparison.   (line  88)
* scm_string_concatenate:                Reversing and Appending Strings.  (line  32)
* scm_string_concatenate_reverse:        Reversing and Appending Strings.  (line  37)
* scm_string_concatenate_reverse_shared: Reversing and Appending Strings.  (line  56)
* scm_string_concatenate_shared:         Reversing and Appending Strings.  (line  50)
* scm_string_contains:                   String Searching.    (line 129)
* scm_string_contains_ci:                String Searching.    (line 136)
* scm_string_copy:                       String Selection.    (line  28)
* scm_string_copy_x:                     String Modification. (line  40)
* scm_string_count:                      String Searching.    (line 118)
* scm_string_delete:                     Miscellaneous String Operations.  (line  51)
* scm_string_downcase:                   Alphabetic Case Mapping.  (line  33)
* scm_string_downcase_x:                 Alphabetic Case Mapping.  (line  38)
* scm_string_drop:                       String Selection.    (line  75)
* scm_string_drop_right:                 String Selection.    (line  83)
* scm_string_eq:                         String Comparison.   (line  97)
* scm_string_every:                      String Predicates.   (line  41)
* scm_string_fill_x:                     String Modification. (line  20)
* scm_string_filter:                     Miscellaneous String Operations.  (line  42)
* scm_string_fold:                       Mapping Folding and Unfolding.  (line  41)
* scm_string_fold_right:                 Mapping Folding and Unfolding.  (line  47)
* scm_string_for_each:                   Mapping Folding and Unfolding.  (line  20)
* scm_string_for_each_index:             Mapping Folding and Unfolding.  (line  25)
* scm_string_ge:                         String Comparison.   (line 118)
* scm_string_gt:                         String Comparison.   (line 110)
* scm_string_index:                      String Searching.    (line   7)
* scm_string_index_right:                String Searching.    (line  81)
* scm_string_join:                       String Constructors. (line  47)
* scm_string_le:                         String Comparison.   (line 114)
* scm_string_length:                     String Selection.    (line  11)
* scm_string_locale_ci_eq:               Text Collation.      (line  24)
* scm_string_locale_ci_gt:               Text Collation.      (line  16)
* scm_string_locale_ci_lt:               Text Collation.      (line  14)
* scm_string_locale_downcase:            Character Case Mapping.  (line  39)
* scm_string_locale_gt:                  Text Collation.      (line  12)
* scm_string_locale_lt:                  Text Collation.      (line  10)
* scm_string_locale_titlecase:           Character Case Mapping.  (line  44)
* scm_string_locale_upcase:              Character Case Mapping.  (line  34)
* scm_string_lt:                         String Comparison.   (line 105)
* scm_string_map:                        Mapping Folding and Unfolding.  (line   7)
* scm_string_map_x:                      Mapping Folding and Unfolding.  (line  13)
* scm_string_neq:                        String Comparison.   (line 101)
* scm_string_normalize_nfc:              String Comparison.   (line 216)
* scm_string_normalize_nfd:              String Comparison.   (line 208)
* scm_string_normalize_nfkc:             String Comparison.   (line 220)
* scm_string_normalize_nfkd:             String Comparison.   (line 212)
* scm_string_null_p:                     String Predicates.   (line  17)
* scm_string_p:                          String Predicates.   (line  10)
* scm_string_pad:                        String Selection.    (line  88)
* scm_string_pad_right:                  String Selection.    (line  89)
* scm_string_prefix_ci_p:                String Searching.    (line  65)
* scm_string_prefix_length:              String Searching.    (line  34)
* scm_string_prefix_length_ci:           String Searching.    (line  40)
* scm_string_prefix_p:                   String Searching.    (line  60)
* scm_string_ref:                        String Selection.    (line  18)
* scm_string_replace:                    Miscellaneous String Operations.  (line  29)
* scm_string_reverse:                    Reversing and Appending Strings.  (line   7)
* scm_string_reverse_x:                  Reversing and Appending Strings.  (line  12)
* scm_string_rindex:                     String Searching.    (line  20)
* scm_string_set_x:                      String Modification. (line  11)
* scm_string_skip:                       String Searching.    (line  94)
* scm_string_skip_right:                 String Searching.    (line 106)
* scm_string_split:                      List/String Conversion.  (line  17)
* scm_string_suffix_ci_p:                String Searching.    (line  76)
* scm_string_suffix_length:              String Searching.    (line  47)
* scm_string_suffix_length_ci:           String Searching.    (line  53)
* scm_string_suffix_p:                   String Searching.    (line  71)
* scm_string_tabulate:                   String Constructors. (line  40)
* scm_string_take:                       String Selection.    (line  71)
* scm_string_take_right:                 String Selection.    (line  79)
* scm_string_titlecase:                  Alphabetic Case Mapping.  (line  63)
* scm_string_titlecase_x:                Alphabetic Case Mapping.  (line  67)
* scm_string_tokenize:                   Miscellaneous String Operations.  (line  34)
* scm_string_to_char_set:                Creating Character Sets.  (line  29)
* scm_string_to_char_set_x:              Creating Character Sets.  (line  35)
* scm_string_to_list:                    List/String Conversion.  (line  13)
* scm_string_to_number:                  Conversion.          (line  17)
* scm_string_to_symbol:                  Symbol Primitives.   (line  67)
* scm_string_to_utf16:                   Bytevectors as Strings.  (line  25)
* scm_string_to_utf32:                   Bytevectors as Strings.  (line  26)
* scm_string_to_utf8:                    Bytevectors as Strings.  (line  24)
* scm_string_trim:                       String Selection.    (line 106)
* scm_string_trim_both:                  String Selection.    (line 108)
* scm_string_trim_right:                 String Selection.    (line 107)
* scm_string_unfold:                     Mapping Folding and Unfolding.  (line  53)
* scm_string_unfold_right:               Mapping Folding and Unfolding.  (line  68)
* scm_string_upcase:                     Alphabetic Case Mapping.  (line  18)
* scm_string_upcase_x:                   Alphabetic Case Mapping.  (line  23)
* scm_string_utf8_length:                Bytevectors as Strings.  (line  17)
* scm_string_xcopy_x:                    Miscellaneous String Operations.  (line  20)
* scm_strptime:                          Time.                (line 128)
* scm_struct_p:                          Structure Basics.    (line  46)
* scm_struct_ref:                        Structure Basics.    (line  50)
* scm_struct_ref_unboxed:                Structure Basics.    (line  69)
* scm_struct_set_x:                      Structure Basics.    (line  57)
* scm_struct_set_x_unboxed:              Structure Basics.    (line  70)
* scm_struct_vtable:                     Structure Basics.    (line  78)
* scm_struct_vtable_name:                Vtable Contents.     (line  46)
* scm_struct_vtable_p:                   Meta-Vtables.        (line  49)
* scm_substring:                         String Selection.    (line  35)
* scm_substring_copy:                    String Selection.    (line  27)
* scm_substring_copy <1>:                String Selection.    (line  53)
* scm_substring_downcase:                Alphabetic Case Mapping.  (line  32)
* scm_substring_downcase_x:              Alphabetic Case Mapping.  (line  37)
* scm_substring_fill_x:                  String Modification. (line  19)
* scm_substring_fill_x <1>:              String Modification. (line  25)
* scm_substring_hash:                    String Comparison.   (line 152)
* scm_substring_hash_ci:                 String Comparison.   (line 159)
* scm_substring_move_x:                  String Modification. (line  34)
* scm_substring_read_only:               String Selection.    (line  58)
* scm_substring_shared:                  String Selection.    (line  47)
* scm_substring_to_list:                 List/String Conversion.  (line  12)
* scm_substring_upcase:                  Alphabetic Case Mapping.  (line  17)
* scm_substring_upcase_x:                Alphabetic Case Mapping.  (line  22)
* scm_sum:                               Arithmetic.          (line  13)
* scm_supports_source_properties_p:      Source Properties.   (line  33)
* SCM_SYMBOL:                            Snarfing Macros.     (line  44)
* scm_symbol_fref:                       Symbol Props.        (line  30)
* scm_symbol_fset_x:                     Symbol Props.        (line  34)
* scm_symbol_hash:                       Symbol Keys.         (line  54)
* scm_symbol_interned_p:                 Symbol Uninterned.   (line  53)
* scm_symbol_p:                          Symbol Primitives.   (line  10)
* scm_symbol_pref:                       Symbol Props.        (line  38)
* scm_symbol_pset_x:                     Symbol Props.        (line  42)
* scm_symbol_to_keyword:                 Keyword Procedures.  (line  15)
* scm_symbol_to_string:                  Symbol Primitives.   (line  22)
* scm_symlink:                           File System.         (line 219)
* scm_sync:                              File System.         (line 275)
* scm_syserror:                          Handling Errors.     (line  85)
* scm_syserror_msg:                      Handling Errors.     (line  86)
* scm_system:                            Processes.           (line 185)
* scm_system_async_mark:                 Asyncs.              (line  12)
* scm_system_async_mark_for_thread:      Asyncs.              (line  13)
* scm_system_star:                       Processes.           (line 195)
* scm_sys_library_dir:                   Build Config.        (line  40)
* scm_sys_make_void_port:                Void Ports.          (line  10)
* scm_sys_package_data_dir:              Build Config.        (line  34)
* scm_sys_search_load_path:              Load Paths.          (line  62)
* scm_sys_site_ccache_dir:               Build Config.        (line  56)
* scm_sys_site_dir:                      Build Config.        (line  50)
* scm_sys_string_dump:                   String Internals.    (line  30)
* scm_take_c32vector:                    SRFI-4 API.          (line 244)
* scm_take_c64vector:                    SRFI-4 API.          (line 245)
* scm_take_f32vector:                    SRFI-4 API.          (line 242)
* scm_take_f64vector:                    SRFI-4 API.          (line 243)
* scm_take_locale_string:                Conversion to/from C.  (line  59)
* scm_take_locale_stringn:               Conversion to/from C.  (line  60)
* scm_take_locale_symbol:                Symbol Primitives.   (line 142)
* scm_take_locale_symboln:               Symbol Primitives.   (line 143)
* scm_take_s16vector:                    SRFI-4 API.          (line 232)
* scm_take_s32vector:                    SRFI-4 API.          (line 236)
* scm_take_s64vector:                    SRFI-4 API.          (line 240)
* scm_take_s8vector:                     SRFI-4 API.          (line 228)
* scm_take_u16vector:                    SRFI-4 API.          (line 230)
* scm_take_u32vector:                    SRFI-4 API.          (line 234)
* scm_take_u64vector:                    SRFI-4 API.          (line 238)
* scm_take_u8vector:                     SRFI-4 API.          (line 226)
* scm_tcgetpgrp:                         Terminals and Ptys.  (line  22)
* scm_tcsetpgrp:                         Terminals and Ptys.  (line  35)
* scm_textdomain:                        Gettext Support.     (line  75)
* scm_thread_exited_p:                   Threads.             (line  73)
* scm_thread_p:                          Threads.             (line  55)
* scm_throw:                             Throw.               (line  15)
* scm_thunk_p:                           Procedure Properties.  (line  22)
* scm_timed_lock_mutex:                  Mutexes and Condition Variables.  (line 133)
* scm_times:                             Time.                (line 142)
* scm_tmpfile:                           File System.         (line 333)
* scm_tmpnam:                            File System.         (line 295)
* scm_total_processor_count:             Threads.             (line 110)
* scm_to_bool:                           Booleans.            (line  83)
* scm_to_char:                           Integers.            (line 144)
* scm_to_char_set:                       Creating Character Sets.  (line  77)
* scm_to_double:                         Reals and Rationals. (line 133)
* scm_to_int:                            Integers.            (line 149)
* scm_to_int16:                          Integers.            (line 161)
* scm_to_int32:                          Integers.            (line 163)
* scm_to_int64:                          Integers.            (line 165)
* scm_to_int8:                           Integers.            (line 159)
* scm_to_intmax:                         Integers.            (line 167)
* scm_to_intptr_t:                       Integers.            (line 169)
* scm_to_locale_string:                  Conversion to/from C.  (line  67)
* scm_to_locale_stringbuf:               Conversion to/from C.  (line  93)
* scm_to_locale_stringn:                 Conversion to/from C.  (line  68)
* scm_to_long:                           Integers.            (line 151)
* scm_to_long_long:                      Integers.            (line 153)
* scm_to_mpz:                            Integers.            (line 211)
* scm_to_pointer:                        Foreign Variables.   (line  77)
* scm_to_port_string:                    Conversion to/from C.  (line 206)
* scm_to_port_stringn:                   Conversion to/from C.  (line 207)
* scm_to_ptrdiff_t:                      Integers.            (line 158)
* scm_to_schar:                          Integers.            (line 145)
* scm_to_short:                          Integers.            (line 147)
* scm_to_signed_integer:                 Integers.            (line 129)
* scm_to_size_t:                         Integers.            (line 155)
* scm_to_sockaddr:                       Network Socket Address.  (line  88)
* scm_to_ssize_t:                        Integers.            (line 156)
* scm_to_uchar:                          Integers.            (line 146)
* scm_to_uint:                           Integers.            (line 150)
* scm_to_uint16:                         Integers.            (line 162)
* scm_to_uint32:                         Integers.            (line 164)
* scm_to_uint64:                         Integers.            (line 166)
* scm_to_uint8:                          Integers.            (line 160)
* scm_to_uintmax:                        Integers.            (line 168)
* scm_to_uintptr_t:                      Integers.            (line 157)
* scm_to_uintptr_t <1>:                  Integers.            (line 170)
* scm_to_ulong:                          Integers.            (line 152)
* scm_to_ulong_long:                     Integers.            (line 154)
* scm_to_unsigned_integer:               Integers.            (line 131)
* scm_to_ushort:                         Integers.            (line 148)
* scm_transpose_array:                   Shared Arrays.       (line 121)
* scm_truncate_divide:                   Arithmetic.          (line 154)
* scm_truncate_file:                     Random Access.       (line  37)
* scm_truncate_number:                   Arithmetic.          (line  57)
* scm_truncate_quotient:                 Arithmetic.          (line 155)
* scm_truncate_remainder:                Arithmetic.          (line 156)
* scm_try_mutex:                         Mutexes and Condition Variables.  (line 159)
* scm_ttyname:                           Terminals and Ptys.  (line  12)
* scm_typed_array_p:                     Array Procedures.    (line  30)
* scm_tzset:                             Time.                (line 106)
* scm_u16vector:                         SRFI-4 API.          (line  79)
* scm_u16vector_elements:                SRFI-4 API.          (line 261)
* scm_u16vector_length:                  SRFI-4 API.          (line 107)
* scm_u16vector_p:                       SRFI-4 API.          (line  23)
* scm_u16vector_ref:                     SRFI-4 API.          (line 133)
* scm_u16vector_set_x:                   SRFI-4 API.          (line 160)
* scm_u16vector_to_list:                 SRFI-4 API.          (line 187)
* scm_u16vector_writable_elements:       SRFI-4 API.          (line 289)
* scm_u32vector:                         SRFI-4 API.          (line  81)
* scm_u32vector_elements:                SRFI-4 API.          (line 265)
* scm_u32vector_length:                  SRFI-4 API.          (line 109)
* scm_u32vector_p:                       SRFI-4 API.          (line  25)
* scm_u32vector_ref:                     SRFI-4 API.          (line 135)
* scm_u32vector_set_x:                   SRFI-4 API.          (line 162)
* scm_u32vector_to_list:                 SRFI-4 API.          (line 189)
* scm_u32vector_writable_elements:       SRFI-4 API.          (line 293)
* scm_u64vector:                         SRFI-4 API.          (line  83)
* scm_u64vector_elements:                SRFI-4 API.          (line 269)
* scm_u64vector_length:                  SRFI-4 API.          (line 111)
* scm_u64vector_p:                       SRFI-4 API.          (line  27)
* scm_u64vector_ref:                     SRFI-4 API.          (line 137)
* scm_u64vector_set_x:                   SRFI-4 API.          (line 164)
* scm_u64vector_to_list:                 SRFI-4 API.          (line 191)
* scm_u64vector_writable_elements:       SRFI-4 API.          (line 297)
* scm_u8vector:                          SRFI-4 API.          (line  77)
* scm_u8vector_elements:                 SRFI-4 API.          (line 257)
* scm_u8vector_length:                   SRFI-4 API.          (line 105)
* scm_u8vector_p:                        SRFI-4 API.          (line  21)
* scm_u8vector_ref:                      SRFI-4 API.          (line 131)
* scm_u8vector_set_x:                    SRFI-4 API.          (line 158)
* scm_u8vector_to_list:                  SRFI-4 API.          (line 185)
* scm_u8vector_writable_elements:        SRFI-4 API.          (line 285)
* scm_u8_list_to_bytevector:             Bytevectors and Integer Lists.  (line  19)
* scm_ucs_range_to_char_set:             Creating Character Sets.  (line  52)
* scm_ucs_range_to_char_set_x:           Creating Character Sets.  (line  64)
* scm_uint_list_to_bytevector:           Bytevectors and Integer Lists.  (line  34)
* scm_umask:                             Processes.           (line  16)
* scm_uname:                             System Identification.  (line  10)
* SCM_UNBNDP:                            Immediate objects.   (line  59)
* SCM_UNDEFINED:                         Immediate objects.   (line  48)
* scm_ungetc:                            Using Ports from C.  (line  36)
* scm_unget_byte:                        Using Ports from C.  (line  35)
* scm_unget_bytes:                       Using Ports from C.  (line  33)
* scm_unget_bytevector:                  Binary I/O.          (line  73)
* scm_unlock_mutex:                      Mutexes and Condition Variables.  (line 164)
* SCM_UNPACK:                            The SCM Type.        (line  27)
* scm_unread_string:                     Venerable Port Interfaces.  (line  75)
* SCM_UNSPECIFIED:                       Immediate objects.   (line  39)
* scm_usleep:                            Signals.             (line 140)
* scm_utf16_to_string:                   Bytevectors as Strings.  (line  36)
* scm_utf32_to_string:                   Bytevectors as Strings.  (line  37)
* scm_utf8_to_string:                    Bytevectors as Strings.  (line  35)
* scm_utime:                             File System.         (line 154)
* scm_values:                            Multiple Values.     (line  20)
* SCM_VARIABLE:                          Snarfing Macros.     (line  80)
* scm_variable_bound_p:                  Variables.           (line  47)
* SCM_VARIABLE_INIT:                     Snarfing Macros.     (line  86)
* scm_variable_p:                        Variables.           (line  66)
* scm_variable_ref:                      Variables.           (line  52)
* scm_variable_set_x:                    Variables.           (line  57)
* scm_variable_unset_x:                  Variables.           (line  62)
* scm_vector:                            Vector Creation.     (line  14)
* scm_vector_copy:                       Vector Accessors.    (line  57)
* scm_vector_elements:                   Vector Accessing from C.  (line  38)
* scm_vector_fill_x:                     Vector Accessors.    (line  52)
* scm_vector_length:                     Vector Accessors.    (line  11)
* scm_vector_move_left_x:                Vector Accessors.    (line  61)
* scm_vector_move_right_x:               Vector Accessors.    (line  73)
* scm_vector_p:                          Vector Creation.     (line  47)
* scm_vector_ref:                        Vector Accessors.    (line  18)
* scm_vector_set_x:                      Vector Accessors.    (line  41)
* scm_vector_to_list:                    Vector Creation.     (line  23)
* scm_vector_writable_elements:          Vector Accessing from C.  (line  67)
* scm_version:                           Build Config.        (line  14)
* scm_waitpid:                           Processes.           (line 127)
* scm_wait_condition_variable:           Mutexes and Condition Variables.  (line 197)
* scm_weak_key_hash_table_p:             Weak hash tables.    (line  29)
* scm_weak_value_hash_table_p:           Weak hash tables.    (line  30)
* scm_weak_vector:                       Weak vectors.        (line  14)
* scm_weak_vector_p:                     Weak vectors.        (line  20)
* scm_weak_vector_ref:                   Weak vectors.        (line  24)
* scm_weak_vector_set_x:                 Weak vectors.        (line  29)
* scm_without_guile:                     Blocking.            (line  19)
* scm_with_continuation_barrier:         Continuation Barriers.  (line  11)
* scm_with_dynamic_state:                Fluids and Dynamic States.  (line 164)
* scm_with_fluid:                        Fluids and Dynamic States.  (line 103)
* scm_with_fluids:                       Fluids and Dynamic States.  (line 108)
* scm_with_guile:                        Initialization.      (line  19)
* scm_with_throw_handler:                Throw Handlers.      (line  13)
* scm_wrong_num_args:                    Handling Errors.     (line  97)
* scm_wrong_type_arg:                    Handling Errors.     (line  98)
* scm_wrong_type_arg_msg:                Handling Errors.     (line 100)
* scm_xsubstring:                        Miscellaneous String Operations.  (line   7)
* scm_yield:                             Threads.             (line  77)
* scm_zero_p:                            Comparison.          (line  36)
* script-stexi-documentation:            texinfo reflection.  (line  23)
* sdocbook-flatten:                      texinfo docbook.     (line  22)
* search-for-pattern:                    PEG API Reference.   (line 150)
* search-path:                           Load Paths.          (line 121)
* second:                                SRFI-1 Selectors.    (line   7)
* seconds->time:                         SRFI-18 Time.        (line  21)
* seed->random-state:                    Random.              (line  63)
* seek:                                  Random Access.       (line   6)
* select:                                Ports and File Descriptors.  (line 339)
* select-kids:                           SXPath.              (line 227)
* send:                                  Network Sockets and Communication.  (line 257)
* sendfile:                              File System.         (line 181)
* sendto:                                Network Sockets and Communication.  (line 297)
* sendto <1>:                            Network Sockets and Communication.  (line 298)
* sendto <2>:                            Network Sockets and Communication.  (line 299)
* sendto <3>:                            Network Sockets and Communication.  (line 301)
* serious-condition?:                    SRFI-35.             (line 131)
* serious-condition? <1>:                rnrs conditions.     (line  84)
* serve-one-client:                      Web Server.          (line 143)
* servent:aliases:                       Network Databases.   (line 335)
* servent:name:                          Network Databases.   (line 333)
* servent:port:                          Network Databases.   (line 337)
* servent:proto:                         Network Databases.   (line 339)
* set!:                                  rnrs base.           (line  78)
* set! <1>:                              Slot Description Example.  (line  29)
* set-box!:                              SRFI-111.            (line  19)
* set-buffered-input-continuation?!:     Buffered Input.      (line  40)
* set-car!:                              Pairs.               (line 151)
* set-car! <1>:                          Inlined Scheme Instructions.  (line  93)
* set-cdr!:                              Pairs.               (line 156)
* set-cdr! <1>:                          Inlined Scheme Instructions.  (line  96)
* set-current-dynamic-state:             Fluids and Dynamic States.  (line 156)
* set-current-error-port:                Default Ports.       (line  48)
* set-current-input-port:                Default Ports.       (line  46)
* set-current-module:                    Module System Reflection.  (line  21)
* set-current-output-port:               Default Ports.       (line  47)
* set-field:                             SRFI-9 Records.      (line 127)
* set-fields:                            SRFI-9 Records.      (line 137)
* set-object-properties!:                Object Properties.   (line  61)
* set-object-property!:                  Object Properties.   (line  69)
* set-port-column!:                      Textual I/O.         (line 146)
* set-port-conversion-strategy!:         Encoding.            (line  69)
* set-port-encoding!:                    Encoding.            (line  16)
* set-port-encoding! <1>:                Character Encoding of Source Files.  (line  43)
* set-port-filename!:                    File Ports.          (line 167)
* set-port-line!:                        Textual I/O.         (line 147)
* set-port-position!:                    rnrs io ports.       (line  76)
* set-port-revealed!:                    Ports and File Descriptors.  (line  65)
* set-procedure-properties!:             Procedure Properties.  (line  47)
* set-procedure-property!:               Procedure Properties.  (line  51)
* set-program-arguments:                 Runtime Environment. (line   8)
* set-readline-input-port!:              Readline Functions.  (line  21)
* set-readline-output-port!:             Readline Functions.  (line  22)
* set-readline-prompt!:                  Readline Functions.  (line  59)
* set-record-type-printer!:              SRFI-9 Records.      (line  86)
* set-source-properties!:                Source Properties.   (line  44)
* set-source-property!:                  Source Properties.   (line  49)
* set-struct-vtable-name!:               Vtable Contents.     (line  45)
* set-symbol-property!:                  Symbol Props.        (line  52)
* set-time-nanosecond!:                  SRFI-19 Time.        (line  50)
* set-time-second!:                      SRFI-19 Time.        (line  51)
* set-time-type!:                        SRFI-19 Time.        (line  49)
* set-tm:gmtoff:                         Time.                (line  52)
* set-tm:hour:                           Time.                (line  30)
* set-tm:isdst:                          Time.                (line  48)
* set-tm:mday:                           Time.                (line  33)
* set-tm:min:                            Time.                (line  27)
* set-tm:mon:                            Time.                (line  36)
* set-tm:sec:                            Time.                (line  24)
* set-tm:wday:                           Time.                (line  42)
* set-tm:yday:                           Time.                (line  45)
* set-tm:year:                           Time.                (line  39)
* set-tm:zone:                           Time.                (line  61)
* set-vm-trace-level!:                   VM Hooks.            (line  93)
* setaffinity:                           Processes.           (line 353)
* setegid:                               Processes.           (line  95)
* setenv:                                Runtime Environment. (line  70)
* seteuid:                               Processes.           (line  88)
* setgid:                                Processes.           (line  82)
* setgr:                                 User Information.    (line  90)
* setgrent:                              User Information.    (line  77)
* setgroups:                             Processes.           (line  68)
* sethost:                               Network Databases.   (line 225)
* sethostent:                            Network Databases.   (line 207)
* sethostname:                           System Identification.  (line  34)
* setitimer:                             Signals.             (line 155)
* setlocale:                             Locales.             (line   6)
* setnet:                                Network Databases.   (line 275)
* setnetent:                             Network Databases.   (line 260)
* setpgid:                               Processes.           (line 107)
* setpriority:                           Processes.           (line 316)
* setproto:                              Network Databases.   (line 322)
* setprotoent:                           Network Databases.   (line 307)
* setpw:                                 User Information.    (line  47)
* setpwent:                              User Information.    (line  34)
* setserv:                               Network Databases.   (line 383)
* setservent:                            Network Databases.   (line 368)
* setsid:                                Processes.           (line 114)
* setsockopt:                            Network Sockets and Communication.  (line  58)
* setter:                                Procedures with Setters.  (line  57)
* setuid:                                Processes.           (line  76)
* setvbuf:                               Buffering.           (line  64)
* seventh:                               SRFI-1 Selectors.    (line  12)
* shallow-clone:                         GOOPS Object Miscellany.  (line  28)
* shallow-clone <1>:                     GOOPS Object Miscellany.  (line  29)
* shared-array-increments:               Shared Arrays.       (line  94)
* shared-array-offset:                   Shared Arrays.       (line  99)
* shared-array-root:                     Shared Arrays.       (line 103)
* shift:                                 Shift and Reset.     (line  71)
* show:                                  Help Commands.       (line  23)
* shutdown:                              Network Sockets and Communication.  (line 132)
* sigaction:                             Signals.             (line  48)
* signal-condition-variable:             Mutexes and Condition Variables.  (line 215)
* simple-conditions:                     rnrs conditions.     (line  42)
* simple-format:                         Simple Output.       (line   9)
* sin:                                   Scientific.          (line  22)
* sin <1>:                               rnrs base.           (line 147)
* sinh:                                  Scientific.          (line  51)
* sint-list->bytevector:                 Bytevectors and Integer Lists.  (line  38)
* sixth:                                 SRFI-1 Selectors.    (line  11)
* sizeof:                                Foreign Structs.     (line  12)
* size_t:                                Array Procedures.    (line 133)
* skip-until:                            sxml ssax input-parse.  (line  43)
* skip-while:                            sxml ssax input-parse.  (line  45)
* sleep:                                 Signals.             (line 137)
* sloppy-assoc:                          Sloppy Alist Functions.  (line  53)
* sloppy-assq:                           Sloppy Alist Functions.  (line  43)
* sloppy-assv:                           Sloppy Alist Functions.  (line  48)
* slot-bound-using-class?:               Accessing Slots.     (line  54)
* slot-bound?:                           Accessing Slots.     (line  12)
* slot-definition-accessor:              Slots.               (line  31)
* slot-definition-allocation:            Slots.               (line  16)
* slot-definition-getter:                Slots.               (line  21)
* slot-definition-init-form:             Slots.               (line  42)
* slot-definition-init-keyword:          Slots.               (line  53)
* slot-definition-init-thunk:            Slots.               (line  48)
* slot-definition-init-value:            Slots.               (line  36)
* slot-definition-name:                  Slots.               (line  10)
* slot-definition-options:               Slots.               (line  13)
* slot-definition-setter:                Slots.               (line  26)
* slot-exists-using-class?:              Accessing Slots.     (line  50)
* slot-exists?:                          Accessing Slots.     (line   9)
* slot-init-function:                    Slots.               (line  59)
* slot-missing:                          Accessing Slots.     (line 110)
* slot-missing <1>:                      Accessing Slots.     (line 111)
* slot-missing <2>:                      Accessing Slots.     (line 112)
* slot-missing <3>:                      Accessing Slots.     (line 113)
* slot-ref:                              Instance Creation.   (line  48)
* slot-ref <1>:                          Accessing Slots.     (line  20)
* slot-ref-using-class:                  Accessing Slots.     (line  63)
* slot-set!:                             Instance Creation.   (line  48)
* slot-set! <1>:                         Accessing Slots.     (line  31)
* slot-set-using-class!:                 Accessing Slots.     (line  75)
* slot-unbound:                          Accessing Slots.     (line 123)
* slot-unbound <1>:                      Accessing Slots.     (line 124)
* slot-unbound <2>:                      Accessing Slots.     (line 125)
* slot-unbound <3>:                      Accessing Slots.     (line 126)
* sockaddr:addr:                         Network Socket Address.  (line  44)
* sockaddr:fam:                          Network Socket Address.  (line  37)
* sockaddr:flowinfo:                     Network Socket Address.  (line  52)
* sockaddr:path:                         Network Socket Address.  (line  41)
* sockaddr:port:                         Network Socket Address.  (line  48)
* sockaddr:scopeid:                      Network Socket Address.  (line  56)
* socket:                                Network Sockets and Communication.  (line  20)
* socketpair:                            Network Sockets and Communication.  (line  47)
* sort:                                  Sorting.             (line  47)
* sort!:                                 Sorting.             (line  53)
* sort-list:                             Sorting.             (line  75)
* sort-list!:                            Sorting.             (line  80)
* sorted?:                               Sorting.             (line  41)
* source-properties:                     Source Properties.   (line  54)
* source-property:                       Source Properties.   (line  58)
* source:addr:                           Compiled Procedures. (line  75)
* source:column:                         Compiled Procedures. (line  77)
* source:file:                           Compiled Procedures. (line  78)
* source:line:                           Compiled Procedures. (line  76)
* span:                                  SRFI-1 Searching.    (line  30)
* span!:                                 SRFI-1 Searching.    (line  31)
* spawn-coop-repl-server:                Cooperative REPL Servers.  (line  27)
* spawn-server:                          REPL Servers.        (line  30)
* split-and-decode-uri-path:             URIs.                (line 107)
* split-at:                              SRFI-1 Selectors.    (line  43)
* split-at!:                             SRFI-1 Selectors.    (line  44)
* sqrt:                                  Scientific.          (line   9)
* sqrt <1>:                              rnrs base.           (line 143)
* SRV:send-reply:                        Transforming SXML.   (line  58)
* ssax:complete-start-tag:               SSAX.                (line 203)
* ssax:make-elem-parser:                 SSAX.                (line 217)
* ssax:make-parser:                      SSAX.                (line 213)
* ssax:make-pi-parser:                   SSAX.                (line 215)
* ssax:read-attributes:                  SSAX.                (line 201)
* ssax:read-cdata-body:                  SSAX.                (line 197)
* ssax:read-char-data:                   SSAX.                (line 208)
* ssax:read-char-ref:                    SSAX.                (line 199)
* ssax:read-external-id:                 SSAX.                (line 206)
* ssax:read-markup-token:                SSAX.                (line 195)
* ssax:read-pi-body-as-string:           SSAX.                (line 191)
* ssax:reverse-collect-str-drop-ws:      SSAX.                (line 193)
* ssax:skip-internal-dtd:                SSAX.                (line 189)
* ssax:uri-string->symbol:               SSAX.                (line 187)
* ssax:xml->sxml:                        SSAX.                (line 211)
* stable-sort:                           Sorting.             (line  60)
* stable-sort!:                          Sorting.             (line  65)
* stack-id:                              Stacks.              (line  10)
* stack-length:                          Stacks.              (line  14)
* stack-ref:                             Stacks.              (line  18)
* stack?:                                Stacks.              (line   6)
* standard-error-port:                   rnrs io ports.       (line  92)
* standard-input-port:                   rnrs io ports.       (line  90)
* standard-output-port:                  rnrs io ports.       (line  91)
* start-stack:                           Stack Capture.       (line  52)
* stat:                                  File System.         (line  49)
* stat:atime:                            File System.         (line  85)
* stat:atimensec:                        File System.         (line  92)
* stat:blksize:                          File System.         (line 100)
* stat:blocks:                           File System.         (line 104)
* stat:ctime:                            File System.         (line  89)
* stat:ctimensec:                        File System.         (line  94)
* stat:dev:                              File System.         (line  64)
* stat:gid:                              File System.         (line  77)
* stat:ino:                              File System.         (line  66)
* stat:mode:                             File System.         (line  69)
* stat:mtime:                            File System.         (line  87)
* stat:mtimensec:                        File System.         (line  93)
* stat:nlink:                            File System.         (line  73)
* stat:perms:                            File System.         (line 116)
* stat:rdev:                             File System.         (line  79)
* stat:size:                             File System.         (line  83)
* stat:type:                             File System.         (line 112)
* stat:uid:                              File System.         (line  75)
* static-patch!:                         Constant Instructions.  (line  58)
* static-ref:                            Constant Instructions.  (line  43)
* static-set!:                           Constant Instructions.  (line  54)
* statistics:                            System Commands.     (line   9)
* statprof:                              Statprof.            (line 105)
* statprof-accumulated-time:             Statprof.            (line 148)
* statprof-active?:                      Statprof.            (line 128)
* statprof-call-data->stats:             Statprof.            (line 170)
* statprof-call-data-calls:              Statprof.            (line 165)
* statprof-call-data-cum-samples:        Statprof.            (line 166)
* statprof-call-data-name:               Statprof.            (line 164)
* statprof-call-data-self-samples:       Statprof.            (line 167)
* statprof-display:                      Statprof.            (line 182)
* statprof-fetch-call-tree:              Statprof.            (line 198)
* statprof-fetch-stacks:                 Statprof.            (line 194)
* statprof-fold-call-data:               Statprof.            (line 154)
* statprof-proc-call-data:               Statprof.            (line 160)
* statprof-reset:                        Statprof.            (line 136)
* statprof-sample-count:                 Statprof.            (line 151)
* statprof-start:                        Statprof.            (line 132)
* statprof-stats-%-time-in-proc:         Statprof.            (line 174)
* statprof-stats-calls:                  Statprof.            (line 177)
* statprof-stats-cum-secs-in-proc:       Statprof.            (line 175)
* statprof-stats-cum-secs-per-call:      Statprof.            (line 179)
* statprof-stats-proc-name:              Statprof.            (line 173)
* statprof-stats-self-secs-in-proc:      Statprof.            (line 176)
* statprof-stats-self-secs-per-call:     Statprof.            (line 178)
* statprof-stop:                         Statprof.            (line 133)
* status:exit-val:                       Processes.           (line 168)
* status:stop-sig:                       Processes.           (line 179)
* status:term-sig:                       Processes.           (line 174)
* step:                                  Debug Commands.      (line  73)
* stexi->plain-text:                     texinfo plain-text.  (line  15)
* stexi->shtml:                          texinfo html.        (line  31)
* stexi->sxml:                           texinfo.             (line  73)
* stexi->texi:                           texinfo serialize.   (line  14)
* stexi-extract-index:                   texinfo indexing.    (line  17)
* stop-server-and-clients!:              REPL Servers.        (line  39)
* stream:                                SRFI-41 Stream Library.  (line  52)
* stream->list:                          SRFI-41 Stream Library.  (line  64)
* stream->list <1>:                      Streams.             (line  85)
* stream->list&length:                   Streams.             (line  92)
* stream->reversed-list:                 Streams.             (line  88)
* stream->reversed-list&length:          Streams.             (line  97)
* stream->vector:                        Streams.             (line 102)
* stream-append:                         SRFI-41 Stream Library.  (line  76)
* stream-car:                            SRFI-41 Stream Primitives.  (line  43)
* stream-car <1>:                        Streams.             (line  58)
* stream-cdr:                            SRFI-41 Stream Primitives.  (line  49)
* stream-cdr <1>:                        Streams.             (line  61)
* stream-concat:                         SRFI-41 Stream Library.  (line  83)
* stream-cons:                           SRFI-41 Stream Primitives.  (line  16)
* stream-constant:                       SRFI-41 Stream Library.  (line  90)
* stream-drop:                           SRFI-41 Stream Library.  (line  97)
* stream-drop-while:                     SRFI-41 Stream Library.  (line 105)
* stream-filter:                         SRFI-41 Stream Library.  (line 111)
* stream-fold:                           SRFI-41 Stream Library.  (line 118)
* stream-fold <1>:                       Streams.             (line 105)
* stream-for-each:                       SRFI-41 Stream Library.  (line 132)
* stream-for-each <1>:                   Streams.             (line 114)
* stream-from:                           SRFI-41 Stream Library.  (line 137)
* stream-iterate:                        SRFI-41 Stream Library.  (line 145)
* stream-lambda:                         SRFI-41 Stream Primitives.  (line  53)
* stream-length:                         SRFI-41 Stream Library.  (line 150)
* stream-let:                            SRFI-41 Stream Library.  (line 155)
* stream-map:                            SRFI-41 Stream Library.  (line 181)
* stream-map <1>:                        Streams.             (line 122)
* stream-match:                          SRFI-41 Stream Library.  (line 188)
* stream-null?:                          SRFI-41 Stream Primitives.  (line  34)
* stream-null? <1>:                      Streams.             (line  65)
* stream-of:                             SRFI-41 Stream Library.  (line 263)
* stream-pair?:                          SRFI-41 Stream Primitives.  (line  38)
* stream-range:                          SRFI-41 Stream Library.  (line 308)
* stream-ref:                            SRFI-41 Stream Library.  (line 326)
* stream-reverse:                        SRFI-41 Stream Library.  (line 335)
* stream-scan:                           SRFI-41 Stream Library.  (line 342)
* stream-take:                           SRFI-41 Stream Library.  (line 354)
* stream-take-while:                     SRFI-41 Stream Library.  (line 359)
* stream-unfold:                         SRFI-41 Stream Library.  (line 365)
* stream-unfolds:                        SRFI-41 Stream Library.  (line 388)
* stream-zip:                            SRFI-41 Stream Library.  (line 431)
* stream?:                               SRFI-41 Stream Primitives.  (line  27)
* strerror:                              Error Reporting.     (line  29)
* strftime:                              Time.                (line 112)
* string:                                String Constructors. (line  10)
* string <1>:                            rnrs base.           (line 210)
* string->bytevector:                    Representing Strings as Bytes.  (line  37)
* string->bytevector <1>:                R6RS Transcoders.    (line 180)
* string->char-set:                      Creating Character Sets.  (line  28)
* string->char-set!:                     Creating Character Sets.  (line  34)
* string->date:                          SRFI-19 String to date.  (line   6)
* string->header:                        HTTP.                (line  29)
* string->keyword:                       SRFI-88.             (line  35)
* string->list:                          List/String Conversion.  (line  11)
* string->list <1>:                      rnrs base.           (line 215)
* string->number:                        Conversion.          (line  16)
* string->number <1>:                    rnrs base.           (line 207)
* string->number <2>:                    Constant Instructions.  (line  69)
* string->pointer:                       Void Pointers and Byte Access.  (line  42)
* string->relative-ref:                  URIs.                (line 165)
* string->symbol:                        Symbol Primitives.   (line  66)
* string->symbol <1>:                    rnrs base.           (line  17)
* string->symbol <2>:                    Constant Instructions.  (line  72)
* string->uri:                           URIs.                (line  57)
* string->uri-reference:                 URIs.                (line 161)
* string->utf16:                         Bytevectors as Strings.  (line  22)
* string->utf32:                         Bytevectors as Strings.  (line  23)
* string->utf8:                          Bytevectors as Strings.  (line  21)
* string->wrapped-lines:                 texinfo string-utils.  (line 173)
* string-any:                            String Predicates.   (line  23)
* string-append:                         Reversing and Appending Strings.  (line  17)
* string-append <1>:                     rnrs base.           (line 231)
* string-append/shared:                  Reversing and Appending Strings.  (line  26)
* string-bytes-per-char:                 String Internals.    (line  24)
* string-capitalize:                     Alphabetic Case Mapping.  (line  48)
* string-capitalize!:                    Alphabetic Case Mapping.  (line  53)
* string-ci->symbol:                     Symbol Primitives.   (line  74)
* string-ci-hash:                        SRFI-69 Hash table algorithms.  (line  19)
* string-ci-hash <1>:                    rnrs hashtables.     (line 120)
* string-ci<:                            String Comparison.   (line 131)
* string-ci<=:                           String Comparison.   (line 141)
* string-ci<=?:                          String Comparison.   (line  59)
* string-ci<=? <1>:                      rnrs unicode.        (line  55)
* string-ci<>:                           String Comparison.   (line 126)
* string-ci<?:                           String Comparison.   (line  54)
* string-ci<? <1>:                       rnrs unicode.        (line  53)
* string-ci=:                            String Comparison.   (line 121)
* string-ci=?:                           String Comparison.   (line  49)
* string-ci=? <1>:                       rnrs unicode.        (line  52)
* string-ci>:                            String Comparison.   (line 136)
* string-ci>=:                           String Comparison.   (line 146)
* string-ci>=?:                          String Comparison.   (line  70)
* string-ci>=? <1>:                      rnrs unicode.        (line  56)
* string-ci>?:                           String Comparison.   (line  65)
* string-ci>? <1>:                       rnrs unicode.        (line  54)
* string-compare:                        String Comparison.   (line  76)
* string-compare-ci:                     String Comparison.   (line  86)
* string-concatenate:                    Reversing and Appending Strings.  (line  31)
* string-concatenate-reverse:            Reversing and Appending Strings.  (line  36)
* string-concatenate-reverse/shared:     Reversing and Appending Strings.  (line  54)
* string-concatenate/shared:             Reversing and Appending Strings.  (line  49)
* string-contains:                       String Searching.    (line 127)
* string-contains-ci:                    String Searching.    (line 134)
* string-copy:                           String Selection.    (line  26)
* string-copy <1>:                       rnrs base.           (line 220)
* string-copy!:                          String Modification. (line  39)
* string-count:                          String Searching.    (line 117)
* string-delete:                         Miscellaneous String Operations.  (line  50)
* string-downcase:                       Alphabetic Case Mapping.  (line  31)
* string-downcase <1>:                   rnrs unicode.        (line  46)
* string-downcase!:                      Alphabetic Case Mapping.  (line  36)
* string-drop:                           String Selection.    (line  74)
* string-drop-right:                     String Selection.    (line  82)
* string-every:                          String Predicates.   (line  40)
* string-fill!:                          String Modification. (line  18)
* string-filter:                         Miscellaneous String Operations.  (line  41)
* string-fold:                           Mapping Folding and Unfolding.  (line  40)
* string-fold-right:                     Mapping Folding and Unfolding.  (line  46)
* string-foldcase:                       rnrs unicode.        (line  48)
* string-for-each:                       Mapping Folding and Unfolding.  (line  19)
* string-for-each <1>:                   rnrs base.           (line 234)
* string-for-each-index:                 Mapping Folding and Unfolding.  (line  24)
* string-hash:                           String Comparison.   (line 151)
* string-hash <1>:                       SRFI-69 Hash table algorithms.  (line  18)
* string-hash <2>:                       rnrs hashtables.     (line 115)
* string-hash-ci:                        String Comparison.   (line 158)
* string-index:                          String Searching.    (line   6)
* string-index-right:                    String Searching.    (line  80)
* string-join:                           String Constructors. (line  46)
* string-length:                         String Selection.    (line  10)
* string-length <1>:                     rnrs base.           (line 218)
* string-length <2>:                     Inlined Scheme Instructions.  (line  71)
* string-locale-ci<?:                    Text Collation.      (line  13)
* string-locale-ci=?:                    Text Collation.      (line  23)
* string-locale-ci>?:                    Text Collation.      (line  15)
* string-locale-downcase:                Character Case Mapping.  (line  38)
* string-locale-titlecase:               Character Case Mapping.  (line  43)
* string-locale-upcase:                  Character Case Mapping.  (line  33)
* string-locale<?:                       Text Collation.      (line   9)
* string-locale>?:                       Text Collation.      (line  11)
* string-map:                            Mapping Folding and Unfolding.  (line   6)
* string-map!:                           Mapping Folding and Unfolding.  (line  12)
* string-match:                          Regexp Functions.    (line  25)
* string-normalize-nfc:                  String Comparison.   (line 215)
* string-normalize-nfc <1>:              rnrs unicode.        (line  62)
* string-normalize-nfd:                  String Comparison.   (line 207)
* string-normalize-nfd <1>:              rnrs unicode.        (line  60)
* string-normalize-nfkc:                 String Comparison.   (line 219)
* string-normalize-nfkc <1>:             rnrs unicode.        (line  63)
* string-normalize-nfkd:                 String Comparison.   (line 211)
* string-normalize-nfkd <1>:             rnrs unicode.        (line  61)
* string-null?:                          String Predicates.   (line  16)
* string-pad:                            String Selection.    (line  86)
* string-pad-right:                      String Selection.    (line  87)
* string-prefix-ci?:                     String Searching.    (line  63)
* string-prefix-length:                  String Searching.    (line  32)
* string-prefix-length-ci:               String Searching.    (line  38)
* string-prefix?:                        String Searching.    (line  58)
* string-ref:                            String Selection.    (line  17)
* string-ref <1>:                        rnrs base.           (line 219)
* string-ref <2>:                        Inlined Scheme Instructions.  (line  75)
* string-replace:                        Miscellaneous String Operations.  (line  27)
* string-reverse:                        Reversing and Appending Strings.  (line   6)
* string-reverse!:                       Reversing and Appending Strings.  (line  11)
* string-rindex:                         String Searching.    (line  19)
* string-set!:                           String Modification. (line  10)
* string-set! <1>:                       Inlined Scheme Instructions.  (line  80)
* string-skip:                           String Searching.    (line  93)
* string-skip-right:                     String Searching.    (line 105)
* string-split:                          List/String Conversion.  (line  16)
* string-suffix-ci?:                     String Searching.    (line  74)
* string-suffix-length:                  String Searching.    (line  45)
* string-suffix-length-ci:               String Searching.    (line  51)
* string-suffix?:                        String Searching.    (line  69)
* string-tabulate:                       String Constructors. (line  39)
* string-take:                           String Selection.    (line  70)
* string-take-right:                     String Selection.    (line  78)
* string-titlecase:                      Alphabetic Case Mapping.  (line  62)
* string-titlecase <1>:                  rnrs unicode.        (line  47)
* string-titlecase!:                     Alphabetic Case Mapping.  (line  66)
* string-tokenize:                       Miscellaneous String Operations.  (line  33)
* string-trim:                           String Selection.    (line 103)
* string-trim-both:                      String Selection.    (line 105)
* string-trim-right:                     String Selection.    (line 104)
* string-unfold:                         Mapping Folding and Unfolding.  (line  52)
* string-unfold-right:                   Mapping Folding and Unfolding.  (line  67)
* string-upcase:                         Alphabetic Case Mapping.  (line  16)
* string-upcase <1>:                     rnrs unicode.        (line  45)
* string-upcase!:                        Alphabetic Case Mapping.  (line  21)
* string-utf8-length:                    Bytevectors as Strings.  (line  16)
* string-xcopy!:                         Miscellaneous String Operations.  (line  18)
* string<:                               String Comparison.   (line 104)
* string<=:                              String Comparison.   (line 113)
* string<=?:                             String Comparison.   (line  34)
* string<=? <1>:                         rnrs base.           (line 227)
* string<>:                              String Comparison.   (line 100)
* string<?:                              String Comparison.   (line  29)
* string<? <1>:                          rnrs base.           (line 225)
* string=:                               String Comparison.   (line  96)
* string=?:                              String Comparison.   (line  20)
* string=? <1>:                          rnrs base.           (line 224)
* string>:                               String Comparison.   (line 109)
* string>=:                              String Comparison.   (line 117)
* string>=?:                             String Comparison.   (line  44)
* string>=? <1>:                         rnrs base.           (line 228)
* string>?:                              String Comparison.   (line  39)
* string>? <1>:                          rnrs base.           (line 226)
* string?:                               String Predicates.   (line   9)
* string? <1>:                           rnrs base.           (line  71)
* strptime:                              Time.                (line 127)
* strtod:                                Number Input and Output.  (line  12)
* strtod <1>:                            Number Input and Output.  (line  25)
* struct-ref:                            Structure Basics.    (line  49)
* struct-ref <1>:                        Inlined Scheme Instructions.  (line  50)
* struct-ref/immediate:                  Inlined Scheme Instructions.  (line  59)
* struct-ref/unboxed:                    Structure Basics.    (line  67)
* struct-set!:                           Structure Basics.    (line  56)
* struct-set! <1>:                       Inlined Scheme Instructions.  (line  54)
* struct-set!/immediate:                 Inlined Scheme Instructions.  (line  60)
* struct-set!/unboxed:                   Structure Basics.    (line  68)
* struct-vtable:                         Structure Basics.    (line  77)
* struct-vtable <1>:                     Inlined Scheme Instructions.  (line  41)
* struct-vtable-name:                    Vtable Contents.     (line  44)
* struct-vtable?:                        Meta-Vtables.        (line  48)
* struct?:                               Structure Basics.    (line  45)
* sub:                                   Inlined Mathematical Instructions.  (line  22)
* sub/immediate:                         Inlined Mathematical Instructions.  (line  25)
* subr-call:                             Trampoline Instructions.  (line  19)
* substring:                             String Selection.    (line  34)
* substring <1>:                         rnrs base.           (line 221)
* substring-fill!:                       String Modification. (line  24)
* substring-move!:                       String Modification. (line  33)
* substring/copy:                        String Selection.    (line  52)
* substring/read-only:                   String Selection.    (line  57)
* substring/shared:                      String Selection.    (line  46)
* subtract-duration:                     SRFI-19 Time.        (line  94)
* subtract-duration!:                    SRFI-19 Time.        (line  95)
* supports-source-properties?:           Source Properties.   (line  32)
* suspendable-continuation?:             Prompt Primitives.   (line 147)
* sxml->string:                          Reading and Writing XML.  (line 141)
* sxml->xml:                             Reading and Writing XML.  (line 136)
* sxml-match:                            sxml-match.          (line  46)
* sxml-match-let:                        sxml-match.          (line 321)
* sxml-match-let*:                       sxml-match.          (line 323)
* sxpath:                                SXPath.              (line 300)
* symbol:                                Symbol Primitives.   (line  47)
* symbol->keyword:                       Keyword Procedures.  (line  14)
* symbol->keyword <1>:                   Constant Instructions.  (line  75)
* symbol->string:                        Symbol Primitives.   (line  21)
* symbol->string <1>:                    rnrs base.           (line  16)
* symbol-append:                         Symbol Primitives.   (line  58)
* symbol-fref:                           Symbol Props.        (line  29)
* symbol-fset!:                          Symbol Props.        (line  33)
* symbol-hash:                           Symbol Keys.         (line  53)
* symbol-hash <1>:                       rnrs hashtables.     (line 116)
* symbol-interned?:                      Symbol Uninterned.   (line  52)
* symbol-pref:                           Symbol Props.        (line  37)
* symbol-prefix-proc:                    Using Guile Modules. (line  75)
* symbol-property:                       Symbol Props.        (line  45)
* symbol-property-remove!:               Symbol Props.        (line  57)
* symbol-pset!:                          Symbol Props.        (line  41)
* symbol=?:                              rnrs base.           (line 127)
* symbol?:                               Symbol Primitives.   (line   9)
* symbol? <1>:                           rnrs base.           (line  15)
* symlink:                               File System.         (line 218)
* sync:                                  File System.         (line 274)
* sync-q!:                               Queues.              (line  79)
* syntax:                                Syntax Case.         (line  63)
* syntax <1>:                            rnrs syntax-case.    (line  23)
* syntax->datum:                         Syntax Case.         (line 188)
* syntax->datum <1>:                     rnrs syntax-case.    (line  48)
* syntax-case:                           Syntax Case.         (line   9)
* syntax-case <1>:                       rnrs syntax-case.    (line  20)
* syntax-error:                          Syntax Rules.        (line 218)
* syntax-local-binding:                  Syntax Transformer Helpers.  (line  76)
* syntax-locally-bound-identifiers:      Syntax Transformer Helpers.  (line 145)
* syntax-module:                         Syntax Transformer Helpers.  (line  72)
* syntax-parameterize:                   Syntax Parameters.   (line  34)
* syntax-rules:                          Syntax Rules.        (line   9)
* syntax-rules <1>:                      rnrs base.           (line  90)
* syntax-source:                         Syntax Transformer Helpers.  (line  23)
* syntax-violation:                      rnrs syntax-case.    (line  54)
* syntax-violation <1>:                  rnrs syntax-case.    (line  55)
* syntax-violation-form:                 rnrs conditions.     (line 141)
* syntax-violation-subform:              rnrs conditions.     (line 142)
* syntax-violation?:                     rnrs conditions.     (line 140)
* system:                                Processes.           (line 184)
* system*:                               Processes.           (line 194)
* system-async-mark:                     Asyncs.              (line  11)
* system-error-errno:                    Conventions.         (line  66)
* system-file-name-convention:           File System.         (line 366)
* tail-apply:                            Trampoline Instructions.  (line  38)
* tail-call:                             Procedure Call and Return Instructions.  (line  49)
* tail-call-label:                       Procedure Call and Return Instructions.  (line  54)
* tail-call/shuffle:                     Procedure Call and Return Instructions.  (line  58)
* take:                                  SRFI-1 Selectors.    (line  21)
* take!:                                 SRFI-1 Selectors.    (line  22)
* take-after:                            SXPath.              (line 175)
* take-right:                            SRFI-1 Selectors.    (line  31)
* take-until:                            SXPath.              (line 158)
* take-while:                            SRFI-1 Searching.    (line  18)
* take-while!:                           SRFI-1 Searching.    (line  19)
* tan:                                   Scientific.          (line  28)
* tan <1>:                               rnrs base.           (line 149)
* tanh:                                  Scientific.          (line  57)
* tcgetpgrp:                             Terminals and Ptys.  (line  21)
* tcsetpgrp:                             Terminals and Ptys.  (line  34)
* tenth:                                 SRFI-1 Selectors.    (line  15)
* terminated-thread-exception?:          SRFI-18 Exceptions.  (line  38)
* texi->stexi:                           texinfo.             (line  68)
* texi-command-depth:                    texinfo.             (line  51)
* texi-fragment->stexi:                  texinfo.             (line  63)
* text-content-type?:                    Responses.           (line 123)
* textdomain:                            Gettext Support.     (line  74)
* textual-port?:                         rnrs io ports.       (line  46)
* the-environment:                       Local Evaluation.    (line  12)
* third:                                 SRFI-1 Selectors.    (line   8)
* thread-exited?:                        Threads.             (line  72)
* thread-join!:                          SRFI-18 Threads.     (line  77)
* thread-name:                           SRFI-18 Threads.     (line  35)
* thread-sleep!:                         SRFI-18 Threads.     (line  55)
* thread-specific:                       SRFI-18 Threads.     (line  39)
* thread-specific-set!:                  SRFI-18 Threads.     (line  40)
* thread-start!:                         SRFI-18 Threads.     (line  45)
* thread-terminate!:                     SRFI-18 Threads.     (line  61)
* thread-yield!:                         SRFI-18 Threads.     (line  49)
* thread?:                               Threads.             (line  54)
* thread? <1>:                           SRFI-18 Threads.     (line  21)
* throw:                                 Throw.               (line  14)
* thunk?:                                Procedure Properties.  (line  21)
* time:                                  Profile Commands.    (line   6)
* time->seconds:                         SRFI-18 Time.        (line  20)
* time-difference:                       SRFI-19 Time.        (line  84)
* time-difference!:                      SRFI-19 Time.        (line  85)
* time-monotonic->date:                  SRFI-19 Time/Date conversions.  (line  19)
* time-monotonic->time-tai:              SRFI-19 Time/Date conversions.  (line  20)
* time-monotonic->time-tai!:             SRFI-19 Time/Date conversions.  (line  21)
* time-monotonic->time-utc:              SRFI-19 Time/Date conversions.  (line  22)
* time-monotonic->time-utc!:             SRFI-19 Time/Date conversions.  (line  23)
* time-nanosecond:                       SRFI-19 Time.        (line  47)
* time-resolution:                       SRFI-19 Time.        (line  72)
* time-second:                           SRFI-19 Time.        (line  48)
* time-tai->date:                        SRFI-19 Time/Date conversions.  (line  24)
* time-tai->julian-day:                  SRFI-19 Time/Date conversions.  (line  25)
* time-tai->modified-julian-day:         SRFI-19 Time/Date conversions.  (line  26)
* time-tai->time-monotonic:              SRFI-19 Time/Date conversions.  (line  27)
* time-tai->time-monotonic!:             SRFI-19 Time/Date conversions.  (line  28)
* time-tai->time-utc:                    SRFI-19 Time/Date conversions.  (line  29)
* time-tai->time-utc!:                   SRFI-19 Time/Date conversions.  (line  30)
* time-type:                             SRFI-19 Time.        (line  46)
* time-utc->date:                        SRFI-19 Time/Date conversions.  (line  31)
* time-utc->julian-day:                  SRFI-19 Time/Date conversions.  (line  32)
* time-utc->modified-julian-day:         SRFI-19 Time/Date conversions.  (line  33)
* time-utc->time-monotonic:              SRFI-19 Time/Date conversions.  (line  34)
* time-utc->time-monotonic!:             SRFI-19 Time/Date conversions.  (line  35)
* time-utc->time-tai:                    SRFI-19 Time/Date conversions.  (line  36)
* time-utc->time-tai!:                   SRFI-19 Time/Date conversions.  (line  37)
* time<=?:                               SRFI-19 Time.        (line  76)
* time<?:                                SRFI-19 Time.        (line  77)
* time=?:                                SRFI-19 Time.        (line  78)
* time>=?:                               SRFI-19 Time.        (line  79)
* time>?:                                SRFI-19 Time.        (line  80)
* time?:                                 SRFI-18 Time.        (line  17)
* time? <1>:                             SRFI-19 Time.        (line  40)
* times:                                 Time.                (line 141)
* tm:gmtoff:                             Time.                (line  51)
* tm:hour:                               Time.                (line  29)
* tm:isdst:                              Time.                (line  47)
* tm:mday:                               Time.                (line  32)
* tm:min:                                Time.                (line  26)
* tm:mon:                                Time.                (line  35)
* tm:sec:                                Time.                (line  23)
* tm:wday:                               Time.                (line  41)
* tm:yday:                               Time.                (line  44)
* tm:year:                               Time.                (line  38)
* tm:zone:                               Time.                (line  60)
* tmpfile:                               File System.         (line 332)
* tmpnam:                                File System.         (line 294)
* tms:clock:                             Time.                (line 147)
* tms:cstime:                            Time.                (line 159)
* tms:cutime:                            Time.                (line 155)
* tms:stime:                             Time.                (line 152)
* tms:utime:                             Time.                (line 150)
* toplevel-box:                          Top-Level Environment Instructions.  (line  27)
* total-processor-count:                 Threads.             (line 109)
* touch:                                 Futures.             (line  97)
* trace:                                 Profile Commands.    (line  16)
* trace-calls-in-procedure:              Tracing Traps.       (line  77)
* trace-calls-to-procedure:              Tracing Traps.       (line  73)
* trace-instructions-in-procedure:       Tracing Traps.       (line  82)
* tracepoint:                            Debug Commands.      (line  63)
* transcoded-port:                       rnrs io ports.       (line  54)
* transcoder-codec:                      R6RS Transcoders.    (line 169)
* transcoder-eol-style:                  R6RS Transcoders.    (line 170)
* transcoder-error-handling-mode:        R6RS Transcoders.    (line 171)
* transform-string:                      texinfo string-utils.  (line  34)
* transpose-array:                       Shared Arrays.       (line 120)
* trap-at-procedure-call:                Low-Level Traps.     (line  32)
* trap-at-procedure-ip-in-range:         Low-Level Traps.     (line  57)
* trap-at-source-location:               Low-Level Traps.     (line  64)
* trap-calls-in-dynamic-extent:          Low-Level Traps.     (line  85)
* trap-calls-to-procedure:               Low-Level Traps.     (line  96)
* trap-enabled?:                         Trap States.         (line  37)
* trap-frame-finish:                     Low-Level Traps.     (line  70)
* trap-in-dynamic-extent:                Low-Level Traps.     (line  77)
* trap-in-procedure:                     Low-Level Traps.     (line  35)
* trap-instructions-in-dynamic-extent:   Low-Level Traps.     (line  91)
* trap-instructions-in-procedure:        Low-Level Traps.     (line  52)
* trap-matching-instructions:            Low-Level Traps.     (line 105)
* trap-name:                             Trap States.         (line  33)
* truncate:                              Arithmetic.          (line  56)
* truncate <1>:                          Random Access.       (line  36)
* truncate <2>:                          rnrs base.           (line 244)
* truncate-file:                         Random Access.       (line  36)
* truncate-quotient:                     Arithmetic.          (line 152)
* truncate-remainder:                    Arithmetic.          (line 153)
* truncate/:                             Arithmetic.          (line 151)
* truncated-print:                       Pretty Printing.     (line  72)
* try-mutex:                             Mutexes and Condition Variables.  (line 158)
* ttyname:                               Terminals and Ptys.  (line  11)
* typed-array?:                          Array Procedures.    (line  29)
* tzset:                                 Time.                (line 105)
* u16vector:                             SRFI-4 API.          (line  67)
* u16vector->list:                       SRFI-4 API.          (line 175)
* u16vector-length:                      SRFI-4 API.          (line  95)
* u16vector-ref:                         SRFI-4 API.          (line 121)
* u16vector-set!:                        SRFI-4 API.          (line 148)
* u16vector?:                            SRFI-4 API.          (line  11)
* u32vector:                             SRFI-4 API.          (line  69)
* u32vector->list:                       SRFI-4 API.          (line 177)
* u32vector-length:                      SRFI-4 API.          (line  97)
* u32vector-ref:                         SRFI-4 API.          (line 123)
* u32vector-set!:                        SRFI-4 API.          (line 150)
* u32vector?:                            SRFI-4 API.          (line  13)
* u64->scm:                              Unboxed Integer Arithmetic.  (line  18)
* u64vector:                             SRFI-4 API.          (line  71)
* u64vector->list:                       SRFI-4 API.          (line 179)
* u64vector-length:                      SRFI-4 API.          (line  99)
* u64vector-ref:                         SRFI-4 API.          (line 125)
* u64vector-set!:                        SRFI-4 API.          (line 152)
* u64vector?:                            SRFI-4 API.          (line  15)
* u8-list->bytevector:                   Bytevectors and Integer Lists.  (line  18)
* u8vector:                              SRFI-4 API.          (line  65)
* u8vector->list:                        SRFI-4 API.          (line 173)
* u8vector-length:                       SRFI-4 API.          (line  93)
* u8vector-ref:                          SRFI-4 API.          (line 119)
* u8vector-set!:                         SRFI-4 API.          (line 146)
* u8vector?:                             SRFI-4 API.          (line   9)
* uadd:                                  Unboxed Integer Arithmetic.  (line  57)
* uadd/immediate:                        Unboxed Integer Arithmetic.  (line  64)
* ucs-range->char-set:                   Creating Character Sets.  (line  51)
* ucs-range->char-set!:                  Creating Character Sets.  (line  63)
* uint-list->bytevector:                 Bytevectors and Integer Lists.  (line  33)
* ulogand:                               Unboxed Integer Arithmetic.  (line  70)
* ulogior:                               Unboxed Integer Arithmetic.  (line  71)
* ulogsub:                               Unboxed Integer Arithmetic.  (line  73)
* ulogxor:                               Unboxed Integer Arithmetic.  (line  72)
* ulsh:                                  Unboxed Integer Arithmetic.  (line  77)
* ulsh/immediate:                        Unboxed Integer Arithmetic.  (line  85)
* umask:                                 Processes.           (line  15)
* umul:                                  Unboxed Integer Arithmetic.  (line  59)
* umul/immediate:                        Unboxed Integer Arithmetic.  (line  66)
* uname:                                 System Identification.  (line   9)
* unbox:                                 SRFI-111.            (line  16)
* uncaught-exception-reason:             SRFI-18 Exceptions.  (line  44)
* uncaught-exception?:                   SRFI-18 Exceptions.  (line  43)
* undefined-violation?:                  rnrs conditions.     (line 149)
* unfold:                                SRFI-1 Fold and Map. (line 111)
* unfold-right:                          SRFI-1 Fold and Map. (line 138)
* unget-bytevector:                      Binary I/O.          (line  72)
* unget-char:                            Textual I/O.         (line  37)
* unget-string:                          Textual I/O.         (line  42)
* uninstall-suspendable-ports!:          Non-Blocking I/O.    (line 105)
* unless:                                Conditionals.        (line  35)
* unless <1>:                            rnrs control.        (line  11)
* unlink:                                File System.         (line 172)
* unlock-mutex:                          Mutexes and Condition Variables.  (line 163)
* unquote:                               Expression Syntax.   (line  77)
* unquote <1>:                           rnrs base.           (line 111)
* unquote-splicing:                      Expression Syntax.   (line  88)
* unquote-splicing <1>:                  rnrs base.           (line 112)
* unread-char:                           Venerable Port Interfaces.  (line  70)
* unread-string:                         Venerable Port Interfaces.  (line  74)
* unsetenv:                              Runtime Environment. (line  80)
* unsyntax:                              rnrs syntax-case.    (line  25)
* unsyntax-splicing:                     rnrs syntax-case.    (line  26)
* unwind:                                Dynamic Environment Instructions.  (line  55)
* unzip1:                                SRFI-1 Length Append etc.  (line  39)
* unzip2:                                SRFI-1 Length Append etc.  (line  40)
* unzip3:                                SRFI-1 Length Append etc.  (line  41)
* unzip4:                                SRFI-1 Length Append etc.  (line  42)
* unzip5:                                SRFI-1 Length Append etc.  (line  43)
* up:                                    Debug Commands.      (line  15)
* update-direct-method!:                 Customizing Class Redefinition.  (line  32)
* update-direct-subclass!:               Customizing Class Redefinition.  (line  36)
* update-instance-for-different-class:   Changing the Class of an Instance.  (line  43)
* uri->string:                           URIs.                (line  61)
* uri-decode:                            URIs.                (line  70)
* uri-encode:                            URIs.                (line  96)
* uri-fragment:                          URIs.                (line  51)
* uri-host:                              URIs.                (line  47)
* uri-path:                              URIs.                (line  49)
* uri-port:                              URIs.                (line  48)
* uri-query:                             URIs.                (line  50)
* uri-reference?:                        URIs.                (line 137)
* uri-scheme:                            URIs.                (line  45)
* uri-userinfo:                          URIs.                (line  46)
* uri?:                                  URIs.                (line  39)
* urlify:                                texinfo html.        (line  35)
* ursh:                                  Unboxed Integer Arithmetic.  (line  82)
* ursh/immediate:                        Unboxed Integer Arithmetic.  (line  86)
* use-modules:                           Using Guile Modules. (line  79)
* usleep:                                Signals.             (line 138)
* usub:                                  Unboxed Integer Arithmetic.  (line  58)
* usub/immediate:                        Unboxed Integer Arithmetic.  (line  65)
* utf-16-codec:                          R6RS Transcoders.    (line  32)
* utf-8-codec:                           R6RS Transcoders.    (line  31)
* utf16->string:                         Bytevectors as Strings.  (line  33)
* utf32->string:                         Bytevectors as Strings.  (line  34)
* utf8->string:                          Bytevectors as Strings.  (line  32)
* utime:                                 File System.         (line 152)
* utsname:machine:                       System Identification.  (line  27)
* utsname:nodename:                      System Identification.  (line  19)
* utsname:release:                       System Identification.  (line  21)
* utsname:sysname:                       System Identification.  (line  17)
* utsname:version:                       System Identification.  (line  24)
* valid-header?:                         HTTP.                (line  98)
* value-history-enabled?:                Value History.       (line  42)
* values:                                Multiple Values.     (line  19)
* values <1>:                            rnrs base.           (line 354)
* variable-bound?:                       Variables.           (line  46)
* variable-ref:                          Variables.           (line  51)
* variable-set!:                         Variables.           (line  56)
* variable-unset!:                       Variables.           (line  61)
* variable?:                             Variables.           (line  65)
* vector:                                Vector Creation.     (line  12)
* vector <1>:                            SRFI-43 Constructors.  (line  12)
* vector <2>:                            rnrs base.           (line 336)
* vector->list:                          Vector Creation.     (line  22)
* vector->list <1>:                      SRFI-43 Conversion.  (line   6)
* vector->list <2>:                      rnrs base.           (line 341)
* vector->stream:                        Streams.             (line  69)
* vector-any:                            SRFI-43 Searching.   (line  67)
* vector-append:                         SRFI-43 Constructors.  (line  69)
* vector-binary-search:                  SRFI-43 Searching.   (line  42)
* vector-concatenate:                    SRFI-43 Constructors.  (line  76)
* vector-copy:                           Vector Accessors.    (line  56)
* vector-copy <1>:                       SRFI-43 Constructors.  (line  41)
* vector-copy!:                          SRFI-43 Mutators.    (line  20)
* vector-count:                          SRFI-43 Iteration.   (line  38)
* vector-empty?:                         SRFI-43 Predicates.  (line   9)
* vector-every:                          SRFI-43 Searching.   (line  73)
* vector-fill!:                          Vector Accessors.    (line  51)
* vector-fill! <1>:                      SRFI-43 Mutators.    (line  12)
* vector-fill! <2>:                      rnrs base.           (line 347)
* vector-fold:                           SRFI-43 Iteration.   (line   6)
* vector-fold-right:                     SRFI-43 Iteration.   (line  16)
* vector-for-each:                       SRFI-43 Iteration.   (line  33)
* vector-for-each <1>:                   rnrs base.           (line 332)
* vector-index:                          SRFI-43 Searching.   (line   6)
* vector-index-right:                    SRFI-43 Searching.   (line  18)
* vector-length:                         Vector Accessors.    (line  10)
* vector-length <1>:                     SRFI-43 Selectors.   (line   9)
* vector-length <2>:                     rnrs base.           (line 344)
* vector-length <3>:                     Inlined Scheme Instructions.  (line  20)
* vector-length <4>:                     Bytecode.            (line  26)
* vector-map:                            SRFI-43 Iteration.   (line  20)
* vector-map <1>:                        rnrs base.           (line 331)
* vector-map!:                           SRFI-43 Iteration.   (line  27)
* vector-move-left!:                     Vector Accessors.    (line  60)
* vector-move-right!:                    Vector Accessors.    (line  72)
* vector-ref:                            Vector Accessors.    (line  17)
* vector-ref <1>:                        SRFI-43 Selectors.   (line   6)
* vector-ref <2>:                        rnrs base.           (line 345)
* vector-ref <3>:                        Inlined Scheme Instructions.  (line  24)
* vector-ref/immediate:                  Inlined Scheme Instructions.  (line  29)
* vector-reverse!:                       SRFI-43 Mutators.    (line  16)
* vector-reverse-copy:                   SRFI-43 Constructors.  (line  62)
* vector-reverse-copy!:                  SRFI-43 Mutators.    (line  28)
* vector-set!:                           Vector Accessors.    (line  40)
* vector-set! <1>:                       SRFI-43 Mutators.    (line   6)
* vector-set! <2>:                       rnrs base.           (line 346)
* vector-set! <3>:                       Inlined Scheme Instructions.  (line  33)
* vector-set!/immediate:                 Inlined Scheme Instructions.  (line  37)
* vector-skip:                           SRFI-43 Searching.   (line  26)
* vector-skip-right:                     SRFI-43 Searching.   (line  34)
* vector-sort:                           rnrs sorting.        (line  10)
* vector-sort!:                          rnrs sorting.        (line  22)
* vector-swap!:                          SRFI-43 Mutators.    (line   9)
* vector-unfold:                         SRFI-43 Constructors.  (line  17)
* vector-unfold-right:                   SRFI-43 Constructors.  (line  33)
* vector=:                               SRFI-43 Predicates.  (line  13)
* vector?:                               Vector Creation.     (line  46)
* vector? <1>:                           SRFI-43 Predicates.  (line   6)
* vector? <2>:                           rnrs base.           (line 337)
* version:                               Build Config.        (line   9)
* vhash-assoc:                           VHashes.             (line  67)
* vhash-assq:                            VHashes.             (line  68)
* vhash-assv:                            VHashes.             (line  69)
* vhash-cons:                            VHashes.             (line  53)
* vhash-consq:                           VHashes.             (line  54)
* vhash-consv:                           VHashes.             (line  55)
* vhash-delete:                          VHashes.             (line  81)
* vhash-delq:                            VHashes.             (line  82)
* vhash-delv:                            VHashes.             (line  83)
* vhash-fold:                            VHashes.             (line  93)
* vhash-fold*:                           VHashes.             (line 100)
* vhash-fold-right:                      VHashes.             (line  94)
* vhash-foldq*:                          VHashes.             (line 101)
* vhash-foldv*:                          VHashes.             (line 102)
* vhash?:                                VHashes.             (line  50)
* violation?:                            rnrs conditions.     (line  95)
* vlist->list:                           VLists.              (line 133)
* vlist-append:                          VLists.              (line 127)
* vlist-cons:                            VLists.              (line  67)
* vlist-delete:                          VLists.              (line 118)
* vlist-drop:                            VLists.              (line 106)
* vlist-filter:                          VLists.              (line 114)
* vlist-fold:                            VLists.              (line  83)
* vlist-fold-right:                      VLists.              (line  84)
* vlist-for-each:                        VLists.              (line 103)
* vlist-head:                            VLists.              (line  70)
* vlist-length:                          VLists.              (line  92)
* vlist-map:                             VLists.              (line 100)
* vlist-null?:                           VLists.              (line  64)
* vlist-ref:                             VLists.              (line  88)
* vlist-reverse:                         VLists.              (line  96)
* vlist-tail:                            VLists.              (line  73)
* vlist-take:                            VLists.              (line 110)
* vlist-unfold:                          VLists.              (line 122)
* vlist-unfold-right:                    VLists.              (line 123)
* vlist?:                                VLists.              (line  56)
* vm-abort-continuation-hook:            VM Hooks.            (line  65)
* vm-apply-hook:                         VM Hooks.            (line  55)
* vm-next-hook:                          VM Hooks.            (line  40)
* vm-pop-continuation-hook:              VM Hooks.            (line  49)
* vm-push-continuation-hook:             VM Hooks.            (line  44)
* vm-restore-continuation-hook:          VM Hooks.            (line  73)
* vm-trace-level:                        VM Hooks.            (line  89)
* wait-condition-variable:               Mutexes and Condition Variables.  (line 196)
* waitpid:                               Processes.           (line 126)
* warning?:                              rnrs conditions.     (line  79)
* weak-key-hash-table?:                  Weak hash tables.    (line  26)
* weak-value-hash-table?:                Weak hash tables.    (line  27)
* weak-vector:                           Weak vectors.        (line  12)
* weak-vector-ref:                       Weak vectors.        (line  23)
* weak-vector-set!:                      Weak vectors.        (line  28)
* weak-vector?:                          Weak vectors.        (line  19)
* when:                                  Conditionals.        (line  34)
* when <1>:                              rnrs control.        (line  10)
* while:                                 while do.            (line  64)
* who-condition?:                        rnrs conditions.     (line 114)
* width:                                 Debug Commands.      (line  50)
* wind:                                  Dynamic Environment Instructions.  (line  47)
* with-code-coverage:                    Code Coverage.       (line  11)
* with-continuation-barrier:             Continuation Barriers.  (line  10)
* with-default-trap-handler:             High-Level Traps.    (line  26)
* with-dynamic-state:                    Fluids and Dynamic States.  (line 163)
* with-ellipsis:                         Syntax Case.         (line 285)
* with-error-to-file:                    File Ports.          (line 130)
* with-error-to-port:                    Default Ports.       (line  58)
* with-exception-handler:                SRFI-18 Exceptions.  (line  17)
* with-exception-handler <1>:            rnrs exceptions.     (line  28)
* with-fluid*:                           Fluids and Dynamic States.  (line 102)
* with-fluids:                           Fluids and Dynamic States.  (line 116)
* with-fluids*:                          Fluids and Dynamic States.  (line 107)
* with-input-from-file:                  File Ports.          (line 126)
* with-input-from-file <1>:              rnrs io simple.      (line  33)
* with-input-from-port:                  Default Ports.       (line  56)
* with-input-from-string:                String Ports.        (line  24)
* with-mutex:                            Mutexes and Condition Variables.  (line 226)
* with-output-to-file:                   File Ports.          (line 128)
* with-output-to-file <1>:               rnrs io simple.      (line  34)
* with-output-to-port:                   Default Ports.       (line  57)
* with-output-to-string:                 String Ports.        (line  19)
* with-parameters*:                      SRFI-39.             (line  14)
* with-readline-completion-function:     Readline Functions.  (line  76)
* with-ssax-error-to-port:               SSAX.                (line 153)
* with-syntax:                           Syntax Case.         (line 235)
* with-throw-handler:                    Throw Handlers.      (line  12)
* write:                                 Scheme Write.        (line   9)
* write <1>:                             rnrs io simple.      (line  59)
* write <2>:                             rnrs io simple.      (line  60)
* write <3>:                             GOOPS Object Miscellany.  (line  47)
* write-char:                            Venerable Port Interfaces.  (line  84)
* write-char <1>:                        rnrs io simple.      (line  61)
* write-char <2>:                        rnrs io simple.      (line  62)
* write-client:                          Web Server.          (line 130)
* write-header:                          HTTP.                (line 117)
* write-headers:                         HTTP.                (line 125)
* write-request:                         Requests.            (line  83)
* write-request-body:                    Requests.            (line  93)
* write-request-line:                    HTTP.                (line 149)
* write-response:                        Responses.           (line  56)
* write-response-body:                   Responses.           (line  84)
* write-response-line:                   HTTP.                (line 157)
* write-with-shared-structure:           SRFI-38.             (line  26)
* write-with-shared-structure <1>:       SRFI-38.             (line  27)
* write-with-shared-structure <2>:       SRFI-38.             (line  28)
* xcons:                                 SRFI-1 Constructors. (line   8)
* xml->sxml:                             Reading and Writing XML.  (line  12)
* xml-token-head:                        SSAX.                (line 163)
* xml-token-kind:                        SSAX.                (line 161)
* xml-token?:                            SSAX.                (line 155)
* xsubstring:                            Miscellaneous String Operations.  (line   6)
* yield:                                 Threads.             (line  76)
* zero?:                                 Comparison.          (line  35)
* zero? <1>:                             rnrs base.           (line 185)
* zip:                                   SRFI-1 Length Append etc.  (line  33)
